
20180814_paractice_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  000008ca  0000095e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000025  0080012e  0080012e  0000098c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000098c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000a28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d1f  00000000  00000000  00000aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a4  00000000  00000000  000017bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000587  00000000  00000000  00002163  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000110  00000000  00000000  000026ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a6  00000000  00000000  000027fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004c7  00000000  00000000  00002ca2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00003169  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	a6 c0       	rjmp	.+332    	; 0x18e <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea ec       	ldi	r30, 0xCA	; 202
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 32       	cpi	r26, 0x2E	; 46
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ae e2       	ldi	r26, 0x2E	; 46
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a3 35       	cpi	r26, 0x53	; 83
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	a5 d0       	rcall	.+330    	; 0x20e <main>
  c4:	00 c4       	rjmp	.+2048   	; 0x8c6 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <LCD_pulse_enable>:

#include "LCD.h"

void LCD_pulse_enable(void)
{
	PORT_CONTROL |= (1 << E_PIN);
  c8:	c7 9a       	sbi	0x18, 7	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ca:	8f e9       	ldi	r24, 0x9F	; 159
  cc:	9f e0       	ldi	r25, 0x0F	; 15
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <LCD_pulse_enable+0x6>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <LCD_pulse_enable+0xc>
  d4:	00 00       	nop
	_delay_ms(1);
	PORT_CONTROL &= ~(1 << E_PIN);
  d6:	c7 98       	cbi	0x18, 7	; 24
  d8:	8f e9       	ldi	r24, 0x9F	; 159
  da:	9f e0       	ldi	r25, 0x0F	; 15
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <LCD_pulse_enable+0x14>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <LCD_pulse_enable+0x1a>
  e2:	00 00       	nop
  e4:	08 95       	ret

000000e6 <LCD_write_data>:
	_delay_ms(1);
}

void LCD_write_data(uint8_t data)
{
	PORT_CONTROL |= (1 << RS_PIN);
  e6:	c5 9a       	sbi	0x18, 5	; 24
	PORT_DATA = data;
  e8:	85 bb       	out	0x15, r24	; 21
	LCD_pulse_enable();
  ea:	ee df       	rcall	.-36     	; 0xc8 <LCD_pulse_enable>
  ec:	8f e3       	ldi	r24, 0x3F	; 63
  ee:	9f e1       	ldi	r25, 0x1F	; 31
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <LCD_write_data+0xa>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <LCD_write_data+0x10>
  f6:	00 00       	nop
  f8:	08 95       	ret

000000fa <LCD_write_command>:
	_delay_ms(2);
}

void LCD_write_command(uint8_t command)
{
	PORT_CONTROL &= ~(1 << RS_PIN);
  fa:	c5 98       	cbi	0x18, 5	; 24
	PORT_DATA = command;
  fc:	85 bb       	out	0x15, r24	; 21
	LCD_pulse_enable();
  fe:	e4 df       	rcall	.-56     	; 0xc8 <LCD_pulse_enable>
 100:	8f e3       	ldi	r24, 0x3F	; 63
 102:	9f e1       	ldi	r25, 0x1F	; 31
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <LCD_write_command+0xa>
 108:	00 c0       	rjmp	.+0      	; 0x10a <LCD_write_command+0x10>
 10a:	00 00       	nop
 10c:	08 95       	ret

0000010e <LCD_clear>:
	_delay_ms(2);
}

void LCD_clear(void)
{
	LCD_write_command(COMMAND_CLEAR_DISPLAY);
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	f4 df       	rcall	.-24     	; 0xfa <LCD_write_command>
 112:	8f e3       	ldi	r24, 0x3F	; 63
 114:	9f e1       	ldi	r25, 0x1F	; 31
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <LCD_clear+0x8>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <LCD_clear+0xe>
 11c:	00 00       	nop
 11e:	08 95       	ret

00000120 <LCD_init>:
 120:	2f ef       	ldi	r18, 0xFF	; 255
 122:	80 e7       	ldi	r24, 0x70	; 112
 124:	92 e0       	ldi	r25, 0x02	; 2
 126:	21 50       	subi	r18, 0x01	; 1
 128:	80 40       	sbci	r24, 0x00	; 0
 12a:	90 40       	sbci	r25, 0x00	; 0
 12c:	e1 f7       	brne	.-8      	; 0x126 <LCD_init+0x6>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <LCD_init+0x10>
 130:	00 00       	nop
void LCD_init(void)
{
	_delay_ms(50);
	
	// 연결 핀을 출력을 설정
	DDR_DATA = 0xFF;
 132:	8f ef       	ldi	r24, 0xFF	; 255
 134:	84 bb       	out	0x14, r24	; 20
	PORT_DATA = 0x00;
 136:	15 ba       	out	0x15, r1	; 21
	DDR_CONTROL |= (1 << RS_PIN) | (1 << RW_PIN) | (1 << E_PIN);
 138:	87 b3       	in	r24, 0x17	; 23
 13a:	80 6e       	ori	r24, 0xE0	; 224
 13c:	87 bb       	out	0x17, r24	; 23
	
	// R/W 핀으로 LOW를 출력하여 쓰기 전용으로 사용
	PORT_CONTROL &= ~(1<< RW_PIN);
 13e:	c6 98       	cbi	0x18, 6	; 24
	
	LCD_write_command(COMMAND_8_BIT_MODE);
 140:	88 e3       	ldi	r24, 0x38	; 56
 142:	db df       	rcall	.-74     	; 0xfa <LCD_write_command>
	
	uint8_t command = 0x08 | (1 << COMMAND_DISPLAY_ON_OFF_BIT);
	LCD_write_command(command);
 144:	8c e0       	ldi	r24, 0x0C	; 12
	
	LCD_clear();
 146:	d9 df       	rcall	.-78     	; 0xfa <LCD_write_command>
	
	LCD_write_command(0x06);
 148:	e2 df       	rcall	.-60     	; 0x10e <LCD_clear>
 14a:	86 e0       	ldi	r24, 0x06	; 6
 14c:	d6 cf       	rjmp	.-84     	; 0xfa <LCD_write_command>
 14e:	08 95       	ret

00000150 <LCD_write_string>:
}

void LCD_write_string(char *string)
{
 150:	0f 93       	push	r16
 152:	1f 93       	push	r17
 154:	cf 93       	push	r28
 156:	fc 01       	movw	r30, r24
	uint8_t i;
	for(i = 0; string[i]; i ++)
 158:	80 81       	ld	r24, Z
 15a:	88 23       	and	r24, r24
 15c:	51 f0       	breq	.+20     	; 0x172 <LCD_write_string+0x22>
 15e:	8f 01       	movw	r16, r30
 160:	c0 e0       	ldi	r28, 0x00	; 0
	{
		LCD_write_data(string[i]);
 162:	c1 df       	rcall	.-126    	; 0xe6 <LCD_write_data>
}

void LCD_write_string(char *string)
{
	uint8_t i;
	for(i = 0; string[i]; i ++)
 164:	cf 5f       	subi	r28, 0xFF	; 255
 166:	f8 01       	movw	r30, r16
 168:	ec 0f       	add	r30, r28
 16a:	f1 1d       	adc	r31, r1
 16c:	80 81       	ld	r24, Z
 16e:	81 11       	cpse	r24, r1
 170:	f8 cf       	rjmp	.-16     	; 0x162 <LCD_write_string+0x12>
	{
		LCD_write_data(string[i]);
	}
}
 172:	cf 91       	pop	r28
 174:	1f 91       	pop	r17
 176:	0f 91       	pop	r16
 178:	08 95       	ret

0000017a <LCD_goto_XY>:
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 17a:	81 70       	andi	r24, 0x01	; 1
 17c:	6f 70       	andi	r22, 0x0F	; 15
 17e:	90 e4       	ldi	r25, 0x40	; 64
 180:	89 9f       	mul	r24, r25
 182:	60 0d       	add	r22, r0
 184:	11 24       	eor	r1, r1
 186:	86 2f       	mov	r24, r22
 188:	80 58       	subi	r24, 0x80	; 128
 18a:	b7 cf       	rjmp	.-146    	; 0xfa <LCD_write_command>
 18c:	08 95       	ret

0000018e <__vector_16>:
char day = 1;
char buff[30];
uint8_t hr=12, mm=00, ss=00, ms=00;

ISR(TIMER0_OVF_vect)
{
 18e:	1f 92       	push	r1
 190:	0f 92       	push	r0
 192:	0f b6       	in	r0, 0x3f	; 63
 194:	0f 92       	push	r0
 196:	11 24       	eor	r1, r1
 198:	2f 93       	push	r18
 19a:	3f 93       	push	r19
 19c:	8f 93       	push	r24
 19e:	9f 93       	push	r25
	count++;
 1a0:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <count>
 1a4:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <count+0x1>
 1a8:	01 96       	adiw	r24, 0x01	; 1
 1aa:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <count+0x1>
 1ae:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <count>
	if(count == 5)
 1b2:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <count>
 1b6:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <count+0x1>
 1ba:	05 97       	sbiw	r24, 0x05	; 5
 1bc:	e9 f4       	brne	.+58     	; 0x1f8 <__vector_16+0x6a>
	{
		count = 0;
 1be:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <count+0x1>
 1c2:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <count>
		state = !state;
 1c6:	20 91 31 01 	lds	r18, 0x0131	; 0x800131 <state>
 1ca:	30 91 32 01 	lds	r19, 0x0132	; 0x800132 <state+0x1>
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	23 2b       	or	r18, r19
 1d4:	11 f0       	breq	.+4      	; 0x1da <__vector_16+0x4c>
 1d6:	80 e0       	ldi	r24, 0x00	; 0
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <state+0x1>
 1de:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <state>
		if(state)
 1e2:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <state>
 1e6:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <state+0x1>
 1ea:	89 2b       	or	r24, r25
 1ec:	29 f0       	breq	.+10     	; 0x1f8 <__vector_16+0x6a>
		{
			ms++;
 1ee:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
 1f2:	8f 5f       	subi	r24, 0xFF	; 255
 1f4:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
		}
		
	}
	TCNT0 = 256 - 250;
 1f8:	86 e0       	ldi	r24, 0x06	; 6
 1fa:	82 bf       	out	0x32, r24	; 50
}
 1fc:	9f 91       	pop	r25
 1fe:	8f 91       	pop	r24
 200:	3f 91       	pop	r19
 202:	2f 91       	pop	r18
 204:	0f 90       	pop	r0
 206:	0f be       	out	0x3f, r0	; 63
 208:	0f 90       	pop	r0
 20a:	1f 90       	pop	r1
 20c:	18 95       	reti

0000020e <main>:

int main(void)
{
	//LCD
	LCD_init();
 20e:	88 df       	rcall	.-240    	; 0x120 <LCD_init>
	
	LCD_write_string("Hongsik's Clock");
 210:	82 e0       	ldi	r24, 0x02	; 2
 212:	91 e0       	ldi	r25, 0x01	; 1
 214:	9d df       	rcall	.-198    	; 0x150 <LCD_write_string>
 216:	2f ef       	ldi	r18, 0xFF	; 255
 218:	8d e3       	ldi	r24, 0x3D	; 61
 21a:	99 e4       	ldi	r25, 0x49	; 73
 21c:	21 50       	subi	r18, 0x01	; 1
 21e:	80 40       	sbci	r24, 0x00	; 0
 220:	90 40       	sbci	r25, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <main+0xe>
 224:	00 c0       	rjmp	.+0      	; 0x226 <main+0x18>
 226:	00 00       	nop
	
	//인터럽트
	//DDRD = 0xFF;
	//PORTD = 0x00;
	
	TCCR0 |= (1 << CS02) | (0 << CS01) | (0 << CS00); // 분주비
 228:	83 b7       	in	r24, 0x33	; 51
 22a:	84 60       	ori	r24, 0x04	; 4
 22c:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1 << TOIE0);
 22e:	87 b7       	in	r24, 0x37	; 55
 230:	81 60       	ori	r24, 0x01	; 1
 232:	87 bf       	out	0x37, r24	; 55
	
	sei();
 234:	78 94       	sei
    /* Replace with your application code */
    while (1) 
    {
		
		LCD_goto_XY(1,0);
		sprintf(buff, "%02d:%02d:%02d:%02d", hr, mm, ss, ms);
 236:	02 e1       	ldi	r16, 0x12	; 18
 238:	11 e0       	ldi	r17, 0x01	; 1
 23a:	c5 e3       	ldi	r28, 0x35	; 53
 23c:	d1 e0       	ldi	r29, 0x01	; 1
 23e:	ec 2e       	mov	r14, r28
 240:	fd 2e       	mov	r15, r29
	
    /* Replace with your application code */
    while (1) 
    {
		
		LCD_goto_XY(1,0);
 242:	60 e0       	ldi	r22, 0x00	; 0
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	99 df       	rcall	.-206    	; 0x17a <LCD_goto_XY>
		sprintf(buff, "%02d:%02d:%02d:%02d", hr, mm, ss, ms);
 248:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
 24c:	1f 92       	push	r1
 24e:	8f 93       	push	r24
 250:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <ss>
 254:	1f 92       	push	r1
 256:	8f 93       	push	r24
 258:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <mm>
 25c:	1f 92       	push	r1
 25e:	8f 93       	push	r24
 260:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 264:	1f 92       	push	r1
 266:	8f 93       	push	r24
 268:	1f 93       	push	r17
 26a:	0f 93       	push	r16
 26c:	df 93       	push	r29
 26e:	cf 93       	push	r28
		LCD_write_string(buff);
 270:	4f d0       	rcall	.+158    	; 0x310 <sprintf>
 272:	8e 2d       	mov	r24, r14
 274:	9f 2d       	mov	r25, r15
 276:	6c df       	rcall	.-296    	; 0x150 <LCD_write_string>
		
		if(day == 1)
 278:	8d b7       	in	r24, 0x3d	; 61
 27a:	9e b7       	in	r25, 0x3e	; 62
 27c:	0c 96       	adiw	r24, 0x0c	; 12
 27e:	0f b6       	in	r0, 0x3f	; 63
 280:	f8 94       	cli
 282:	9e bf       	out	0x3e, r25	; 62
 284:	0f be       	out	0x3f, r0	; 63
 286:	8d bf       	out	0x3d, r24	; 61
 288:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <day>
 28c:	81 30       	cpi	r24, 0x01	; 1
		LCD_write_string(" AM");
 28e:	19 f4       	brne	.+6      	; 0x296 <main+0x88>
 290:	86 e2       	ldi	r24, 0x26	; 38
 292:	91 e0       	ldi	r25, 0x01	; 1
 294:	5d df       	rcall	.-326    	; 0x150 <LCD_write_string>
		if(day == 0)
 296:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <day>
 29a:	81 11       	cpse	r24, r1
		LCD_write_string(" PM");
 29c:	03 c0       	rjmp	.+6      	; 0x2a4 <main+0x96>
 29e:	8a e2       	ldi	r24, 0x2A	; 42
 2a0:	91 e0       	ldi	r25, 0x01	; 1
 2a2:	56 df       	rcall	.-340    	; 0x150 <LCD_write_string>
		
		
		//시계
		if(hr >= 12)
 2a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2a8:	8c 30       	cpi	r24, 0x0C	; 12
 2aa:	38 f0       	brcs	.+14     	; 0x2ba <main+0xac>
		{
			hr=0;
 2ac:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
			day = ~day;
 2b0:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <day>
 2b4:	80 95       	com	r24
 2b6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <day>
		}
		
		if (ms > 100)
 2ba:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
 2be:	85 36       	cpi	r24, 0x65	; 101
 2c0:	08 f4       	brcc	.+2      	; 0x2c4 <main+0xb6>
 2c2:	bf cf       	rjmp	.-130    	; 0x242 <main+0x34>
		{
			ms=0;
 2c4:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <__data_end>
			ss++;
 2c8:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <ss>
 2cc:	8f 5f       	subi	r24, 0xFF	; 255
 2ce:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <ss>
			if (ss >= 60)
 2d2:	8c 33       	cpi	r24, 0x3C	; 60
 2d4:	08 f4       	brcc	.+2      	; 0x2d8 <main+0xca>
 2d6:	b5 cf       	rjmp	.-150    	; 0x242 <main+0x34>
			{
				ss=0;
 2d8:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <ss>
				mm++;
 2dc:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <mm>
 2e0:	8f 5f       	subi	r24, 0xFF	; 255
 2e2:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <mm>
				if (mm >= 60)
 2e6:	8c 33       	cpi	r24, 0x3C	; 60
 2e8:	08 f4       	brcc	.+2      	; 0x2ec <main+0xde>
 2ea:	ab cf       	rjmp	.-170    	; 0x242 <main+0x34>
				{
					hr++;
 2ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2f0:	8f 5f       	subi	r24, 0xFF	; 255
 2f2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
					mm=00;
 2f6:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <mm>
					if(hr >= 12)
 2fa:	8c 30       	cpi	r24, 0x0C	; 12
 2fc:	08 f4       	brcc	.+2      	; 0x300 <main+0xf2>
 2fe:	a1 cf       	rjmp	.-190    	; 0x242 <main+0x34>
					{
						hr=0;
 300:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
						ss=0;
						day = ~day;
 304:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <day>
 308:	80 95       	com	r24
 30a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <day>
 30e:	99 cf       	rjmp	.-206    	; 0x242 <main+0x34>

00000310 <sprintf>:
 310:	0f 93       	push	r16
 312:	1f 93       	push	r17
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
 318:	cd b7       	in	r28, 0x3d	; 61
 31a:	de b7       	in	r29, 0x3e	; 62
 31c:	2e 97       	sbiw	r28, 0x0e	; 14
 31e:	0f b6       	in	r0, 0x3f	; 63
 320:	f8 94       	cli
 322:	de bf       	out	0x3e, r29	; 62
 324:	0f be       	out	0x3f, r0	; 63
 326:	cd bf       	out	0x3d, r28	; 61
 328:	0d 89       	ldd	r16, Y+21	; 0x15
 32a:	1e 89       	ldd	r17, Y+22	; 0x16
 32c:	86 e0       	ldi	r24, 0x06	; 6
 32e:	8c 83       	std	Y+4, r24	; 0x04
 330:	1a 83       	std	Y+2, r17	; 0x02
 332:	09 83       	std	Y+1, r16	; 0x01
 334:	8f ef       	ldi	r24, 0xFF	; 255
 336:	9f e7       	ldi	r25, 0x7F	; 127
 338:	9e 83       	std	Y+6, r25	; 0x06
 33a:	8d 83       	std	Y+5, r24	; 0x05
 33c:	ae 01       	movw	r20, r28
 33e:	47 5e       	subi	r20, 0xE7	; 231
 340:	5f 4f       	sbci	r21, 0xFF	; 255
 342:	6f 89       	ldd	r22, Y+23	; 0x17
 344:	78 8d       	ldd	r23, Y+24	; 0x18
 346:	ce 01       	movw	r24, r28
 348:	01 96       	adiw	r24, 0x01	; 1
 34a:	10 d0       	rcall	.+32     	; 0x36c <vfprintf>
 34c:	ef 81       	ldd	r30, Y+7	; 0x07
 34e:	f8 85       	ldd	r31, Y+8	; 0x08
 350:	e0 0f       	add	r30, r16
 352:	f1 1f       	adc	r31, r17
 354:	10 82       	st	Z, r1
 356:	2e 96       	adiw	r28, 0x0e	; 14
 358:	0f b6       	in	r0, 0x3f	; 63
 35a:	f8 94       	cli
 35c:	de bf       	out	0x3e, r29	; 62
 35e:	0f be       	out	0x3f, r0	; 63
 360:	cd bf       	out	0x3d, r28	; 61
 362:	df 91       	pop	r29
 364:	cf 91       	pop	r28
 366:	1f 91       	pop	r17
 368:	0f 91       	pop	r16
 36a:	08 95       	ret

0000036c <vfprintf>:
 36c:	2f 92       	push	r2
 36e:	3f 92       	push	r3
 370:	4f 92       	push	r4
 372:	5f 92       	push	r5
 374:	6f 92       	push	r6
 376:	7f 92       	push	r7
 378:	8f 92       	push	r8
 37a:	9f 92       	push	r9
 37c:	af 92       	push	r10
 37e:	bf 92       	push	r11
 380:	cf 92       	push	r12
 382:	df 92       	push	r13
 384:	ef 92       	push	r14
 386:	ff 92       	push	r15
 388:	0f 93       	push	r16
 38a:	1f 93       	push	r17
 38c:	cf 93       	push	r28
 38e:	df 93       	push	r29
 390:	cd b7       	in	r28, 0x3d	; 61
 392:	de b7       	in	r29, 0x3e	; 62
 394:	2b 97       	sbiw	r28, 0x0b	; 11
 396:	0f b6       	in	r0, 0x3f	; 63
 398:	f8 94       	cli
 39a:	de bf       	out	0x3e, r29	; 62
 39c:	0f be       	out	0x3f, r0	; 63
 39e:	cd bf       	out	0x3d, r28	; 61
 3a0:	6c 01       	movw	r12, r24
 3a2:	7b 01       	movw	r14, r22
 3a4:	8a 01       	movw	r16, r20
 3a6:	fc 01       	movw	r30, r24
 3a8:	17 82       	std	Z+7, r1	; 0x07
 3aa:	16 82       	std	Z+6, r1	; 0x06
 3ac:	83 81       	ldd	r24, Z+3	; 0x03
 3ae:	81 ff       	sbrs	r24, 1
 3b0:	bf c1       	rjmp	.+894    	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
 3b2:	ce 01       	movw	r24, r28
 3b4:	01 96       	adiw	r24, 0x01	; 1
 3b6:	3c 01       	movw	r6, r24
 3b8:	f6 01       	movw	r30, r12
 3ba:	93 81       	ldd	r25, Z+3	; 0x03
 3bc:	f7 01       	movw	r30, r14
 3be:	93 fd       	sbrc	r25, 3
 3c0:	85 91       	lpm	r24, Z+
 3c2:	93 ff       	sbrs	r25, 3
 3c4:	81 91       	ld	r24, Z+
 3c6:	7f 01       	movw	r14, r30
 3c8:	88 23       	and	r24, r24
 3ca:	09 f4       	brne	.+2      	; 0x3ce <vfprintf+0x62>
 3cc:	ad c1       	rjmp	.+858    	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 3ce:	85 32       	cpi	r24, 0x25	; 37
 3d0:	39 f4       	brne	.+14     	; 0x3e0 <vfprintf+0x74>
 3d2:	93 fd       	sbrc	r25, 3
 3d4:	85 91       	lpm	r24, Z+
 3d6:	93 ff       	sbrs	r25, 3
 3d8:	81 91       	ld	r24, Z+
 3da:	7f 01       	movw	r14, r30
 3dc:	85 32       	cpi	r24, 0x25	; 37
 3de:	21 f4       	brne	.+8      	; 0x3e8 <vfprintf+0x7c>
 3e0:	b6 01       	movw	r22, r12
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	d6 d1       	rcall	.+940    	; 0x792 <fputc>
 3e6:	e8 cf       	rjmp	.-48     	; 0x3b8 <vfprintf+0x4c>
 3e8:	91 2c       	mov	r9, r1
 3ea:	21 2c       	mov	r2, r1
 3ec:	31 2c       	mov	r3, r1
 3ee:	ff e1       	ldi	r31, 0x1F	; 31
 3f0:	f3 15       	cp	r31, r3
 3f2:	d8 f0       	brcs	.+54     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3f4:	8b 32       	cpi	r24, 0x2B	; 43
 3f6:	79 f0       	breq	.+30     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3f8:	38 f4       	brcc	.+14     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fa:	80 32       	cpi	r24, 0x20	; 32
 3fc:	79 f0       	breq	.+30     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fe:	83 32       	cpi	r24, 0x23	; 35
 400:	a1 f4       	brne	.+40     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 402:	23 2d       	mov	r18, r3
 404:	20 61       	ori	r18, 0x10	; 16
 406:	1d c0       	rjmp	.+58     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 408:	8d 32       	cpi	r24, 0x2D	; 45
 40a:	61 f0       	breq	.+24     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 40c:	80 33       	cpi	r24, 0x30	; 48
 40e:	69 f4       	brne	.+26     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 410:	23 2d       	mov	r18, r3
 412:	21 60       	ori	r18, 0x01	; 1
 414:	16 c0       	rjmp	.+44     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 416:	83 2d       	mov	r24, r3
 418:	82 60       	ori	r24, 0x02	; 2
 41a:	38 2e       	mov	r3, r24
 41c:	e3 2d       	mov	r30, r3
 41e:	e4 60       	ori	r30, 0x04	; 4
 420:	3e 2e       	mov	r3, r30
 422:	2a c0       	rjmp	.+84     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 424:	f3 2d       	mov	r31, r3
 426:	f8 60       	ori	r31, 0x08	; 8
 428:	1d c0       	rjmp	.+58     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 42a:	37 fc       	sbrc	r3, 7
 42c:	2d c0       	rjmp	.+90     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 42e:	20 ed       	ldi	r18, 0xD0	; 208
 430:	28 0f       	add	r18, r24
 432:	2a 30       	cpi	r18, 0x0A	; 10
 434:	40 f0       	brcs	.+16     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 436:	8e 32       	cpi	r24, 0x2E	; 46
 438:	b9 f4       	brne	.+46     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 43a:	36 fc       	sbrc	r3, 6
 43c:	75 c1       	rjmp	.+746    	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 43e:	23 2d       	mov	r18, r3
 440:	20 64       	ori	r18, 0x40	; 64
 442:	32 2e       	mov	r3, r18
 444:	19 c0       	rjmp	.+50     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 446:	36 fe       	sbrs	r3, 6
 448:	06 c0       	rjmp	.+12     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 44a:	8a e0       	ldi	r24, 0x0A	; 10
 44c:	98 9e       	mul	r9, r24
 44e:	20 0d       	add	r18, r0
 450:	11 24       	eor	r1, r1
 452:	92 2e       	mov	r9, r18
 454:	11 c0       	rjmp	.+34     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 456:	ea e0       	ldi	r30, 0x0A	; 10
 458:	2e 9e       	mul	r2, r30
 45a:	20 0d       	add	r18, r0
 45c:	11 24       	eor	r1, r1
 45e:	22 2e       	mov	r2, r18
 460:	f3 2d       	mov	r31, r3
 462:	f0 62       	ori	r31, 0x20	; 32
 464:	3f 2e       	mov	r3, r31
 466:	08 c0       	rjmp	.+16     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 468:	8c 36       	cpi	r24, 0x6C	; 108
 46a:	21 f4       	brne	.+8      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 46c:	83 2d       	mov	r24, r3
 46e:	80 68       	ori	r24, 0x80	; 128
 470:	38 2e       	mov	r3, r24
 472:	02 c0       	rjmp	.+4      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 474:	88 36       	cpi	r24, 0x68	; 104
 476:	41 f4       	brne	.+16     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 478:	f7 01       	movw	r30, r14
 47a:	93 fd       	sbrc	r25, 3
 47c:	85 91       	lpm	r24, Z+
 47e:	93 ff       	sbrs	r25, 3
 480:	81 91       	ld	r24, Z+
 482:	7f 01       	movw	r14, r30
 484:	81 11       	cpse	r24, r1
 486:	b3 cf       	rjmp	.-154    	; 0x3ee <vfprintf+0x82>
 488:	98 2f       	mov	r25, r24
 48a:	9f 7d       	andi	r25, 0xDF	; 223
 48c:	95 54       	subi	r25, 0x45	; 69
 48e:	93 30       	cpi	r25, 0x03	; 3
 490:	28 f4       	brcc	.+10     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 492:	0c 5f       	subi	r16, 0xFC	; 252
 494:	1f 4f       	sbci	r17, 0xFF	; 255
 496:	9f e3       	ldi	r25, 0x3F	; 63
 498:	99 83       	std	Y+1, r25	; 0x01
 49a:	0d c0       	rjmp	.+26     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 49c:	83 36       	cpi	r24, 0x63	; 99
 49e:	31 f0       	breq	.+12     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a0:	83 37       	cpi	r24, 0x73	; 115
 4a2:	71 f0       	breq	.+28     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4a4:	83 35       	cpi	r24, 0x53	; 83
 4a6:	09 f0       	breq	.+2      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4a8:	55 c0       	rjmp	.+170    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 4aa:	20 c0       	rjmp	.+64     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4ac:	f8 01       	movw	r30, r16
 4ae:	80 81       	ld	r24, Z
 4b0:	89 83       	std	Y+1, r24	; 0x01
 4b2:	0e 5f       	subi	r16, 0xFE	; 254
 4b4:	1f 4f       	sbci	r17, 0xFF	; 255
 4b6:	88 24       	eor	r8, r8
 4b8:	83 94       	inc	r8
 4ba:	91 2c       	mov	r9, r1
 4bc:	53 01       	movw	r10, r6
 4be:	12 c0       	rjmp	.+36     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4c0:	28 01       	movw	r4, r16
 4c2:	f2 e0       	ldi	r31, 0x02	; 2
 4c4:	4f 0e       	add	r4, r31
 4c6:	51 1c       	adc	r5, r1
 4c8:	f8 01       	movw	r30, r16
 4ca:	a0 80       	ld	r10, Z
 4cc:	b1 80       	ldd	r11, Z+1	; 0x01
 4ce:	36 fe       	sbrs	r3, 6
 4d0:	03 c0       	rjmp	.+6      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4d2:	69 2d       	mov	r22, r9
 4d4:	70 e0       	ldi	r23, 0x00	; 0
 4d6:	02 c0       	rjmp	.+4      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d8:	6f ef       	ldi	r22, 0xFF	; 255
 4da:	7f ef       	ldi	r23, 0xFF	; 255
 4dc:	c5 01       	movw	r24, r10
 4de:	4e d1       	rcall	.+668    	; 0x77c <strnlen>
 4e0:	4c 01       	movw	r8, r24
 4e2:	82 01       	movw	r16, r4
 4e4:	f3 2d       	mov	r31, r3
 4e6:	ff 77       	andi	r31, 0x7F	; 127
 4e8:	3f 2e       	mov	r3, r31
 4ea:	15 c0       	rjmp	.+42     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 4ec:	28 01       	movw	r4, r16
 4ee:	22 e0       	ldi	r18, 0x02	; 2
 4f0:	42 0e       	add	r4, r18
 4f2:	51 1c       	adc	r5, r1
 4f4:	f8 01       	movw	r30, r16
 4f6:	a0 80       	ld	r10, Z
 4f8:	b1 80       	ldd	r11, Z+1	; 0x01
 4fa:	36 fe       	sbrs	r3, 6
 4fc:	03 c0       	rjmp	.+6      	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4fe:	69 2d       	mov	r22, r9
 500:	70 e0       	ldi	r23, 0x00	; 0
 502:	02 c0       	rjmp	.+4      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 504:	6f ef       	ldi	r22, 0xFF	; 255
 506:	7f ef       	ldi	r23, 0xFF	; 255
 508:	c5 01       	movw	r24, r10
 50a:	2d d1       	rcall	.+602    	; 0x766 <strnlen_P>
 50c:	4c 01       	movw	r8, r24
 50e:	f3 2d       	mov	r31, r3
 510:	f0 68       	ori	r31, 0x80	; 128
 512:	3f 2e       	mov	r3, r31
 514:	82 01       	movw	r16, r4
 516:	33 fc       	sbrc	r3, 3
 518:	19 c0       	rjmp	.+50     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 51a:	82 2d       	mov	r24, r2
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	88 16       	cp	r8, r24
 520:	99 06       	cpc	r9, r25
 522:	a0 f4       	brcc	.+40     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 524:	b6 01       	movw	r22, r12
 526:	80 e2       	ldi	r24, 0x20	; 32
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	33 d1       	rcall	.+614    	; 0x792 <fputc>
 52c:	2a 94       	dec	r2
 52e:	f5 cf       	rjmp	.-22     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 530:	f5 01       	movw	r30, r10
 532:	37 fc       	sbrc	r3, 7
 534:	85 91       	lpm	r24, Z+
 536:	37 fe       	sbrs	r3, 7
 538:	81 91       	ld	r24, Z+
 53a:	5f 01       	movw	r10, r30
 53c:	b6 01       	movw	r22, r12
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	28 d1       	rcall	.+592    	; 0x792 <fputc>
 542:	21 10       	cpse	r2, r1
 544:	2a 94       	dec	r2
 546:	21 e0       	ldi	r18, 0x01	; 1
 548:	82 1a       	sub	r8, r18
 54a:	91 08       	sbc	r9, r1
 54c:	81 14       	cp	r8, r1
 54e:	91 04       	cpc	r9, r1
 550:	79 f7       	brne	.-34     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 552:	e1 c0       	rjmp	.+450    	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 554:	84 36       	cpi	r24, 0x64	; 100
 556:	11 f0       	breq	.+4      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 558:	89 36       	cpi	r24, 0x69	; 105
 55a:	39 f5       	brne	.+78     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 55c:	f8 01       	movw	r30, r16
 55e:	37 fe       	sbrs	r3, 7
 560:	07 c0       	rjmp	.+14     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 562:	60 81       	ld	r22, Z
 564:	71 81       	ldd	r23, Z+1	; 0x01
 566:	82 81       	ldd	r24, Z+2	; 0x02
 568:	93 81       	ldd	r25, Z+3	; 0x03
 56a:	0c 5f       	subi	r16, 0xFC	; 252
 56c:	1f 4f       	sbci	r17, 0xFF	; 255
 56e:	08 c0       	rjmp	.+16     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 570:	60 81       	ld	r22, Z
 572:	71 81       	ldd	r23, Z+1	; 0x01
 574:	07 2e       	mov	r0, r23
 576:	00 0c       	add	r0, r0
 578:	88 0b       	sbc	r24, r24
 57a:	99 0b       	sbc	r25, r25
 57c:	0e 5f       	subi	r16, 0xFE	; 254
 57e:	1f 4f       	sbci	r17, 0xFF	; 255
 580:	f3 2d       	mov	r31, r3
 582:	ff 76       	andi	r31, 0x6F	; 111
 584:	3f 2e       	mov	r3, r31
 586:	97 ff       	sbrs	r25, 7
 588:	09 c0       	rjmp	.+18     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 58a:	90 95       	com	r25
 58c:	80 95       	com	r24
 58e:	70 95       	com	r23
 590:	61 95       	neg	r22
 592:	7f 4f       	sbci	r23, 0xFF	; 255
 594:	8f 4f       	sbci	r24, 0xFF	; 255
 596:	9f 4f       	sbci	r25, 0xFF	; 255
 598:	f0 68       	ori	r31, 0x80	; 128
 59a:	3f 2e       	mov	r3, r31
 59c:	2a e0       	ldi	r18, 0x0A	; 10
 59e:	30 e0       	ldi	r19, 0x00	; 0
 5a0:	a3 01       	movw	r20, r6
 5a2:	33 d1       	rcall	.+614    	; 0x80a <__ultoa_invert>
 5a4:	88 2e       	mov	r8, r24
 5a6:	86 18       	sub	r8, r6
 5a8:	44 c0       	rjmp	.+136    	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 5aa:	85 37       	cpi	r24, 0x75	; 117
 5ac:	31 f4       	brne	.+12     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5ae:	23 2d       	mov	r18, r3
 5b0:	2f 7e       	andi	r18, 0xEF	; 239
 5b2:	b2 2e       	mov	r11, r18
 5b4:	2a e0       	ldi	r18, 0x0A	; 10
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	25 c0       	rjmp	.+74     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5ba:	93 2d       	mov	r25, r3
 5bc:	99 7f       	andi	r25, 0xF9	; 249
 5be:	b9 2e       	mov	r11, r25
 5c0:	8f 36       	cpi	r24, 0x6F	; 111
 5c2:	c1 f0       	breq	.+48     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5c4:	18 f4       	brcc	.+6      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5c6:	88 35       	cpi	r24, 0x58	; 88
 5c8:	79 f0       	breq	.+30     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5ca:	ae c0       	rjmp	.+348    	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 5cc:	80 37       	cpi	r24, 0x70	; 112
 5ce:	19 f0       	breq	.+6      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d0:	88 37       	cpi	r24, 0x78	; 120
 5d2:	21 f0       	breq	.+8      	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5d4:	a9 c0       	rjmp	.+338    	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 5d6:	e9 2f       	mov	r30, r25
 5d8:	e0 61       	ori	r30, 0x10	; 16
 5da:	be 2e       	mov	r11, r30
 5dc:	b4 fe       	sbrs	r11, 4
 5de:	0d c0       	rjmp	.+26     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5e0:	fb 2d       	mov	r31, r11
 5e2:	f4 60       	ori	r31, 0x04	; 4
 5e4:	bf 2e       	mov	r11, r31
 5e6:	09 c0       	rjmp	.+18     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5e8:	34 fe       	sbrs	r3, 4
 5ea:	0a c0       	rjmp	.+20     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5ec:	29 2f       	mov	r18, r25
 5ee:	26 60       	ori	r18, 0x06	; 6
 5f0:	b2 2e       	mov	r11, r18
 5f2:	06 c0       	rjmp	.+12     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5f4:	28 e0       	ldi	r18, 0x08	; 8
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	05 c0       	rjmp	.+10     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5fa:	20 e1       	ldi	r18, 0x10	; 16
 5fc:	30 e0       	ldi	r19, 0x00	; 0
 5fe:	02 c0       	rjmp	.+4      	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 600:	20 e1       	ldi	r18, 0x10	; 16
 602:	32 e0       	ldi	r19, 0x02	; 2
 604:	f8 01       	movw	r30, r16
 606:	b7 fe       	sbrs	r11, 7
 608:	07 c0       	rjmp	.+14     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 60a:	60 81       	ld	r22, Z
 60c:	71 81       	ldd	r23, Z+1	; 0x01
 60e:	82 81       	ldd	r24, Z+2	; 0x02
 610:	93 81       	ldd	r25, Z+3	; 0x03
 612:	0c 5f       	subi	r16, 0xFC	; 252
 614:	1f 4f       	sbci	r17, 0xFF	; 255
 616:	06 c0       	rjmp	.+12     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 618:	60 81       	ld	r22, Z
 61a:	71 81       	ldd	r23, Z+1	; 0x01
 61c:	80 e0       	ldi	r24, 0x00	; 0
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	0e 5f       	subi	r16, 0xFE	; 254
 622:	1f 4f       	sbci	r17, 0xFF	; 255
 624:	a3 01       	movw	r20, r6
 626:	f1 d0       	rcall	.+482    	; 0x80a <__ultoa_invert>
 628:	88 2e       	mov	r8, r24
 62a:	86 18       	sub	r8, r6
 62c:	fb 2d       	mov	r31, r11
 62e:	ff 77       	andi	r31, 0x7F	; 127
 630:	3f 2e       	mov	r3, r31
 632:	36 fe       	sbrs	r3, 6
 634:	0d c0       	rjmp	.+26     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 636:	23 2d       	mov	r18, r3
 638:	2e 7f       	andi	r18, 0xFE	; 254
 63a:	a2 2e       	mov	r10, r18
 63c:	89 14       	cp	r8, r9
 63e:	58 f4       	brcc	.+22     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 640:	34 fe       	sbrs	r3, 4
 642:	0b c0       	rjmp	.+22     	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 644:	32 fc       	sbrc	r3, 2
 646:	09 c0       	rjmp	.+18     	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 648:	83 2d       	mov	r24, r3
 64a:	8e 7e       	andi	r24, 0xEE	; 238
 64c:	a8 2e       	mov	r10, r24
 64e:	05 c0       	rjmp	.+10     	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 650:	b8 2c       	mov	r11, r8
 652:	a3 2c       	mov	r10, r3
 654:	03 c0       	rjmp	.+6      	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 656:	b8 2c       	mov	r11, r8
 658:	01 c0       	rjmp	.+2      	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 65a:	b9 2c       	mov	r11, r9
 65c:	a4 fe       	sbrs	r10, 4
 65e:	0f c0       	rjmp	.+30     	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
 660:	fe 01       	movw	r30, r28
 662:	e8 0d       	add	r30, r8
 664:	f1 1d       	adc	r31, r1
 666:	80 81       	ld	r24, Z
 668:	80 33       	cpi	r24, 0x30	; 48
 66a:	21 f4       	brne	.+8      	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 66c:	9a 2d       	mov	r25, r10
 66e:	99 7e       	andi	r25, 0xE9	; 233
 670:	a9 2e       	mov	r10, r25
 672:	09 c0       	rjmp	.+18     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 674:	a2 fe       	sbrs	r10, 2
 676:	06 c0       	rjmp	.+12     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 678:	b3 94       	inc	r11
 67a:	b3 94       	inc	r11
 67c:	04 c0       	rjmp	.+8      	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 67e:	8a 2d       	mov	r24, r10
 680:	86 78       	andi	r24, 0x86	; 134
 682:	09 f0       	breq	.+2      	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 684:	b3 94       	inc	r11
 686:	a3 fc       	sbrc	r10, 3
 688:	10 c0       	rjmp	.+32     	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 68a:	a0 fe       	sbrs	r10, 0
 68c:	06 c0       	rjmp	.+12     	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
 68e:	b2 14       	cp	r11, r2
 690:	80 f4       	brcc	.+32     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 692:	28 0c       	add	r2, r8
 694:	92 2c       	mov	r9, r2
 696:	9b 18       	sub	r9, r11
 698:	0d c0       	rjmp	.+26     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 69a:	b2 14       	cp	r11, r2
 69c:	58 f4       	brcc	.+22     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 69e:	b6 01       	movw	r22, r12
 6a0:	80 e2       	ldi	r24, 0x20	; 32
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	76 d0       	rcall	.+236    	; 0x792 <fputc>
 6a6:	b3 94       	inc	r11
 6a8:	f8 cf       	rjmp	.-16     	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
 6aa:	b2 14       	cp	r11, r2
 6ac:	18 f4       	brcc	.+6      	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6ae:	2b 18       	sub	r2, r11
 6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6b2:	98 2c       	mov	r9, r8
 6b4:	21 2c       	mov	r2, r1
 6b6:	a4 fe       	sbrs	r10, 4
 6b8:	0f c0       	rjmp	.+30     	; 0x6d8 <__LOCK_REGION_LENGTH__+0x2d8>
 6ba:	b6 01       	movw	r22, r12
 6bc:	80 e3       	ldi	r24, 0x30	; 48
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	68 d0       	rcall	.+208    	; 0x792 <fputc>
 6c2:	a2 fe       	sbrs	r10, 2
 6c4:	16 c0       	rjmp	.+44     	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 6c6:	a1 fc       	sbrc	r10, 1
 6c8:	03 c0       	rjmp	.+6      	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6ca:	88 e7       	ldi	r24, 0x78	; 120
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <__LOCK_REGION_LENGTH__+0x2d4>
 6d0:	88 e5       	ldi	r24, 0x58	; 88
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	b6 01       	movw	r22, r12
 6d6:	0c c0       	rjmp	.+24     	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
 6d8:	8a 2d       	mov	r24, r10
 6da:	86 78       	andi	r24, 0x86	; 134
 6dc:	51 f0       	breq	.+20     	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 6de:	a1 fe       	sbrs	r10, 1
 6e0:	02 c0       	rjmp	.+4      	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6e2:	8b e2       	ldi	r24, 0x2B	; 43
 6e4:	01 c0       	rjmp	.+2      	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6e6:	80 e2       	ldi	r24, 0x20	; 32
 6e8:	a7 fc       	sbrc	r10, 7
 6ea:	8d e2       	ldi	r24, 0x2D	; 45
 6ec:	b6 01       	movw	r22, r12
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	50 d0       	rcall	.+160    	; 0x792 <fputc>
 6f2:	89 14       	cp	r8, r9
 6f4:	30 f4       	brcc	.+12     	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 6f6:	b6 01       	movw	r22, r12
 6f8:	80 e3       	ldi	r24, 0x30	; 48
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	4a d0       	rcall	.+148    	; 0x792 <fputc>
 6fe:	9a 94       	dec	r9
 700:	f8 cf       	rjmp	.-16     	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 702:	8a 94       	dec	r8
 704:	f3 01       	movw	r30, r6
 706:	e8 0d       	add	r30, r8
 708:	f1 1d       	adc	r31, r1
 70a:	80 81       	ld	r24, Z
 70c:	b6 01       	movw	r22, r12
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	40 d0       	rcall	.+128    	; 0x792 <fputc>
 712:	81 10       	cpse	r8, r1
 714:	f6 cf       	rjmp	.-20     	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 716:	22 20       	and	r2, r2
 718:	09 f4       	brne	.+2      	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 71a:	4e ce       	rjmp	.-868    	; 0x3b8 <vfprintf+0x4c>
 71c:	b6 01       	movw	r22, r12
 71e:	80 e2       	ldi	r24, 0x20	; 32
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	37 d0       	rcall	.+110    	; 0x792 <fputc>
 724:	2a 94       	dec	r2
 726:	f7 cf       	rjmp	.-18     	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 728:	f6 01       	movw	r30, r12
 72a:	86 81       	ldd	r24, Z+6	; 0x06
 72c:	97 81       	ldd	r25, Z+7	; 0x07
 72e:	02 c0       	rjmp	.+4      	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
 730:	8f ef       	ldi	r24, 0xFF	; 255
 732:	9f ef       	ldi	r25, 0xFF	; 255
 734:	2b 96       	adiw	r28, 0x0b	; 11
 736:	0f b6       	in	r0, 0x3f	; 63
 738:	f8 94       	cli
 73a:	de bf       	out	0x3e, r29	; 62
 73c:	0f be       	out	0x3f, r0	; 63
 73e:	cd bf       	out	0x3d, r28	; 61
 740:	df 91       	pop	r29
 742:	cf 91       	pop	r28
 744:	1f 91       	pop	r17
 746:	0f 91       	pop	r16
 748:	ff 90       	pop	r15
 74a:	ef 90       	pop	r14
 74c:	df 90       	pop	r13
 74e:	cf 90       	pop	r12
 750:	bf 90       	pop	r11
 752:	af 90       	pop	r10
 754:	9f 90       	pop	r9
 756:	8f 90       	pop	r8
 758:	7f 90       	pop	r7
 75a:	6f 90       	pop	r6
 75c:	5f 90       	pop	r5
 75e:	4f 90       	pop	r4
 760:	3f 90       	pop	r3
 762:	2f 90       	pop	r2
 764:	08 95       	ret

00000766 <strnlen_P>:
 766:	fc 01       	movw	r30, r24
 768:	05 90       	lpm	r0, Z+
 76a:	61 50       	subi	r22, 0x01	; 1
 76c:	70 40       	sbci	r23, 0x00	; 0
 76e:	01 10       	cpse	r0, r1
 770:	d8 f7       	brcc	.-10     	; 0x768 <strnlen_P+0x2>
 772:	80 95       	com	r24
 774:	90 95       	com	r25
 776:	8e 0f       	add	r24, r30
 778:	9f 1f       	adc	r25, r31
 77a:	08 95       	ret

0000077c <strnlen>:
 77c:	fc 01       	movw	r30, r24
 77e:	61 50       	subi	r22, 0x01	; 1
 780:	70 40       	sbci	r23, 0x00	; 0
 782:	01 90       	ld	r0, Z+
 784:	01 10       	cpse	r0, r1
 786:	d8 f7       	brcc	.-10     	; 0x77e <strnlen+0x2>
 788:	80 95       	com	r24
 78a:	90 95       	com	r25
 78c:	8e 0f       	add	r24, r30
 78e:	9f 1f       	adc	r25, r31
 790:	08 95       	ret

00000792 <fputc>:
 792:	0f 93       	push	r16
 794:	1f 93       	push	r17
 796:	cf 93       	push	r28
 798:	df 93       	push	r29
 79a:	fb 01       	movw	r30, r22
 79c:	23 81       	ldd	r18, Z+3	; 0x03
 79e:	21 fd       	sbrc	r18, 1
 7a0:	03 c0       	rjmp	.+6      	; 0x7a8 <fputc+0x16>
 7a2:	8f ef       	ldi	r24, 0xFF	; 255
 7a4:	9f ef       	ldi	r25, 0xFF	; 255
 7a6:	2c c0       	rjmp	.+88     	; 0x800 <fputc+0x6e>
 7a8:	22 ff       	sbrs	r18, 2
 7aa:	16 c0       	rjmp	.+44     	; 0x7d8 <fputc+0x46>
 7ac:	46 81       	ldd	r20, Z+6	; 0x06
 7ae:	57 81       	ldd	r21, Z+7	; 0x07
 7b0:	24 81       	ldd	r18, Z+4	; 0x04
 7b2:	35 81       	ldd	r19, Z+5	; 0x05
 7b4:	42 17       	cp	r20, r18
 7b6:	53 07       	cpc	r21, r19
 7b8:	44 f4       	brge	.+16     	; 0x7ca <fputc+0x38>
 7ba:	a0 81       	ld	r26, Z
 7bc:	b1 81       	ldd	r27, Z+1	; 0x01
 7be:	9d 01       	movw	r18, r26
 7c0:	2f 5f       	subi	r18, 0xFF	; 255
 7c2:	3f 4f       	sbci	r19, 0xFF	; 255
 7c4:	31 83       	std	Z+1, r19	; 0x01
 7c6:	20 83       	st	Z, r18
 7c8:	8c 93       	st	X, r24
 7ca:	26 81       	ldd	r18, Z+6	; 0x06
 7cc:	37 81       	ldd	r19, Z+7	; 0x07
 7ce:	2f 5f       	subi	r18, 0xFF	; 255
 7d0:	3f 4f       	sbci	r19, 0xFF	; 255
 7d2:	37 83       	std	Z+7, r19	; 0x07
 7d4:	26 83       	std	Z+6, r18	; 0x06
 7d6:	14 c0       	rjmp	.+40     	; 0x800 <fputc+0x6e>
 7d8:	8b 01       	movw	r16, r22
 7da:	ec 01       	movw	r28, r24
 7dc:	fb 01       	movw	r30, r22
 7de:	00 84       	ldd	r0, Z+8	; 0x08
 7e0:	f1 85       	ldd	r31, Z+9	; 0x09
 7e2:	e0 2d       	mov	r30, r0
 7e4:	09 95       	icall
 7e6:	89 2b       	or	r24, r25
 7e8:	e1 f6       	brne	.-72     	; 0x7a2 <fputc+0x10>
 7ea:	d8 01       	movw	r26, r16
 7ec:	16 96       	adiw	r26, 0x06	; 6
 7ee:	8d 91       	ld	r24, X+
 7f0:	9c 91       	ld	r25, X
 7f2:	17 97       	sbiw	r26, 0x07	; 7
 7f4:	01 96       	adiw	r24, 0x01	; 1
 7f6:	17 96       	adiw	r26, 0x07	; 7
 7f8:	9c 93       	st	X, r25
 7fa:	8e 93       	st	-X, r24
 7fc:	16 97       	sbiw	r26, 0x06	; 6
 7fe:	ce 01       	movw	r24, r28
 800:	df 91       	pop	r29
 802:	cf 91       	pop	r28
 804:	1f 91       	pop	r17
 806:	0f 91       	pop	r16
 808:	08 95       	ret

0000080a <__ultoa_invert>:
 80a:	fa 01       	movw	r30, r20
 80c:	aa 27       	eor	r26, r26
 80e:	28 30       	cpi	r18, 0x08	; 8
 810:	51 f1       	breq	.+84     	; 0x866 <__ultoa_invert+0x5c>
 812:	20 31       	cpi	r18, 0x10	; 16
 814:	81 f1       	breq	.+96     	; 0x876 <__ultoa_invert+0x6c>
 816:	e8 94       	clt
 818:	6f 93       	push	r22
 81a:	6e 7f       	andi	r22, 0xFE	; 254
 81c:	6e 5f       	subi	r22, 0xFE	; 254
 81e:	7f 4f       	sbci	r23, 0xFF	; 255
 820:	8f 4f       	sbci	r24, 0xFF	; 255
 822:	9f 4f       	sbci	r25, 0xFF	; 255
 824:	af 4f       	sbci	r26, 0xFF	; 255
 826:	b1 e0       	ldi	r27, 0x01	; 1
 828:	3e d0       	rcall	.+124    	; 0x8a6 <__ultoa_invert+0x9c>
 82a:	b4 e0       	ldi	r27, 0x04	; 4
 82c:	3c d0       	rcall	.+120    	; 0x8a6 <__ultoa_invert+0x9c>
 82e:	67 0f       	add	r22, r23
 830:	78 1f       	adc	r23, r24
 832:	89 1f       	adc	r24, r25
 834:	9a 1f       	adc	r25, r26
 836:	a1 1d       	adc	r26, r1
 838:	68 0f       	add	r22, r24
 83a:	79 1f       	adc	r23, r25
 83c:	8a 1f       	adc	r24, r26
 83e:	91 1d       	adc	r25, r1
 840:	a1 1d       	adc	r26, r1
 842:	6a 0f       	add	r22, r26
 844:	71 1d       	adc	r23, r1
 846:	81 1d       	adc	r24, r1
 848:	91 1d       	adc	r25, r1
 84a:	a1 1d       	adc	r26, r1
 84c:	20 d0       	rcall	.+64     	; 0x88e <__ultoa_invert+0x84>
 84e:	09 f4       	brne	.+2      	; 0x852 <__ultoa_invert+0x48>
 850:	68 94       	set
 852:	3f 91       	pop	r19
 854:	2a e0       	ldi	r18, 0x0A	; 10
 856:	26 9f       	mul	r18, r22
 858:	11 24       	eor	r1, r1
 85a:	30 19       	sub	r19, r0
 85c:	30 5d       	subi	r19, 0xD0	; 208
 85e:	31 93       	st	Z+, r19
 860:	de f6       	brtc	.-74     	; 0x818 <__ultoa_invert+0xe>
 862:	cf 01       	movw	r24, r30
 864:	08 95       	ret
 866:	46 2f       	mov	r20, r22
 868:	47 70       	andi	r20, 0x07	; 7
 86a:	40 5d       	subi	r20, 0xD0	; 208
 86c:	41 93       	st	Z+, r20
 86e:	b3 e0       	ldi	r27, 0x03	; 3
 870:	0f d0       	rcall	.+30     	; 0x890 <__ultoa_invert+0x86>
 872:	c9 f7       	brne	.-14     	; 0x866 <__ultoa_invert+0x5c>
 874:	f6 cf       	rjmp	.-20     	; 0x862 <__ultoa_invert+0x58>
 876:	46 2f       	mov	r20, r22
 878:	4f 70       	andi	r20, 0x0F	; 15
 87a:	40 5d       	subi	r20, 0xD0	; 208
 87c:	4a 33       	cpi	r20, 0x3A	; 58
 87e:	18 f0       	brcs	.+6      	; 0x886 <__ultoa_invert+0x7c>
 880:	49 5d       	subi	r20, 0xD9	; 217
 882:	31 fd       	sbrc	r19, 1
 884:	40 52       	subi	r20, 0x20	; 32
 886:	41 93       	st	Z+, r20
 888:	02 d0       	rcall	.+4      	; 0x88e <__ultoa_invert+0x84>
 88a:	a9 f7       	brne	.-22     	; 0x876 <__ultoa_invert+0x6c>
 88c:	ea cf       	rjmp	.-44     	; 0x862 <__ultoa_invert+0x58>
 88e:	b4 e0       	ldi	r27, 0x04	; 4
 890:	a6 95       	lsr	r26
 892:	97 95       	ror	r25
 894:	87 95       	ror	r24
 896:	77 95       	ror	r23
 898:	67 95       	ror	r22
 89a:	ba 95       	dec	r27
 89c:	c9 f7       	brne	.-14     	; 0x890 <__ultoa_invert+0x86>
 89e:	00 97       	sbiw	r24, 0x00	; 0
 8a0:	61 05       	cpc	r22, r1
 8a2:	71 05       	cpc	r23, r1
 8a4:	08 95       	ret
 8a6:	9b 01       	movw	r18, r22
 8a8:	ac 01       	movw	r20, r24
 8aa:	0a 2e       	mov	r0, r26
 8ac:	06 94       	lsr	r0
 8ae:	57 95       	ror	r21
 8b0:	47 95       	ror	r20
 8b2:	37 95       	ror	r19
 8b4:	27 95       	ror	r18
 8b6:	ba 95       	dec	r27
 8b8:	c9 f7       	brne	.-14     	; 0x8ac <__ultoa_invert+0xa2>
 8ba:	62 0f       	add	r22, r18
 8bc:	73 1f       	adc	r23, r19
 8be:	84 1f       	adc	r24, r20
 8c0:	95 1f       	adc	r25, r21
 8c2:	a0 1d       	adc	r26, r0
 8c4:	08 95       	ret

000008c6 <_exit>:
 8c6:	f8 94       	cli

000008c8 <__stop_program>:
 8c8:	ff cf       	rjmp	.-2      	; 0x8c8 <__stop_program>

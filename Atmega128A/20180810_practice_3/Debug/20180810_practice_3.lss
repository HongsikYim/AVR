
20180810_practice_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  0000088a  0000091e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000088a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800128  00800128  00000946  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000946  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000009e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e73  00000000  00000000  00000a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a3d  00000000  00000000  000018df  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005d3  00000000  00000000  0000231c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000010c  00000000  00000000  000028f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004d2  00000000  00000000  000029fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000058d  00000000  00000000  00002ece  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  0000345b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	c4 c0       	rjmp	.+392    	; 0x18e <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e8       	ldi	r30, 0x8A	; 138
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 32       	cpi	r26, 0x28	; 40
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a8 e2       	ldi	r26, 0x28	; 40
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	aa 32       	cpi	r26, 0x2A	; 42
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	92 d0       	rcall	.+292    	; 0x1e8 <main>
  c4:	e0 c3       	rjmp	.+1984   	; 0x886 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <LCD_pulse_enable>:

#include "LCD.h"

void LCD_pulse_enable(void)
{
	PORT_CONTROL |= (1 << E_PIN);
  c8:	c7 9a       	sbi	0x18, 7	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ca:	8f e9       	ldi	r24, 0x9F	; 159
  cc:	9f e0       	ldi	r25, 0x0F	; 15
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <LCD_pulse_enable+0x6>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <LCD_pulse_enable+0xc>
  d4:	00 00       	nop
	_delay_ms(1);
	PORT_CONTROL &= ~(1 << E_PIN);
  d6:	c7 98       	cbi	0x18, 7	; 24
  d8:	8f e9       	ldi	r24, 0x9F	; 159
  da:	9f e0       	ldi	r25, 0x0F	; 15
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <LCD_pulse_enable+0x14>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <LCD_pulse_enable+0x1a>
  e2:	00 00       	nop
  e4:	08 95       	ret

000000e6 <LCD_write_data>:
	_delay_ms(1);
}

void LCD_write_data(uint8_t data)
{
	PORT_CONTROL |= (1 << RS_PIN);
  e6:	c5 9a       	sbi	0x18, 5	; 24
	PORT_DATA = data;
  e8:	85 bb       	out	0x15, r24	; 21
	LCD_pulse_enable();
  ea:	ee df       	rcall	.-36     	; 0xc8 <LCD_pulse_enable>
  ec:	8f e3       	ldi	r24, 0x3F	; 63
  ee:	9f e1       	ldi	r25, 0x1F	; 31
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <LCD_write_data+0xa>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <LCD_write_data+0x10>
  f6:	00 00       	nop
  f8:	08 95       	ret

000000fa <LCD_write_command>:
	_delay_ms(2);
}

void LCD_write_command(uint8_t command)
{
	PORT_CONTROL &= ~(1 << RS_PIN);
  fa:	c5 98       	cbi	0x18, 5	; 24
	PORT_DATA = command;
  fc:	85 bb       	out	0x15, r24	; 21
	LCD_pulse_enable();
  fe:	e4 df       	rcall	.-56     	; 0xc8 <LCD_pulse_enable>
 100:	8f e3       	ldi	r24, 0x3F	; 63
 102:	9f e1       	ldi	r25, 0x1F	; 31
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <LCD_write_command+0xa>
 108:	00 c0       	rjmp	.+0      	; 0x10a <LCD_write_command+0x10>
 10a:	00 00       	nop
 10c:	08 95       	ret

0000010e <LCD_clear>:
	_delay_ms(2);
}

void LCD_clear(void)
{
	LCD_write_command(COMMAND_CLEAR_DISPLAY);
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	f4 df       	rcall	.-24     	; 0xfa <LCD_write_command>
 112:	8f e3       	ldi	r24, 0x3F	; 63
 114:	9f e1       	ldi	r25, 0x1F	; 31
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <LCD_clear+0x8>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <LCD_clear+0xe>
 11c:	00 00       	nop
 11e:	08 95       	ret

00000120 <LCD_init>:
 120:	2f ef       	ldi	r18, 0xFF	; 255
 122:	80 e7       	ldi	r24, 0x70	; 112
 124:	92 e0       	ldi	r25, 0x02	; 2
 126:	21 50       	subi	r18, 0x01	; 1
 128:	80 40       	sbci	r24, 0x00	; 0
 12a:	90 40       	sbci	r25, 0x00	; 0
 12c:	e1 f7       	brne	.-8      	; 0x126 <LCD_init+0x6>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <LCD_init+0x10>
 130:	00 00       	nop
void LCD_init(void)
{
	_delay_ms(50);
	
	// 연결 핀을 출력을 설정
	DDR_DATA = 0xFF;
 132:	8f ef       	ldi	r24, 0xFF	; 255
 134:	84 bb       	out	0x14, r24	; 20
	PORT_DATA = 0x00;
 136:	15 ba       	out	0x15, r1	; 21
	DDR_CONTROL |= (1 << RS_PIN) | (1 << RW_PIN) | (1 << E_PIN);
 138:	87 b3       	in	r24, 0x17	; 23
 13a:	80 6e       	ori	r24, 0xE0	; 224
 13c:	87 bb       	out	0x17, r24	; 23
	
	// R/W 핀으로 LOW를 출력하여 쓰기 전용으로 사용
	PORT_CONTROL &= ~(1<< RW_PIN);
 13e:	c6 98       	cbi	0x18, 6	; 24
	
	LCD_write_command(COMMAND_8_BIT_MODE);
 140:	88 e3       	ldi	r24, 0x38	; 56
 142:	db df       	rcall	.-74     	; 0xfa <LCD_write_command>
	
	uint8_t command = 0x08 | (1 << COMMAND_DISPLAY_ON_OFF_BIT);
	LCD_write_command(command);
 144:	8c e0       	ldi	r24, 0x0C	; 12
	
	LCD_clear();
 146:	d9 df       	rcall	.-78     	; 0xfa <LCD_write_command>
	
	LCD_write_command(0x06);
 148:	e2 df       	rcall	.-60     	; 0x10e <LCD_clear>
 14a:	86 e0       	ldi	r24, 0x06	; 6
 14c:	d6 cf       	rjmp	.-84     	; 0xfa <LCD_write_command>
 14e:	08 95       	ret

00000150 <LCD_write_string>:
}

void LCD_write_string(char *string)
{
 150:	0f 93       	push	r16
 152:	1f 93       	push	r17
 154:	cf 93       	push	r28
 156:	fc 01       	movw	r30, r24
	uint8_t i;
	for(i = 0; string[i]; i ++)
 158:	80 81       	ld	r24, Z
 15a:	88 23       	and	r24, r24
 15c:	51 f0       	breq	.+20     	; 0x172 <LCD_write_string+0x22>
 15e:	8f 01       	movw	r16, r30
 160:	c0 e0       	ldi	r28, 0x00	; 0
	{
		LCD_write_data(string[i]);
 162:	c1 df       	rcall	.-126    	; 0xe6 <LCD_write_data>
}

void LCD_write_string(char *string)
{
	uint8_t i;
	for(i = 0; string[i]; i ++)
 164:	cf 5f       	subi	r28, 0xFF	; 255
 166:	f8 01       	movw	r30, r16
 168:	ec 0f       	add	r30, r28
 16a:	f1 1d       	adc	r31, r1
 16c:	80 81       	ld	r24, Z
 16e:	81 11       	cpse	r24, r1
 170:	f8 cf       	rjmp	.-16     	; 0x162 <LCD_write_string+0x12>
	{
		LCD_write_data(string[i]);
	}
}
 172:	cf 91       	pop	r28
 174:	1f 91       	pop	r17
 176:	0f 91       	pop	r16
 178:	08 95       	ret

0000017a <LCD_goto_XY>:
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 17a:	81 70       	andi	r24, 0x01	; 1
 17c:	6f 70       	andi	r22, 0x0F	; 15
 17e:	90 e4       	ldi	r25, 0x40	; 64
 180:	89 9f       	mul	r24, r25
 182:	60 0d       	add	r22, r0
 184:	11 24       	eor	r1, r1
 186:	86 2f       	mov	r24, r22
 188:	80 58       	subi	r24, 0x80	; 128
 18a:	b7 cf       	rjmp	.-146    	; 0xfa <LCD_write_command>
 18c:	08 95       	ret

0000018e <__vector_1>:

volatile int state = 0;	// 현재 LED 상태
volatile int hr_alrm, mm_alrm, ss_alrm;

ISR(INT0_vect)
{
 18e:	1f 92       	push	r1
 190:	0f 92       	push	r0
 192:	0f b6       	in	r0, 0x3f	; 63
 194:	0f 92       	push	r0
 196:	11 24       	eor	r1, r1
 198:	8f 93       	push	r24
 19a:	9f 93       	push	r25
	state = (state + 1) % 2;
 19c:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
 1a0:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <__data_end+0x1>
 1a4:	01 96       	adiw	r24, 0x01	; 1
 1a6:	81 70       	andi	r24, 0x01	; 1
 1a8:	90 78       	andi	r25, 0x80	; 128
 1aa:	99 23       	and	r25, r25
 1ac:	24 f4       	brge	.+8      	; 0x1b6 <__vector_1+0x28>
 1ae:	01 97       	sbiw	r24, 0x01	; 1
 1b0:	8e 6f       	ori	r24, 0xFE	; 254
 1b2:	9f 6f       	ori	r25, 0xFF	; 255
 1b4:	01 96       	adiw	r24, 0x01	; 1
 1b6:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__data_end+0x1>
 1ba:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__data_end>
}
 1be:	9f 91       	pop	r25
 1c0:	8f 91       	pop	r24
 1c2:	0f 90       	pop	r0
 1c4:	0f be       	out	0x3f, r0	; 63
 1c6:	0f 90       	pop	r0
 1c8:	1f 90       	pop	r1
 1ca:	18 95       	reti

000001cc <INIT_PORT>:

void INIT_PORT(void)
{
	DDRD = 0xFF;
 1cc:	8f ef       	ldi	r24, 0xFF	; 255
 1ce:	81 bb       	out	0x11, r24	; 17
	PORTD = 0xFF;
 1d0:	82 bb       	out	0x12, r24	; 18
 1d2:	08 95       	ret

000001d4 <INIT_INT0>:
}

void INIT_INT0(void)
{
	EIMSK |= (1 << INT0);
 1d4:	89 b7       	in	r24, 0x39	; 57
 1d6:	81 60       	ori	r24, 0x01	; 1
 1d8:	89 bf       	out	0x39, r24	; 57
	EICRA |= (1 << ISC01);
 1da:	ea e6       	ldi	r30, 0x6A	; 106
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	82 60       	ori	r24, 0x02	; 2
 1e2:	80 83       	st	Z, r24
	sei();
 1e4:	78 94       	sei
 1e6:	08 95       	ret

000001e8 <main>:
}

int main(void)
{
 1e8:	cf 93       	push	r28
 1ea:	df 93       	push	r29
 1ec:	cd b7       	in	r28, 0x3d	; 61
 1ee:	de b7       	in	r29, 0x3e	; 62
 1f0:	64 97       	sbiw	r28, 0x14	; 20
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	f8 94       	cli
 1f6:	de bf       	out	0x3e, r29	; 62
 1f8:	0f be       	out	0x3f, r0	; 63
 1fa:	cd bf       	out	0x3d, r28	; 61
	INIT_PORT();
 1fc:	e7 df       	rcall	.-50     	; 0x1cc <INIT_PORT>
	INIT_INT0();
 1fe:	ea df       	rcall	.-44     	; 0x1d4 <INIT_INT0>
	
	char day = 1;
	char buff[20];
	uint8_t hr=12, mm=00, ss=00;
	LCD_init();
 200:	8f df       	rcall	.-226    	; 0x120 <LCD_init>
	
	
	LCD_write_string("HONG SIK's Clock");
 202:	80 e0       	ldi	r24, 0x00	; 0
 204:	91 e0       	ldi	r25, 0x01	; 1
 206:	a4 df       	rcall	.-184    	; 0x150 <LCD_write_string>
 208:	2f ef       	ldi	r18, 0xFF	; 255
 20a:	8d e3       	ldi	r24, 0x3D	; 61
 20c:	99 e4       	ldi	r25, 0x49	; 73
 20e:	21 50       	subi	r18, 0x01	; 1
 210:	80 40       	sbci	r24, 0x00	; 0
 212:	90 40       	sbci	r25, 0x00	; 0
 214:	e1 f7       	brne	.-8      	; 0x20e <main+0x26>
 216:	00 c0       	rjmp	.+0      	; 0x218 <main+0x30>
 218:	00 00       	nop
 21a:	10 e0       	ldi	r17, 0x00	; 0
	INIT_PORT();
	INIT_INT0();
	
	char day = 1;
	char buff[20];
	uint8_t hr=12, mm=00, ss=00;
 21c:	e1 2c       	mov	r14, r1
 21e:	0f 2e       	mov	r0, r31
 220:	fc e0       	ldi	r31, 0x0C	; 12
 222:	ff 2e       	mov	r15, r31
 224:	f0 2d       	mov	r31, r0
 226:	01 e0       	ldi	r16, 0x01	; 1
int main(void)
{
	INIT_PORT();
	INIT_INT0();
	
	char day = 1;
 228:	0f 2e       	mov	r0, r31
	
	/* Replace with your application code */
	while (1)
	{
		LCD_goto_XY(1,0);
		sprintf(buff, "%02d:%02d:%02d", hr, mm, ss);
 22a:	f1 e1       	ldi	r31, 0x11	; 17
 22c:	af 2e       	mov	r10, r31
 22e:	f1 e0       	ldi	r31, 0x01	; 1
 230:	bf 2e       	mov	r11, r31
 232:	f0 2d       	mov	r31, r0
 234:	ce 01       	movw	r24, r28
 236:	01 96       	adiw	r24, 0x01	; 1
 238:	6c 01       	movw	r12, r24
 23a:	04 c0       	rjmp	.+8      	; 0x244 <main+0x5c>
 23c:	10 e0       	ldi	r17, 0x00	; 0
		_delay_ms(1);
		ss++;
		
		if (ss >= 60 && hr < 12)
		{
			ss = 0;
 23e:	02 c0       	rjmp	.+4      	; 0x244 <main+0x5c>
 240:	10 e0       	ldi	r17, 0x00	; 0
			mm++;
			if (mm >= 60)
			{
				hr++;
				mm=0;
 242:	e1 2c       	mov	r14, r1
	
	
	/* Replace with your application code */
	while (1)
	{
		LCD_goto_XY(1,0);
 244:	60 e0       	ldi	r22, 0x00	; 0
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	98 df       	rcall	.-208    	; 0x17a <LCD_goto_XY>
 24a:	1f 92       	push	r1
		sprintf(buff, "%02d:%02d:%02d", hr, mm, ss);
 24c:	1f 93       	push	r17
 24e:	1f 92       	push	r1
 250:	ef 92       	push	r14
 252:	1f 92       	push	r1
 254:	ff 92       	push	r15
 256:	bf 92       	push	r11
 258:	af 92       	push	r10
 25a:	df 92       	push	r13
 25c:	cf 92       	push	r12
 25e:	38 d0       	rcall	.+112    	; 0x2d0 <sprintf>
		LCD_write_string(buff);
 260:	c6 01       	movw	r24, r12
 262:	76 df       	rcall	.-276    	; 0x150 <LCD_write_string>
 264:	0f b6       	in	r0, 0x3f	; 63
		
		if(day == 1)
 266:	f8 94       	cli
 268:	de bf       	out	0x3e, r29	; 62
 26a:	0f be       	out	0x3f, r0	; 63
 26c:	cd bf       	out	0x3d, r28	; 61
 26e:	01 30       	cpi	r16, 0x01	; 1
 270:	21 f4       	brne	.+8      	; 0x27a <main+0x92>
		LCD_write_string(" AM");
 272:	80 e2       	ldi	r24, 0x20	; 32
 274:	91 e0       	ldi	r25, 0x01	; 1
 276:	6c df       	rcall	.-296    	; 0x150 <LCD_write_string>
 278:	05 c0       	rjmp	.+10     	; 0x284 <main+0x9c>
		
		if(day == 0)
 27a:	01 11       	cpse	r16, r1
 27c:	03 c0       	rjmp	.+6      	; 0x284 <main+0x9c>
		LCD_write_string(" PM");
 27e:	84 e2       	ldi	r24, 0x24	; 36
 280:	91 e0       	ldi	r25, 0x01	; 1
 282:	66 df       	rcall	.-308    	; 0x150 <LCD_write_string>
 284:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
		
		if(state ==1 )
 288:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <__data_end+0x1>
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	11 f4       	brne	.+4      	; 0x294 <main+0xac>
 290:	81 e0       	ldi	r24, 0x01	; 1
		{
			PORTD = 0x01;
 292:	82 bb       	out	0x12, r24	; 18
 294:	9b e0       	ldi	r25, 0x0B	; 11
		}
		
		if(hr >= 12)
 296:	9f 15       	cp	r25, r15
 298:	80 f4       	brcc	.+32     	; 0x2ba <main+0xd2>
 29a:	00 95       	com	r16
		{
			hr=0;
			day = ~day;
 29c:	f1 2c       	mov	r15, r1
			PORTD = 0x01;
		}
		
		if(hr >= 12)
		{
			hr=0;
 29e:	0d c0       	rjmp	.+26     	; 0x2ba <main+0xd2>
 2a0:	e3 94       	inc	r14
		ss++;
		
		if (ss >= 60 && hr < 12)
		{
			ss = 0;
			mm++;
 2a2:	2b e3       	ldi	r18, 0x3B	; 59
			if (mm >= 60)
 2a4:	2e 15       	cp	r18, r14
 2a6:	50 f6       	brcc	.-108    	; 0x23c <main+0x54>
 2a8:	f3 94       	inc	r15
			{
				hr++;
 2aa:	8b e0       	ldi	r24, 0x0B	; 11
				mm=0;
				if(hr >= 12)
 2ac:	8f 15       	cp	r24, r15
 2ae:	40 f6       	brcc	.-112    	; 0x240 <main+0x58>
 2b0:	00 95       	com	r16
				{
					hr=0;
					ss=0;
					day = ~day;
 2b2:	10 e0       	ldi	r17, 0x00	; 0
				hr++;
				mm=0;
				if(hr >= 12)
				{
					hr=0;
					ss=0;
 2b4:	e1 2c       	mov	r14, r1
			ss = 0;
			mm++;
			if (mm >= 60)
			{
				hr++;
				mm=0;
 2b6:	f1 2c       	mov	r15, r1
				if(hr >= 12)
				{
					hr=0;
 2b8:	c5 cf       	rjmp	.-118    	; 0x244 <main+0x5c>
 2ba:	8f e9       	ldi	r24, 0x9F	; 159
 2bc:	9f e0       	ldi	r25, 0x0F	; 15
 2be:	01 97       	sbiw	r24, 0x01	; 1
 2c0:	f1 f7       	brne	.-4      	; 0x2be <main+0xd6>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <main+0xdc>
 2c4:	00 00       	nop
 2c6:	1f 5f       	subi	r17, 0xFF	; 255
			hr=0;
			day = ~day;
		}
		
		_delay_ms(1);
		ss++;
 2c8:	1c 33       	cpi	r17, 0x3C	; 60
		
		if (ss >= 60 && hr < 12)
 2ca:	08 f4       	brcc	.+2      	; 0x2ce <main+0xe6>
 2cc:	bb cf       	rjmp	.-138    	; 0x244 <main+0x5c>
 2ce:	e8 cf       	rjmp	.-48     	; 0x2a0 <main+0xb8>

000002d0 <sprintf>:
 2d0:	0f 93       	push	r16
 2d2:	1f 93       	push	r17
 2d4:	cf 93       	push	r28
 2d6:	df 93       	push	r29
 2d8:	cd b7       	in	r28, 0x3d	; 61
 2da:	de b7       	in	r29, 0x3e	; 62
 2dc:	2e 97       	sbiw	r28, 0x0e	; 14
 2de:	0f b6       	in	r0, 0x3f	; 63
 2e0:	f8 94       	cli
 2e2:	de bf       	out	0x3e, r29	; 62
 2e4:	0f be       	out	0x3f, r0	; 63
 2e6:	cd bf       	out	0x3d, r28	; 61
 2e8:	0d 89       	ldd	r16, Y+21	; 0x15
 2ea:	1e 89       	ldd	r17, Y+22	; 0x16
 2ec:	86 e0       	ldi	r24, 0x06	; 6
 2ee:	8c 83       	std	Y+4, r24	; 0x04
 2f0:	1a 83       	std	Y+2, r17	; 0x02
 2f2:	09 83       	std	Y+1, r16	; 0x01
 2f4:	8f ef       	ldi	r24, 0xFF	; 255
 2f6:	9f e7       	ldi	r25, 0x7F	; 127
 2f8:	9e 83       	std	Y+6, r25	; 0x06
 2fa:	8d 83       	std	Y+5, r24	; 0x05
 2fc:	ae 01       	movw	r20, r28
 2fe:	47 5e       	subi	r20, 0xE7	; 231
 300:	5f 4f       	sbci	r21, 0xFF	; 255
 302:	6f 89       	ldd	r22, Y+23	; 0x17
 304:	78 8d       	ldd	r23, Y+24	; 0x18
 306:	ce 01       	movw	r24, r28
 308:	01 96       	adiw	r24, 0x01	; 1
 30a:	10 d0       	rcall	.+32     	; 0x32c <vfprintf>
 30c:	ef 81       	ldd	r30, Y+7	; 0x07
 30e:	f8 85       	ldd	r31, Y+8	; 0x08
 310:	e0 0f       	add	r30, r16
 312:	f1 1f       	adc	r31, r17
 314:	10 82       	st	Z, r1
 316:	2e 96       	adiw	r28, 0x0e	; 14
 318:	0f b6       	in	r0, 0x3f	; 63
 31a:	f8 94       	cli
 31c:	de bf       	out	0x3e, r29	; 62
 31e:	0f be       	out	0x3f, r0	; 63
 320:	cd bf       	out	0x3d, r28	; 61
 322:	df 91       	pop	r29
 324:	cf 91       	pop	r28
 326:	1f 91       	pop	r17
 328:	0f 91       	pop	r16
 32a:	08 95       	ret

0000032c <vfprintf>:
 32c:	2f 92       	push	r2
 32e:	3f 92       	push	r3
 330:	4f 92       	push	r4
 332:	5f 92       	push	r5
 334:	6f 92       	push	r6
 336:	7f 92       	push	r7
 338:	8f 92       	push	r8
 33a:	9f 92       	push	r9
 33c:	af 92       	push	r10
 33e:	bf 92       	push	r11
 340:	cf 92       	push	r12
 342:	df 92       	push	r13
 344:	ef 92       	push	r14
 346:	ff 92       	push	r15
 348:	0f 93       	push	r16
 34a:	1f 93       	push	r17
 34c:	cf 93       	push	r28
 34e:	df 93       	push	r29
 350:	cd b7       	in	r28, 0x3d	; 61
 352:	de b7       	in	r29, 0x3e	; 62
 354:	2b 97       	sbiw	r28, 0x0b	; 11
 356:	0f b6       	in	r0, 0x3f	; 63
 358:	f8 94       	cli
 35a:	de bf       	out	0x3e, r29	; 62
 35c:	0f be       	out	0x3f, r0	; 63
 35e:	cd bf       	out	0x3d, r28	; 61
 360:	6c 01       	movw	r12, r24
 362:	7b 01       	movw	r14, r22
 364:	8a 01       	movw	r16, r20
 366:	fc 01       	movw	r30, r24
 368:	17 82       	std	Z+7, r1	; 0x07
 36a:	16 82       	std	Z+6, r1	; 0x06
 36c:	83 81       	ldd	r24, Z+3	; 0x03
 36e:	81 ff       	sbrs	r24, 1
 370:	bf c1       	rjmp	.+894    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
 372:	ce 01       	movw	r24, r28
 374:	01 96       	adiw	r24, 0x01	; 1
 376:	3c 01       	movw	r6, r24
 378:	f6 01       	movw	r30, r12
 37a:	93 81       	ldd	r25, Z+3	; 0x03
 37c:	f7 01       	movw	r30, r14
 37e:	93 fd       	sbrc	r25, 3
 380:	85 91       	lpm	r24, Z+
 382:	93 ff       	sbrs	r25, 3
 384:	81 91       	ld	r24, Z+
 386:	7f 01       	movw	r14, r30
 388:	88 23       	and	r24, r24
 38a:	09 f4       	brne	.+2      	; 0x38e <vfprintf+0x62>
 38c:	ad c1       	rjmp	.+858    	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 38e:	85 32       	cpi	r24, 0x25	; 37
 390:	39 f4       	brne	.+14     	; 0x3a0 <vfprintf+0x74>
 392:	93 fd       	sbrc	r25, 3
 394:	85 91       	lpm	r24, Z+
 396:	93 ff       	sbrs	r25, 3
 398:	81 91       	ld	r24, Z+
 39a:	7f 01       	movw	r14, r30
 39c:	85 32       	cpi	r24, 0x25	; 37
 39e:	21 f4       	brne	.+8      	; 0x3a8 <vfprintf+0x7c>
 3a0:	b6 01       	movw	r22, r12
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	d6 d1       	rcall	.+940    	; 0x752 <fputc>
 3a6:	e8 cf       	rjmp	.-48     	; 0x378 <vfprintf+0x4c>
 3a8:	91 2c       	mov	r9, r1
 3aa:	21 2c       	mov	r2, r1
 3ac:	31 2c       	mov	r3, r1
 3ae:	ff e1       	ldi	r31, 0x1F	; 31
 3b0:	f3 15       	cp	r31, r3
 3b2:	d8 f0       	brcs	.+54     	; 0x3ea <vfprintf+0xbe>
 3b4:	8b 32       	cpi	r24, 0x2B	; 43
 3b6:	79 f0       	breq	.+30     	; 0x3d6 <vfprintf+0xaa>
 3b8:	38 f4       	brcc	.+14     	; 0x3c8 <vfprintf+0x9c>
 3ba:	80 32       	cpi	r24, 0x20	; 32
 3bc:	79 f0       	breq	.+30     	; 0x3dc <vfprintf+0xb0>
 3be:	83 32       	cpi	r24, 0x23	; 35
 3c0:	a1 f4       	brne	.+40     	; 0x3ea <vfprintf+0xbe>
 3c2:	23 2d       	mov	r18, r3
 3c4:	20 61       	ori	r18, 0x10	; 16
 3c6:	1d c0       	rjmp	.+58     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3c8:	8d 32       	cpi	r24, 0x2D	; 45
 3ca:	61 f0       	breq	.+24     	; 0x3e4 <vfprintf+0xb8>
 3cc:	80 33       	cpi	r24, 0x30	; 48
 3ce:	69 f4       	brne	.+26     	; 0x3ea <vfprintf+0xbe>
 3d0:	23 2d       	mov	r18, r3
 3d2:	21 60       	ori	r18, 0x01	; 1
 3d4:	16 c0       	rjmp	.+44     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3d6:	83 2d       	mov	r24, r3
 3d8:	82 60       	ori	r24, 0x02	; 2
 3da:	38 2e       	mov	r3, r24
 3dc:	e3 2d       	mov	r30, r3
 3de:	e4 60       	ori	r30, 0x04	; 4
 3e0:	3e 2e       	mov	r3, r30
 3e2:	2a c0       	rjmp	.+84     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 3e4:	f3 2d       	mov	r31, r3
 3e6:	f8 60       	ori	r31, 0x08	; 8
 3e8:	1d c0       	rjmp	.+58     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3ea:	37 fc       	sbrc	r3, 7
 3ec:	2d c0       	rjmp	.+90     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 3ee:	20 ed       	ldi	r18, 0xD0	; 208
 3f0:	28 0f       	add	r18, r24
 3f2:	2a 30       	cpi	r18, 0x0A	; 10
 3f4:	40 f0       	brcs	.+16     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3f6:	8e 32       	cpi	r24, 0x2E	; 46
 3f8:	b9 f4       	brne	.+46     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 3fa:	36 fc       	sbrc	r3, 6
 3fc:	75 c1       	rjmp	.+746    	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 3fe:	23 2d       	mov	r18, r3
 400:	20 64       	ori	r18, 0x40	; 64
 402:	32 2e       	mov	r3, r18
 404:	19 c0       	rjmp	.+50     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 406:	36 fe       	sbrs	r3, 6
 408:	06 c0       	rjmp	.+12     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 40a:	8a e0       	ldi	r24, 0x0A	; 10
 40c:	98 9e       	mul	r9, r24
 40e:	20 0d       	add	r18, r0
 410:	11 24       	eor	r1, r1
 412:	92 2e       	mov	r9, r18
 414:	11 c0       	rjmp	.+34     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 416:	ea e0       	ldi	r30, 0x0A	; 10
 418:	2e 9e       	mul	r2, r30
 41a:	20 0d       	add	r18, r0
 41c:	11 24       	eor	r1, r1
 41e:	22 2e       	mov	r2, r18
 420:	f3 2d       	mov	r31, r3
 422:	f0 62       	ori	r31, 0x20	; 32
 424:	3f 2e       	mov	r3, r31
 426:	08 c0       	rjmp	.+16     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 428:	8c 36       	cpi	r24, 0x6C	; 108
 42a:	21 f4       	brne	.+8      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 42c:	83 2d       	mov	r24, r3
 42e:	80 68       	ori	r24, 0x80	; 128
 430:	38 2e       	mov	r3, r24
 432:	02 c0       	rjmp	.+4      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 434:	88 36       	cpi	r24, 0x68	; 104
 436:	41 f4       	brne	.+16     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 438:	f7 01       	movw	r30, r14
 43a:	93 fd       	sbrc	r25, 3
 43c:	85 91       	lpm	r24, Z+
 43e:	93 ff       	sbrs	r25, 3
 440:	81 91       	ld	r24, Z+
 442:	7f 01       	movw	r14, r30
 444:	81 11       	cpse	r24, r1
 446:	b3 cf       	rjmp	.-154    	; 0x3ae <vfprintf+0x82>
 448:	98 2f       	mov	r25, r24
 44a:	9f 7d       	andi	r25, 0xDF	; 223
 44c:	95 54       	subi	r25, 0x45	; 69
 44e:	93 30       	cpi	r25, 0x03	; 3
 450:	28 f4       	brcc	.+10     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 452:	0c 5f       	subi	r16, 0xFC	; 252
 454:	1f 4f       	sbci	r17, 0xFF	; 255
 456:	9f e3       	ldi	r25, 0x3F	; 63
 458:	99 83       	std	Y+1, r25	; 0x01
 45a:	0d c0       	rjmp	.+26     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 45c:	83 36       	cpi	r24, 0x63	; 99
 45e:	31 f0       	breq	.+12     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 460:	83 37       	cpi	r24, 0x73	; 115
 462:	71 f0       	breq	.+28     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 464:	83 35       	cpi	r24, 0x53	; 83
 466:	09 f0       	breq	.+2      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 468:	55 c0       	rjmp	.+170    	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 46a:	20 c0       	rjmp	.+64     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 46c:	f8 01       	movw	r30, r16
 46e:	80 81       	ld	r24, Z
 470:	89 83       	std	Y+1, r24	; 0x01
 472:	0e 5f       	subi	r16, 0xFE	; 254
 474:	1f 4f       	sbci	r17, 0xFF	; 255
 476:	88 24       	eor	r8, r8
 478:	83 94       	inc	r8
 47a:	91 2c       	mov	r9, r1
 47c:	53 01       	movw	r10, r6
 47e:	12 c0       	rjmp	.+36     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 480:	28 01       	movw	r4, r16
 482:	f2 e0       	ldi	r31, 0x02	; 2
 484:	4f 0e       	add	r4, r31
 486:	51 1c       	adc	r5, r1
 488:	f8 01       	movw	r30, r16
 48a:	a0 80       	ld	r10, Z
 48c:	b1 80       	ldd	r11, Z+1	; 0x01
 48e:	36 fe       	sbrs	r3, 6
 490:	03 c0       	rjmp	.+6      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 492:	69 2d       	mov	r22, r9
 494:	70 e0       	ldi	r23, 0x00	; 0
 496:	02 c0       	rjmp	.+4      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 498:	6f ef       	ldi	r22, 0xFF	; 255
 49a:	7f ef       	ldi	r23, 0xFF	; 255
 49c:	c5 01       	movw	r24, r10
 49e:	4e d1       	rcall	.+668    	; 0x73c <strnlen>
 4a0:	4c 01       	movw	r8, r24
 4a2:	82 01       	movw	r16, r4
 4a4:	f3 2d       	mov	r31, r3
 4a6:	ff 77       	andi	r31, 0x7F	; 127
 4a8:	3f 2e       	mov	r3, r31
 4aa:	15 c0       	rjmp	.+42     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4ac:	28 01       	movw	r4, r16
 4ae:	22 e0       	ldi	r18, 0x02	; 2
 4b0:	42 0e       	add	r4, r18
 4b2:	51 1c       	adc	r5, r1
 4b4:	f8 01       	movw	r30, r16
 4b6:	a0 80       	ld	r10, Z
 4b8:	b1 80       	ldd	r11, Z+1	; 0x01
 4ba:	36 fe       	sbrs	r3, 6
 4bc:	03 c0       	rjmp	.+6      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4be:	69 2d       	mov	r22, r9
 4c0:	70 e0       	ldi	r23, 0x00	; 0
 4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c4:	6f ef       	ldi	r22, 0xFF	; 255
 4c6:	7f ef       	ldi	r23, 0xFF	; 255
 4c8:	c5 01       	movw	r24, r10
 4ca:	2d d1       	rcall	.+602    	; 0x726 <strnlen_P>
 4cc:	4c 01       	movw	r8, r24
 4ce:	f3 2d       	mov	r31, r3
 4d0:	f0 68       	ori	r31, 0x80	; 128
 4d2:	3f 2e       	mov	r3, r31
 4d4:	82 01       	movw	r16, r4
 4d6:	33 fc       	sbrc	r3, 3
 4d8:	19 c0       	rjmp	.+50     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4da:	82 2d       	mov	r24, r2
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	88 16       	cp	r8, r24
 4e0:	99 06       	cpc	r9, r25
 4e2:	a0 f4       	brcc	.+40     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4e4:	b6 01       	movw	r22, r12
 4e6:	80 e2       	ldi	r24, 0x20	; 32
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	33 d1       	rcall	.+614    	; 0x752 <fputc>
 4ec:	2a 94       	dec	r2
 4ee:	f5 cf       	rjmp	.-22     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4f0:	f5 01       	movw	r30, r10
 4f2:	37 fc       	sbrc	r3, 7
 4f4:	85 91       	lpm	r24, Z+
 4f6:	37 fe       	sbrs	r3, 7
 4f8:	81 91       	ld	r24, Z+
 4fa:	5f 01       	movw	r10, r30
 4fc:	b6 01       	movw	r22, r12
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	28 d1       	rcall	.+592    	; 0x752 <fputc>
 502:	21 10       	cpse	r2, r1
 504:	2a 94       	dec	r2
 506:	21 e0       	ldi	r18, 0x01	; 1
 508:	82 1a       	sub	r8, r18
 50a:	91 08       	sbc	r9, r1
 50c:	81 14       	cp	r8, r1
 50e:	91 04       	cpc	r9, r1
 510:	79 f7       	brne	.-34     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 512:	e1 c0       	rjmp	.+450    	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
 514:	84 36       	cpi	r24, 0x64	; 100
 516:	11 f0       	breq	.+4      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 518:	89 36       	cpi	r24, 0x69	; 105
 51a:	39 f5       	brne	.+78     	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 51c:	f8 01       	movw	r30, r16
 51e:	37 fe       	sbrs	r3, 7
 520:	07 c0       	rjmp	.+14     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 522:	60 81       	ld	r22, Z
 524:	71 81       	ldd	r23, Z+1	; 0x01
 526:	82 81       	ldd	r24, Z+2	; 0x02
 528:	93 81       	ldd	r25, Z+3	; 0x03
 52a:	0c 5f       	subi	r16, 0xFC	; 252
 52c:	1f 4f       	sbci	r17, 0xFF	; 255
 52e:	08 c0       	rjmp	.+16     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 530:	60 81       	ld	r22, Z
 532:	71 81       	ldd	r23, Z+1	; 0x01
 534:	07 2e       	mov	r0, r23
 536:	00 0c       	add	r0, r0
 538:	88 0b       	sbc	r24, r24
 53a:	99 0b       	sbc	r25, r25
 53c:	0e 5f       	subi	r16, 0xFE	; 254
 53e:	1f 4f       	sbci	r17, 0xFF	; 255
 540:	f3 2d       	mov	r31, r3
 542:	ff 76       	andi	r31, 0x6F	; 111
 544:	3f 2e       	mov	r3, r31
 546:	97 ff       	sbrs	r25, 7
 548:	09 c0       	rjmp	.+18     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 54a:	90 95       	com	r25
 54c:	80 95       	com	r24
 54e:	70 95       	com	r23
 550:	61 95       	neg	r22
 552:	7f 4f       	sbci	r23, 0xFF	; 255
 554:	8f 4f       	sbci	r24, 0xFF	; 255
 556:	9f 4f       	sbci	r25, 0xFF	; 255
 558:	f0 68       	ori	r31, 0x80	; 128
 55a:	3f 2e       	mov	r3, r31
 55c:	2a e0       	ldi	r18, 0x0A	; 10
 55e:	30 e0       	ldi	r19, 0x00	; 0
 560:	a3 01       	movw	r20, r6
 562:	33 d1       	rcall	.+614    	; 0x7ca <__ultoa_invert>
 564:	88 2e       	mov	r8, r24
 566:	86 18       	sub	r8, r6
 568:	44 c0       	rjmp	.+136    	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 56a:	85 37       	cpi	r24, 0x75	; 117
 56c:	31 f4       	brne	.+12     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 56e:	23 2d       	mov	r18, r3
 570:	2f 7e       	andi	r18, 0xEF	; 239
 572:	b2 2e       	mov	r11, r18
 574:	2a e0       	ldi	r18, 0x0A	; 10
 576:	30 e0       	ldi	r19, 0x00	; 0
 578:	25 c0       	rjmp	.+74     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 57a:	93 2d       	mov	r25, r3
 57c:	99 7f       	andi	r25, 0xF9	; 249
 57e:	b9 2e       	mov	r11, r25
 580:	8f 36       	cpi	r24, 0x6F	; 111
 582:	c1 f0       	breq	.+48     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 584:	18 f4       	brcc	.+6      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 586:	88 35       	cpi	r24, 0x58	; 88
 588:	79 f0       	breq	.+30     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 58a:	ae c0       	rjmp	.+348    	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 58c:	80 37       	cpi	r24, 0x70	; 112
 58e:	19 f0       	breq	.+6      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 590:	88 37       	cpi	r24, 0x78	; 120
 592:	21 f0       	breq	.+8      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 594:	a9 c0       	rjmp	.+338    	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 596:	e9 2f       	mov	r30, r25
 598:	e0 61       	ori	r30, 0x10	; 16
 59a:	be 2e       	mov	r11, r30
 59c:	b4 fe       	sbrs	r11, 4
 59e:	0d c0       	rjmp	.+26     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5a0:	fb 2d       	mov	r31, r11
 5a2:	f4 60       	ori	r31, 0x04	; 4
 5a4:	bf 2e       	mov	r11, r31
 5a6:	09 c0       	rjmp	.+18     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5a8:	34 fe       	sbrs	r3, 4
 5aa:	0a c0       	rjmp	.+20     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5ac:	29 2f       	mov	r18, r25
 5ae:	26 60       	ori	r18, 0x06	; 6
 5b0:	b2 2e       	mov	r11, r18
 5b2:	06 c0       	rjmp	.+12     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5b4:	28 e0       	ldi	r18, 0x08	; 8
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	05 c0       	rjmp	.+10     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5ba:	20 e1       	ldi	r18, 0x10	; 16
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5c0:	20 e1       	ldi	r18, 0x10	; 16
 5c2:	32 e0       	ldi	r19, 0x02	; 2
 5c4:	f8 01       	movw	r30, r16
 5c6:	b7 fe       	sbrs	r11, 7
 5c8:	07 c0       	rjmp	.+14     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5ca:	60 81       	ld	r22, Z
 5cc:	71 81       	ldd	r23, Z+1	; 0x01
 5ce:	82 81       	ldd	r24, Z+2	; 0x02
 5d0:	93 81       	ldd	r25, Z+3	; 0x03
 5d2:	0c 5f       	subi	r16, 0xFC	; 252
 5d4:	1f 4f       	sbci	r17, 0xFF	; 255
 5d6:	06 c0       	rjmp	.+12     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5d8:	60 81       	ld	r22, Z
 5da:	71 81       	ldd	r23, Z+1	; 0x01
 5dc:	80 e0       	ldi	r24, 0x00	; 0
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 5f       	subi	r16, 0xFE	; 254
 5e2:	1f 4f       	sbci	r17, 0xFF	; 255
 5e4:	a3 01       	movw	r20, r6
 5e6:	f1 d0       	rcall	.+482    	; 0x7ca <__ultoa_invert>
 5e8:	88 2e       	mov	r8, r24
 5ea:	86 18       	sub	r8, r6
 5ec:	fb 2d       	mov	r31, r11
 5ee:	ff 77       	andi	r31, 0x7F	; 127
 5f0:	3f 2e       	mov	r3, r31
 5f2:	36 fe       	sbrs	r3, 6
 5f4:	0d c0       	rjmp	.+26     	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 5f6:	23 2d       	mov	r18, r3
 5f8:	2e 7f       	andi	r18, 0xFE	; 254
 5fa:	a2 2e       	mov	r10, r18
 5fc:	89 14       	cp	r8, r9
 5fe:	58 f4       	brcc	.+22     	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 600:	34 fe       	sbrs	r3, 4
 602:	0b c0       	rjmp	.+22     	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 604:	32 fc       	sbrc	r3, 2
 606:	09 c0       	rjmp	.+18     	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 608:	83 2d       	mov	r24, r3
 60a:	8e 7e       	andi	r24, 0xEE	; 238
 60c:	a8 2e       	mov	r10, r24
 60e:	05 c0       	rjmp	.+10     	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 610:	b8 2c       	mov	r11, r8
 612:	a3 2c       	mov	r10, r3
 614:	03 c0       	rjmp	.+6      	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 616:	b8 2c       	mov	r11, r8
 618:	01 c0       	rjmp	.+2      	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 61a:	b9 2c       	mov	r11, r9
 61c:	a4 fe       	sbrs	r10, 4
 61e:	0f c0       	rjmp	.+30     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 620:	fe 01       	movw	r30, r28
 622:	e8 0d       	add	r30, r8
 624:	f1 1d       	adc	r31, r1
 626:	80 81       	ld	r24, Z
 628:	80 33       	cpi	r24, 0x30	; 48
 62a:	21 f4       	brne	.+8      	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 62c:	9a 2d       	mov	r25, r10
 62e:	99 7e       	andi	r25, 0xE9	; 233
 630:	a9 2e       	mov	r10, r25
 632:	09 c0       	rjmp	.+18     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 634:	a2 fe       	sbrs	r10, 2
 636:	06 c0       	rjmp	.+12     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 638:	b3 94       	inc	r11
 63a:	b3 94       	inc	r11
 63c:	04 c0       	rjmp	.+8      	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 63e:	8a 2d       	mov	r24, r10
 640:	86 78       	andi	r24, 0x86	; 134
 642:	09 f0       	breq	.+2      	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 644:	b3 94       	inc	r11
 646:	a3 fc       	sbrc	r10, 3
 648:	10 c0       	rjmp	.+32     	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 64a:	a0 fe       	sbrs	r10, 0
 64c:	06 c0       	rjmp	.+12     	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 64e:	b2 14       	cp	r11, r2
 650:	80 f4       	brcc	.+32     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 652:	28 0c       	add	r2, r8
 654:	92 2c       	mov	r9, r2
 656:	9b 18       	sub	r9, r11
 658:	0d c0       	rjmp	.+26     	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 65a:	b2 14       	cp	r11, r2
 65c:	58 f4       	brcc	.+22     	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 65e:	b6 01       	movw	r22, r12
 660:	80 e2       	ldi	r24, 0x20	; 32
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	76 d0       	rcall	.+236    	; 0x752 <fputc>
 666:	b3 94       	inc	r11
 668:	f8 cf       	rjmp	.-16     	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 66a:	b2 14       	cp	r11, r2
 66c:	18 f4       	brcc	.+6      	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 66e:	2b 18       	sub	r2, r11
 670:	02 c0       	rjmp	.+4      	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 672:	98 2c       	mov	r9, r8
 674:	21 2c       	mov	r2, r1
 676:	a4 fe       	sbrs	r10, 4
 678:	0f c0       	rjmp	.+30     	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 67a:	b6 01       	movw	r22, r12
 67c:	80 e3       	ldi	r24, 0x30	; 48
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	68 d0       	rcall	.+208    	; 0x752 <fputc>
 682:	a2 fe       	sbrs	r10, 2
 684:	16 c0       	rjmp	.+44     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 686:	a1 fc       	sbrc	r10, 1
 688:	03 c0       	rjmp	.+6      	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 68a:	88 e7       	ldi	r24, 0x78	; 120
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	02 c0       	rjmp	.+4      	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 690:	88 e5       	ldi	r24, 0x58	; 88
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	b6 01       	movw	r22, r12
 696:	0c c0       	rjmp	.+24     	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 698:	8a 2d       	mov	r24, r10
 69a:	86 78       	andi	r24, 0x86	; 134
 69c:	51 f0       	breq	.+20     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 69e:	a1 fe       	sbrs	r10, 1
 6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 6a2:	8b e2       	ldi	r24, 0x2B	; 43
 6a4:	01 c0       	rjmp	.+2      	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 6a6:	80 e2       	ldi	r24, 0x20	; 32
 6a8:	a7 fc       	sbrc	r10, 7
 6aa:	8d e2       	ldi	r24, 0x2D	; 45
 6ac:	b6 01       	movw	r22, r12
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	50 d0       	rcall	.+160    	; 0x752 <fputc>
 6b2:	89 14       	cp	r8, r9
 6b4:	30 f4       	brcc	.+12     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6b6:	b6 01       	movw	r22, r12
 6b8:	80 e3       	ldi	r24, 0x30	; 48
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	4a d0       	rcall	.+148    	; 0x752 <fputc>
 6be:	9a 94       	dec	r9
 6c0:	f8 cf       	rjmp	.-16     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 6c2:	8a 94       	dec	r8
 6c4:	f3 01       	movw	r30, r6
 6c6:	e8 0d       	add	r30, r8
 6c8:	f1 1d       	adc	r31, r1
 6ca:	80 81       	ld	r24, Z
 6cc:	b6 01       	movw	r22, r12
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	40 d0       	rcall	.+128    	; 0x752 <fputc>
 6d2:	81 10       	cpse	r8, r1
 6d4:	f6 cf       	rjmp	.-20     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6d6:	22 20       	and	r2, r2
 6d8:	09 f4       	brne	.+2      	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6da:	4e ce       	rjmp	.-868    	; 0x378 <vfprintf+0x4c>
 6dc:	b6 01       	movw	r22, r12
 6de:	80 e2       	ldi	r24, 0x20	; 32
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	37 d0       	rcall	.+110    	; 0x752 <fputc>
 6e4:	2a 94       	dec	r2
 6e6:	f7 cf       	rjmp	.-18     	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
 6e8:	f6 01       	movw	r30, r12
 6ea:	86 81       	ldd	r24, Z+6	; 0x06
 6ec:	97 81       	ldd	r25, Z+7	; 0x07
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 6f0:	8f ef       	ldi	r24, 0xFF	; 255
 6f2:	9f ef       	ldi	r25, 0xFF	; 255
 6f4:	2b 96       	adiw	r28, 0x0b	; 11
 6f6:	0f b6       	in	r0, 0x3f	; 63
 6f8:	f8 94       	cli
 6fa:	de bf       	out	0x3e, r29	; 62
 6fc:	0f be       	out	0x3f, r0	; 63
 6fe:	cd bf       	out	0x3d, r28	; 61
 700:	df 91       	pop	r29
 702:	cf 91       	pop	r28
 704:	1f 91       	pop	r17
 706:	0f 91       	pop	r16
 708:	ff 90       	pop	r15
 70a:	ef 90       	pop	r14
 70c:	df 90       	pop	r13
 70e:	cf 90       	pop	r12
 710:	bf 90       	pop	r11
 712:	af 90       	pop	r10
 714:	9f 90       	pop	r9
 716:	8f 90       	pop	r8
 718:	7f 90       	pop	r7
 71a:	6f 90       	pop	r6
 71c:	5f 90       	pop	r5
 71e:	4f 90       	pop	r4
 720:	3f 90       	pop	r3
 722:	2f 90       	pop	r2
 724:	08 95       	ret

00000726 <strnlen_P>:
 726:	fc 01       	movw	r30, r24
 728:	05 90       	lpm	r0, Z+
 72a:	61 50       	subi	r22, 0x01	; 1
 72c:	70 40       	sbci	r23, 0x00	; 0
 72e:	01 10       	cpse	r0, r1
 730:	d8 f7       	brcc	.-10     	; 0x728 <strnlen_P+0x2>
 732:	80 95       	com	r24
 734:	90 95       	com	r25
 736:	8e 0f       	add	r24, r30
 738:	9f 1f       	adc	r25, r31
 73a:	08 95       	ret

0000073c <strnlen>:
 73c:	fc 01       	movw	r30, r24
 73e:	61 50       	subi	r22, 0x01	; 1
 740:	70 40       	sbci	r23, 0x00	; 0
 742:	01 90       	ld	r0, Z+
 744:	01 10       	cpse	r0, r1
 746:	d8 f7       	brcc	.-10     	; 0x73e <strnlen+0x2>
 748:	80 95       	com	r24
 74a:	90 95       	com	r25
 74c:	8e 0f       	add	r24, r30
 74e:	9f 1f       	adc	r25, r31
 750:	08 95       	ret

00000752 <fputc>:
 752:	0f 93       	push	r16
 754:	1f 93       	push	r17
 756:	cf 93       	push	r28
 758:	df 93       	push	r29
 75a:	fb 01       	movw	r30, r22
 75c:	23 81       	ldd	r18, Z+3	; 0x03
 75e:	21 fd       	sbrc	r18, 1
 760:	03 c0       	rjmp	.+6      	; 0x768 <fputc+0x16>
 762:	8f ef       	ldi	r24, 0xFF	; 255
 764:	9f ef       	ldi	r25, 0xFF	; 255
 766:	2c c0       	rjmp	.+88     	; 0x7c0 <fputc+0x6e>
 768:	22 ff       	sbrs	r18, 2
 76a:	16 c0       	rjmp	.+44     	; 0x798 <fputc+0x46>
 76c:	46 81       	ldd	r20, Z+6	; 0x06
 76e:	57 81       	ldd	r21, Z+7	; 0x07
 770:	24 81       	ldd	r18, Z+4	; 0x04
 772:	35 81       	ldd	r19, Z+5	; 0x05
 774:	42 17       	cp	r20, r18
 776:	53 07       	cpc	r21, r19
 778:	44 f4       	brge	.+16     	; 0x78a <fputc+0x38>
 77a:	a0 81       	ld	r26, Z
 77c:	b1 81       	ldd	r27, Z+1	; 0x01
 77e:	9d 01       	movw	r18, r26
 780:	2f 5f       	subi	r18, 0xFF	; 255
 782:	3f 4f       	sbci	r19, 0xFF	; 255
 784:	31 83       	std	Z+1, r19	; 0x01
 786:	20 83       	st	Z, r18
 788:	8c 93       	st	X, r24
 78a:	26 81       	ldd	r18, Z+6	; 0x06
 78c:	37 81       	ldd	r19, Z+7	; 0x07
 78e:	2f 5f       	subi	r18, 0xFF	; 255
 790:	3f 4f       	sbci	r19, 0xFF	; 255
 792:	37 83       	std	Z+7, r19	; 0x07
 794:	26 83       	std	Z+6, r18	; 0x06
 796:	14 c0       	rjmp	.+40     	; 0x7c0 <fputc+0x6e>
 798:	8b 01       	movw	r16, r22
 79a:	ec 01       	movw	r28, r24
 79c:	fb 01       	movw	r30, r22
 79e:	00 84       	ldd	r0, Z+8	; 0x08
 7a0:	f1 85       	ldd	r31, Z+9	; 0x09
 7a2:	e0 2d       	mov	r30, r0
 7a4:	09 95       	icall
 7a6:	89 2b       	or	r24, r25
 7a8:	e1 f6       	brne	.-72     	; 0x762 <fputc+0x10>
 7aa:	d8 01       	movw	r26, r16
 7ac:	16 96       	adiw	r26, 0x06	; 6
 7ae:	8d 91       	ld	r24, X+
 7b0:	9c 91       	ld	r25, X
 7b2:	17 97       	sbiw	r26, 0x07	; 7
 7b4:	01 96       	adiw	r24, 0x01	; 1
 7b6:	17 96       	adiw	r26, 0x07	; 7
 7b8:	9c 93       	st	X, r25
 7ba:	8e 93       	st	-X, r24
 7bc:	16 97       	sbiw	r26, 0x06	; 6
 7be:	ce 01       	movw	r24, r28
 7c0:	df 91       	pop	r29
 7c2:	cf 91       	pop	r28
 7c4:	1f 91       	pop	r17
 7c6:	0f 91       	pop	r16
 7c8:	08 95       	ret

000007ca <__ultoa_invert>:
 7ca:	fa 01       	movw	r30, r20
 7cc:	aa 27       	eor	r26, r26
 7ce:	28 30       	cpi	r18, 0x08	; 8
 7d0:	51 f1       	breq	.+84     	; 0x826 <__ultoa_invert+0x5c>
 7d2:	20 31       	cpi	r18, 0x10	; 16
 7d4:	81 f1       	breq	.+96     	; 0x836 <__ultoa_invert+0x6c>
 7d6:	e8 94       	clt
 7d8:	6f 93       	push	r22
 7da:	6e 7f       	andi	r22, 0xFE	; 254
 7dc:	6e 5f       	subi	r22, 0xFE	; 254
 7de:	7f 4f       	sbci	r23, 0xFF	; 255
 7e0:	8f 4f       	sbci	r24, 0xFF	; 255
 7e2:	9f 4f       	sbci	r25, 0xFF	; 255
 7e4:	af 4f       	sbci	r26, 0xFF	; 255
 7e6:	b1 e0       	ldi	r27, 0x01	; 1
 7e8:	3e d0       	rcall	.+124    	; 0x866 <__ultoa_invert+0x9c>
 7ea:	b4 e0       	ldi	r27, 0x04	; 4
 7ec:	3c d0       	rcall	.+120    	; 0x866 <__ultoa_invert+0x9c>
 7ee:	67 0f       	add	r22, r23
 7f0:	78 1f       	adc	r23, r24
 7f2:	89 1f       	adc	r24, r25
 7f4:	9a 1f       	adc	r25, r26
 7f6:	a1 1d       	adc	r26, r1
 7f8:	68 0f       	add	r22, r24
 7fa:	79 1f       	adc	r23, r25
 7fc:	8a 1f       	adc	r24, r26
 7fe:	91 1d       	adc	r25, r1
 800:	a1 1d       	adc	r26, r1
 802:	6a 0f       	add	r22, r26
 804:	71 1d       	adc	r23, r1
 806:	81 1d       	adc	r24, r1
 808:	91 1d       	adc	r25, r1
 80a:	a1 1d       	adc	r26, r1
 80c:	20 d0       	rcall	.+64     	; 0x84e <__ultoa_invert+0x84>
 80e:	09 f4       	brne	.+2      	; 0x812 <__ultoa_invert+0x48>
 810:	68 94       	set
 812:	3f 91       	pop	r19
 814:	2a e0       	ldi	r18, 0x0A	; 10
 816:	26 9f       	mul	r18, r22
 818:	11 24       	eor	r1, r1
 81a:	30 19       	sub	r19, r0
 81c:	30 5d       	subi	r19, 0xD0	; 208
 81e:	31 93       	st	Z+, r19
 820:	de f6       	brtc	.-74     	; 0x7d8 <__ultoa_invert+0xe>
 822:	cf 01       	movw	r24, r30
 824:	08 95       	ret
 826:	46 2f       	mov	r20, r22
 828:	47 70       	andi	r20, 0x07	; 7
 82a:	40 5d       	subi	r20, 0xD0	; 208
 82c:	41 93       	st	Z+, r20
 82e:	b3 e0       	ldi	r27, 0x03	; 3
 830:	0f d0       	rcall	.+30     	; 0x850 <__ultoa_invert+0x86>
 832:	c9 f7       	brne	.-14     	; 0x826 <__ultoa_invert+0x5c>
 834:	f6 cf       	rjmp	.-20     	; 0x822 <__ultoa_invert+0x58>
 836:	46 2f       	mov	r20, r22
 838:	4f 70       	andi	r20, 0x0F	; 15
 83a:	40 5d       	subi	r20, 0xD0	; 208
 83c:	4a 33       	cpi	r20, 0x3A	; 58
 83e:	18 f0       	brcs	.+6      	; 0x846 <__ultoa_invert+0x7c>
 840:	49 5d       	subi	r20, 0xD9	; 217
 842:	31 fd       	sbrc	r19, 1
 844:	40 52       	subi	r20, 0x20	; 32
 846:	41 93       	st	Z+, r20
 848:	02 d0       	rcall	.+4      	; 0x84e <__ultoa_invert+0x84>
 84a:	a9 f7       	brne	.-22     	; 0x836 <__ultoa_invert+0x6c>
 84c:	ea cf       	rjmp	.-44     	; 0x822 <__ultoa_invert+0x58>
 84e:	b4 e0       	ldi	r27, 0x04	; 4
 850:	a6 95       	lsr	r26
 852:	97 95       	ror	r25
 854:	87 95       	ror	r24
 856:	77 95       	ror	r23
 858:	67 95       	ror	r22
 85a:	ba 95       	dec	r27
 85c:	c9 f7       	brne	.-14     	; 0x850 <__ultoa_invert+0x86>
 85e:	00 97       	sbiw	r24, 0x00	; 0
 860:	61 05       	cpc	r22, r1
 862:	71 05       	cpc	r23, r1
 864:	08 95       	ret
 866:	9b 01       	movw	r18, r22
 868:	ac 01       	movw	r20, r24
 86a:	0a 2e       	mov	r0, r26
 86c:	06 94       	lsr	r0
 86e:	57 95       	ror	r21
 870:	47 95       	ror	r20
 872:	37 95       	ror	r19
 874:	27 95       	ror	r18
 876:	ba 95       	dec	r27
 878:	c9 f7       	brne	.-14     	; 0x86c <__ultoa_invert+0xa2>
 87a:	62 0f       	add	r22, r18
 87c:	73 1f       	adc	r23, r19
 87e:	84 1f       	adc	r24, r20
 880:	95 1f       	adc	r25, r21
 882:	a0 1d       	adc	r26, r0
 884:	08 95       	ret

00000886 <_exit>:
 886:	f8 94       	cli

00000888 <__stop_program>:
 888:	ff cf       	rjmp	.-2      	; 0x888 <__stop_program>

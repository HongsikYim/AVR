
20180810_practice_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  000007f6  0000086a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007f6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000884  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000920  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000dde  00000000  00000000  00000990  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a13  00000000  00000000  0000176e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000054f  00000000  00000000  00002181  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c8  00000000  00000000  000026d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004d8  00000000  00000000  00002798  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000053e  00000000  00000000  00002c70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000031ae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 ef       	ldi	r30, 0xF6	; 246
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 31       	cpi	r26, 0x1A	; 26
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	65 d0       	rcall	.+202    	; 0x17e <main>
  b4:	9e c3       	rjmp	.+1852   	; 0x7f2 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <LCD_pulse_enable>:

#include "LCD.h"

void LCD_pulse_enable(void)
{
	PORT_CONTROL |= (1 << E_PIN);
  b8:	c7 9a       	sbi	0x18, 7	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ba:	8f e9       	ldi	r24, 0x9F	; 159
  bc:	9f e0       	ldi	r25, 0x0F	; 15
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	f1 f7       	brne	.-4      	; 0xbe <LCD_pulse_enable+0x6>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <LCD_pulse_enable+0xc>
  c4:	00 00       	nop
	_delay_ms(1);
	PORT_CONTROL &= ~(1 << E_PIN);
  c6:	c7 98       	cbi	0x18, 7	; 24
  c8:	8f e9       	ldi	r24, 0x9F	; 159
  ca:	9f e0       	ldi	r25, 0x0F	; 15
  cc:	01 97       	sbiw	r24, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <LCD_pulse_enable+0x14>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <LCD_pulse_enable+0x1a>
  d2:	00 00       	nop
  d4:	08 95       	ret

000000d6 <LCD_write_data>:
	_delay_ms(1);
}

void LCD_write_data(uint8_t data)
{
	PORT_CONTROL |= (1 << RS_PIN);
  d6:	c5 9a       	sbi	0x18, 5	; 24
	PORT_DATA = data;
  d8:	85 bb       	out	0x15, r24	; 21
	LCD_pulse_enable();
  da:	ee df       	rcall	.-36     	; 0xb8 <LCD_pulse_enable>
  dc:	8f e3       	ldi	r24, 0x3F	; 63
  de:	9f e1       	ldi	r25, 0x1F	; 31
  e0:	01 97       	sbiw	r24, 0x01	; 1
  e2:	f1 f7       	brne	.-4      	; 0xe0 <LCD_write_data+0xa>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <LCD_write_data+0x10>
  e6:	00 00       	nop
  e8:	08 95       	ret

000000ea <LCD_write_command>:
	_delay_ms(2);
}

void LCD_write_command(uint8_t command)
{
	PORT_CONTROL &= ~(1 << RS_PIN);
  ea:	c5 98       	cbi	0x18, 5	; 24
	PORT_DATA = command;
  ec:	85 bb       	out	0x15, r24	; 21
	LCD_pulse_enable();
  ee:	e4 df       	rcall	.-56     	; 0xb8 <LCD_pulse_enable>
  f0:	8f e3       	ldi	r24, 0x3F	; 63
  f2:	9f e1       	ldi	r25, 0x1F	; 31
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <LCD_write_command+0xa>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <LCD_write_command+0x10>
  fa:	00 00       	nop
  fc:	08 95       	ret

000000fe <LCD_clear>:
	_delay_ms(2);
}

void LCD_clear(void)
{
	LCD_write_command(COMMAND_CLEAR_DISPLAY);
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	f4 df       	rcall	.-24     	; 0xea <LCD_write_command>
 102:	8f e3       	ldi	r24, 0x3F	; 63
 104:	9f e1       	ldi	r25, 0x1F	; 31
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <LCD_clear+0x8>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <LCD_clear+0xe>
 10c:	00 00       	nop
 10e:	08 95       	ret

00000110 <LCD_init>:
 110:	2f ef       	ldi	r18, 0xFF	; 255
 112:	80 e7       	ldi	r24, 0x70	; 112
 114:	92 e0       	ldi	r25, 0x02	; 2
 116:	21 50       	subi	r18, 0x01	; 1
 118:	80 40       	sbci	r24, 0x00	; 0
 11a:	90 40       	sbci	r25, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <LCD_init+0x6>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <LCD_init+0x10>
 120:	00 00       	nop
void LCD_init(void)
{
	_delay_ms(50);
	
	// 연결 핀을 출력을 설정
	DDR_DATA = 0xFF;
 122:	8f ef       	ldi	r24, 0xFF	; 255
 124:	84 bb       	out	0x14, r24	; 20
	PORT_DATA = 0x00;
 126:	15 ba       	out	0x15, r1	; 21
	DDR_CONTROL |= (1 << RS_PIN) | (1 << RW_PIN) | (1 << E_PIN);
 128:	87 b3       	in	r24, 0x17	; 23
 12a:	80 6e       	ori	r24, 0xE0	; 224
 12c:	87 bb       	out	0x17, r24	; 23
	
	// R/W 핀으로 LOW를 출력하여 쓰기 전용으로 사용
	PORT_CONTROL &= ~(1<< RW_PIN);
 12e:	c6 98       	cbi	0x18, 6	; 24
	
	LCD_write_command(COMMAND_8_BIT_MODE);
 130:	88 e3       	ldi	r24, 0x38	; 56
 132:	db df       	rcall	.-74     	; 0xea <LCD_write_command>
	
	uint8_t command = 0x08 | (1 << COMMAND_DISPLAY_ON_OFF_BIT);
	LCD_write_command(command);
 134:	8c e0       	ldi	r24, 0x0C	; 12
	
	LCD_clear();
 136:	d9 df       	rcall	.-78     	; 0xea <LCD_write_command>
	
	LCD_write_command(0x06);
 138:	e2 df       	rcall	.-60     	; 0xfe <LCD_clear>
 13a:	86 e0       	ldi	r24, 0x06	; 6
 13c:	d6 cf       	rjmp	.-84     	; 0xea <LCD_write_command>
 13e:	08 95       	ret

00000140 <LCD_write_string>:
}

void LCD_write_string(char *string)
{
 140:	0f 93       	push	r16
 142:	1f 93       	push	r17
 144:	cf 93       	push	r28
 146:	fc 01       	movw	r30, r24
	uint8_t i;
	for(i = 0; string[i]; i ++)
 148:	80 81       	ld	r24, Z
 14a:	88 23       	and	r24, r24
 14c:	51 f0       	breq	.+20     	; 0x162 <LCD_write_string+0x22>
 14e:	8f 01       	movw	r16, r30
 150:	c0 e0       	ldi	r28, 0x00	; 0
	{
		LCD_write_data(string[i]);
 152:	c1 df       	rcall	.-126    	; 0xd6 <LCD_write_data>
}

void LCD_write_string(char *string)
{
	uint8_t i;
	for(i = 0; string[i]; i ++)
 154:	cf 5f       	subi	r28, 0xFF	; 255
 156:	f8 01       	movw	r30, r16
 158:	ec 0f       	add	r30, r28
 15a:	f1 1d       	adc	r31, r1
 15c:	80 81       	ld	r24, Z
 15e:	81 11       	cpse	r24, r1
 160:	f8 cf       	rjmp	.-16     	; 0x152 <LCD_write_string+0x12>
	{
		LCD_write_data(string[i]);
	}
}
 162:	cf 91       	pop	r28
 164:	1f 91       	pop	r17
 166:	0f 91       	pop	r16
 168:	08 95       	ret

0000016a <LCD_goto_XY>:
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 16a:	81 70       	andi	r24, 0x01	; 1
 16c:	6f 70       	andi	r22, 0x0F	; 15
 16e:	90 e4       	ldi	r25, 0x40	; 64
 170:	89 9f       	mul	r24, r25
 172:	60 0d       	add	r22, r0
 174:	11 24       	eor	r1, r1
 176:	86 2f       	mov	r24, r22
 178:	80 58       	subi	r24, 0x80	; 128
 17a:	b7 cf       	rjmp	.-146    	; 0xea <LCD_write_command>
 17c:	08 95       	ret

0000017e <main>:
#include <stdio.h>
#include "LCD.h"


int main(void)
{
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
 182:	cd b7       	in	r28, 0x3d	; 61
 184:	de b7       	in	r29, 0x3e	; 62
 186:	64 97       	sbiw	r28, 0x14	; 20
 188:	0f b6       	in	r0, 0x3f	; 63
 18a:	f8 94       	cli
 18c:	de bf       	out	0x3e, r29	; 62
 18e:	0f be       	out	0x3f, r0	; 63
 190:	cd bf       	out	0x3d, r28	; 61
	char buff[20];
	uint8_t mm=0, ss=0, ms=0;
	LCD_init();
 192:	be df       	rcall	.-132    	; 0x110 <LCD_init>
	
	DDRF &= ~((1 << PORTF0) | (1 << PORTF1));
 194:	e1 e6       	ldi	r30, 0x61	; 97
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	8c 7f       	andi	r24, 0xFC	; 252
 19c:	80 83       	st	Z, r24
	PORTF |= ((1 << PORTF0) | (1 << PORTF1)); // 풀업저항
 19e:	e2 e6       	ldi	r30, 0x62	; 98
 1a0:	f0 e0       	ldi	r31, 0x00	; 0
 1a2:	80 81       	ld	r24, Z
 1a4:	83 60       	ori	r24, 0x03	; 3
 1a6:	80 83       	st	Z, r24
	
	char state_pre1 = 1, state_cur1;
	char state_pre2 = 1, state_cur2;
	char LCD_stat = 1, LCD_CNT_reset = 0;
	
	LCD_write_string("STOP WATCH");
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	91 e0       	ldi	r25, 0x01	; 1
 1ac:	c9 df       	rcall	.-110    	; 0x140 <LCD_write_string>
 1ae:	2f ef       	ldi	r18, 0xFF	; 255
 1b0:	8d e3       	ldi	r24, 0x3D	; 61
 1b2:	99 e4       	ldi	r25, 0x49	; 73
 1b4:	21 50       	subi	r18, 0x01	; 1
 1b6:	80 40       	sbci	r24, 0x00	; 0
 1b8:	90 40       	sbci	r25, 0x00	; 0
 1ba:	e1 f7       	brne	.-8      	; 0x1b4 <main+0x36>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <main+0x40>
 1be:	00 00       	nop
	
	DDRF &= ~((1 << PORTF0) | (1 << PORTF1));
	PORTF |= ((1 << PORTF0) | (1 << PORTF1)); // 풀업저항
	
	char state_pre1 = 1, state_cur1;
	char state_pre2 = 1, state_cur2;
 1c0:	aa 24       	eor	r10, r10
 1c2:	a3 94       	inc	r10


int main(void)
{
	char buff[20];
	uint8_t mm=0, ss=0, ms=0;
 1c4:	10 e0       	ldi	r17, 0x00	; 0
 1c6:	00 e0       	ldi	r16, 0x00	; 0
 1c8:	b1 2c       	mov	r11, r1
	
    /* Replace with your application code */
    while (1) 
    {
		LCD_goto_XY(1,0);
		sprintf(buff, "%02d:%02d:%02d", mm, ss, ms);
 1ca:	0f 2e       	mov	r0, r31
 1cc:	fb e0       	ldi	r31, 0x0B	; 11
 1ce:	cf 2e       	mov	r12, r31
 1d0:	f1 e0       	ldi	r31, 0x01	; 1
 1d2:	df 2e       	mov	r13, r31
 1d4:	f0 2d       	mov	r31, r0
 1d6:	ce 01       	movw	r24, r28
 1d8:	01 96       	adiw	r24, 0x01	; 1
 1da:	7c 01       	movw	r14, r24
 1dc:	06 c0       	rjmp	.+12     	; 0x1ea <main+0x6c>
			ss = 0;
			ms = 0;
			LCD_CNT_reset = 0;
		}
		
		if (LCD_stat |= 1) ms++;
 1de:	11 e0       	ldi	r17, 0x01	; 1
		
		if( LCD_CNT_reset == 1)
		{
			LCD_stat = 1;
			mm = 0;
			ss = 0;
 1e0:	00 e0       	ldi	r16, 0x00	; 0
		state_pre2 = state_cur2;
		
		if( LCD_CNT_reset == 1)
		{
			LCD_stat = 1;
			mm = 0;
 1e2:	b1 2c       	mov	r11, r1
 1e4:	01 c0       	rjmp	.+2      	; 0x1e8 <main+0x6a>
		
		if (LCD_stat |= 1) ms++;
		
		if (ms >= 100)
		{
			ms = 0;
 1e6:	10 e0       	ldi	r17, 0x00	; 0
 1e8:	a1 2c       	mov	r10, r1
	
	
    /* Replace with your application code */
    while (1) 
    {
		LCD_goto_XY(1,0);
 1ea:	60 e0       	ldi	r22, 0x00	; 0
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	bd df       	rcall	.-134    	; 0x16a <LCD_goto_XY>
		sprintf(buff, "%02d:%02d:%02d", mm, ss, ms);
 1f0:	1f 92       	push	r1
 1f2:	1f 93       	push	r17
 1f4:	1f 92       	push	r1
 1f6:	0f 93       	push	r16
 1f8:	1f 92       	push	r1
 1fa:	bf 92       	push	r11
 1fc:	df 92       	push	r13
 1fe:	cf 92       	push	r12
 200:	ff 92       	push	r15
 202:	ef 92       	push	r14
		LCD_write_string(buff);
 204:	1b d0       	rcall	.+54     	; 0x23c <sprintf>
 206:	c7 01       	movw	r24, r14
 208:	9b df       	rcall	.-202    	; 0x140 <LCD_write_string>
 20a:	8f e9       	ldi	r24, 0x9F	; 159
 20c:	9f e0       	ldi	r25, 0x0F	; 15
 20e:	01 97       	sbiw	r24, 0x01	; 1
 210:	f1 f7       	brne	.-4      	; 0x20e <main+0x90>
 212:	00 c0       	rjmp	.+0      	; 0x214 <main+0x96>
 214:	00 00       	nop
		_delay_ms(1);
		
		state_cur1 = (PINF & 0x01) >> 0;
 216:	80 b1       	in	r24, 0x00	; 0
		{
			LCD_stat = ~LCD_stat;
		}
		state_pre1 = state_cur1;
		
		state_cur2 = (PINF & 0X02) >> 2;
 218:	80 b1       	in	r24, 0x00	; 0
		if ( state_cur2 == 0 && state_pre2 == 0)
 21a:	0f b6       	in	r0, 0x3f	; 63
 21c:	f8 94       	cli
 21e:	de bf       	out	0x3e, r29	; 62
 220:	0f be       	out	0x3f, r0	; 63
 222:	cd bf       	out	0x3d, r28	; 61
 224:	aa 20       	and	r10, r10
 226:	d9 f2       	breq	.-74     	; 0x1de <main+0x60>
			ss = 0;
			ms = 0;
			LCD_CNT_reset = 0;
		}
		
		if (LCD_stat |= 1) ms++;
 228:	1f 5f       	subi	r17, 0xFF	; 255
		
		if (ms >= 100)
 22a:	14 36       	cpi	r17, 0x64	; 100
 22c:	e8 f2       	brcs	.-70     	; 0x1e8 <main+0x6a>
		{
			ms = 0;
			ss++;
 22e:	0f 5f       	subi	r16, 0xFF	; 255
			if (ss >= 60)
 230:	0c 33       	cpi	r16, 0x3C	; 60
 232:	c8 f2       	brcs	.-78     	; 0x1e6 <main+0x68>
			{
				mm++;
 234:	b3 94       	inc	r11
		
		if (LCD_stat |= 1) ms++;
		
		if (ms >= 100)
		{
			ms = 0;
 236:	10 e0       	ldi	r17, 0x00	; 0
			ss++;
			if (ss >= 60)
			{
				mm++;
				ss=0;
 238:	00 e0       	ldi	r16, 0x00	; 0
 23a:	d6 cf       	rjmp	.-84     	; 0x1e8 <main+0x6a>

0000023c <sprintf>:
 23c:	0f 93       	push	r16
 23e:	1f 93       	push	r17
 240:	cf 93       	push	r28
 242:	df 93       	push	r29
 244:	cd b7       	in	r28, 0x3d	; 61
 246:	de b7       	in	r29, 0x3e	; 62
 248:	2e 97       	sbiw	r28, 0x0e	; 14
 24a:	0f b6       	in	r0, 0x3f	; 63
 24c:	f8 94       	cli
 24e:	de bf       	out	0x3e, r29	; 62
 250:	0f be       	out	0x3f, r0	; 63
 252:	cd bf       	out	0x3d, r28	; 61
 254:	0d 89       	ldd	r16, Y+21	; 0x15
 256:	1e 89       	ldd	r17, Y+22	; 0x16
 258:	86 e0       	ldi	r24, 0x06	; 6
 25a:	8c 83       	std	Y+4, r24	; 0x04
 25c:	1a 83       	std	Y+2, r17	; 0x02
 25e:	09 83       	std	Y+1, r16	; 0x01
 260:	8f ef       	ldi	r24, 0xFF	; 255
 262:	9f e7       	ldi	r25, 0x7F	; 127
 264:	9e 83       	std	Y+6, r25	; 0x06
 266:	8d 83       	std	Y+5, r24	; 0x05
 268:	ae 01       	movw	r20, r28
 26a:	47 5e       	subi	r20, 0xE7	; 231
 26c:	5f 4f       	sbci	r21, 0xFF	; 255
 26e:	6f 89       	ldd	r22, Y+23	; 0x17
 270:	78 8d       	ldd	r23, Y+24	; 0x18
 272:	ce 01       	movw	r24, r28
 274:	01 96       	adiw	r24, 0x01	; 1
 276:	10 d0       	rcall	.+32     	; 0x298 <vfprintf>
 278:	ef 81       	ldd	r30, Y+7	; 0x07
 27a:	f8 85       	ldd	r31, Y+8	; 0x08
 27c:	e0 0f       	add	r30, r16
 27e:	f1 1f       	adc	r31, r17
 280:	10 82       	st	Z, r1
 282:	2e 96       	adiw	r28, 0x0e	; 14
 284:	0f b6       	in	r0, 0x3f	; 63
 286:	f8 94       	cli
 288:	de bf       	out	0x3e, r29	; 62
 28a:	0f be       	out	0x3f, r0	; 63
 28c:	cd bf       	out	0x3d, r28	; 61
 28e:	df 91       	pop	r29
 290:	cf 91       	pop	r28
 292:	1f 91       	pop	r17
 294:	0f 91       	pop	r16
 296:	08 95       	ret

00000298 <vfprintf>:
 298:	2f 92       	push	r2
 29a:	3f 92       	push	r3
 29c:	4f 92       	push	r4
 29e:	5f 92       	push	r5
 2a0:	6f 92       	push	r6
 2a2:	7f 92       	push	r7
 2a4:	8f 92       	push	r8
 2a6:	9f 92       	push	r9
 2a8:	af 92       	push	r10
 2aa:	bf 92       	push	r11
 2ac:	cf 92       	push	r12
 2ae:	df 92       	push	r13
 2b0:	ef 92       	push	r14
 2b2:	ff 92       	push	r15
 2b4:	0f 93       	push	r16
 2b6:	1f 93       	push	r17
 2b8:	cf 93       	push	r28
 2ba:	df 93       	push	r29
 2bc:	cd b7       	in	r28, 0x3d	; 61
 2be:	de b7       	in	r29, 0x3e	; 62
 2c0:	2b 97       	sbiw	r28, 0x0b	; 11
 2c2:	0f b6       	in	r0, 0x3f	; 63
 2c4:	f8 94       	cli
 2c6:	de bf       	out	0x3e, r29	; 62
 2c8:	0f be       	out	0x3f, r0	; 63
 2ca:	cd bf       	out	0x3d, r28	; 61
 2cc:	6c 01       	movw	r12, r24
 2ce:	7b 01       	movw	r14, r22
 2d0:	8a 01       	movw	r16, r20
 2d2:	fc 01       	movw	r30, r24
 2d4:	17 82       	std	Z+7, r1	; 0x07
 2d6:	16 82       	std	Z+6, r1	; 0x06
 2d8:	83 81       	ldd	r24, Z+3	; 0x03
 2da:	81 ff       	sbrs	r24, 1
 2dc:	bf c1       	rjmp	.+894    	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 2de:	ce 01       	movw	r24, r28
 2e0:	01 96       	adiw	r24, 0x01	; 1
 2e2:	3c 01       	movw	r6, r24
 2e4:	f6 01       	movw	r30, r12
 2e6:	93 81       	ldd	r25, Z+3	; 0x03
 2e8:	f7 01       	movw	r30, r14
 2ea:	93 fd       	sbrc	r25, 3
 2ec:	85 91       	lpm	r24, Z+
 2ee:	93 ff       	sbrs	r25, 3
 2f0:	81 91       	ld	r24, Z+
 2f2:	7f 01       	movw	r14, r30
 2f4:	88 23       	and	r24, r24
 2f6:	09 f4       	brne	.+2      	; 0x2fa <vfprintf+0x62>
 2f8:	ad c1       	rjmp	.+858    	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 2fa:	85 32       	cpi	r24, 0x25	; 37
 2fc:	39 f4       	brne	.+14     	; 0x30c <vfprintf+0x74>
 2fe:	93 fd       	sbrc	r25, 3
 300:	85 91       	lpm	r24, Z+
 302:	93 ff       	sbrs	r25, 3
 304:	81 91       	ld	r24, Z+
 306:	7f 01       	movw	r14, r30
 308:	85 32       	cpi	r24, 0x25	; 37
 30a:	21 f4       	brne	.+8      	; 0x314 <vfprintf+0x7c>
 30c:	b6 01       	movw	r22, r12
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	d6 d1       	rcall	.+940    	; 0x6be <fputc>
 312:	e8 cf       	rjmp	.-48     	; 0x2e4 <vfprintf+0x4c>
 314:	91 2c       	mov	r9, r1
 316:	21 2c       	mov	r2, r1
 318:	31 2c       	mov	r3, r1
 31a:	ff e1       	ldi	r31, 0x1F	; 31
 31c:	f3 15       	cp	r31, r3
 31e:	d8 f0       	brcs	.+54     	; 0x356 <vfprintf+0xbe>
 320:	8b 32       	cpi	r24, 0x2B	; 43
 322:	79 f0       	breq	.+30     	; 0x342 <vfprintf+0xaa>
 324:	38 f4       	brcc	.+14     	; 0x334 <vfprintf+0x9c>
 326:	80 32       	cpi	r24, 0x20	; 32
 328:	79 f0       	breq	.+30     	; 0x348 <vfprintf+0xb0>
 32a:	83 32       	cpi	r24, 0x23	; 35
 32c:	a1 f4       	brne	.+40     	; 0x356 <vfprintf+0xbe>
 32e:	23 2d       	mov	r18, r3
 330:	20 61       	ori	r18, 0x10	; 16
 332:	1d c0       	rjmp	.+58     	; 0x36e <vfprintf+0xd6>
 334:	8d 32       	cpi	r24, 0x2D	; 45
 336:	61 f0       	breq	.+24     	; 0x350 <vfprintf+0xb8>
 338:	80 33       	cpi	r24, 0x30	; 48
 33a:	69 f4       	brne	.+26     	; 0x356 <vfprintf+0xbe>
 33c:	23 2d       	mov	r18, r3
 33e:	21 60       	ori	r18, 0x01	; 1
 340:	16 c0       	rjmp	.+44     	; 0x36e <vfprintf+0xd6>
 342:	83 2d       	mov	r24, r3
 344:	82 60       	ori	r24, 0x02	; 2
 346:	38 2e       	mov	r3, r24
 348:	e3 2d       	mov	r30, r3
 34a:	e4 60       	ori	r30, 0x04	; 4
 34c:	3e 2e       	mov	r3, r30
 34e:	2a c0       	rjmp	.+84     	; 0x3a4 <vfprintf+0x10c>
 350:	f3 2d       	mov	r31, r3
 352:	f8 60       	ori	r31, 0x08	; 8
 354:	1d c0       	rjmp	.+58     	; 0x390 <vfprintf+0xf8>
 356:	37 fc       	sbrc	r3, 7
 358:	2d c0       	rjmp	.+90     	; 0x3b4 <vfprintf+0x11c>
 35a:	20 ed       	ldi	r18, 0xD0	; 208
 35c:	28 0f       	add	r18, r24
 35e:	2a 30       	cpi	r18, 0x0A	; 10
 360:	40 f0       	brcs	.+16     	; 0x372 <vfprintf+0xda>
 362:	8e 32       	cpi	r24, 0x2E	; 46
 364:	b9 f4       	brne	.+46     	; 0x394 <vfprintf+0xfc>
 366:	36 fc       	sbrc	r3, 6
 368:	75 c1       	rjmp	.+746    	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 36a:	23 2d       	mov	r18, r3
 36c:	20 64       	ori	r18, 0x40	; 64
 36e:	32 2e       	mov	r3, r18
 370:	19 c0       	rjmp	.+50     	; 0x3a4 <vfprintf+0x10c>
 372:	36 fe       	sbrs	r3, 6
 374:	06 c0       	rjmp	.+12     	; 0x382 <vfprintf+0xea>
 376:	8a e0       	ldi	r24, 0x0A	; 10
 378:	98 9e       	mul	r9, r24
 37a:	20 0d       	add	r18, r0
 37c:	11 24       	eor	r1, r1
 37e:	92 2e       	mov	r9, r18
 380:	11 c0       	rjmp	.+34     	; 0x3a4 <vfprintf+0x10c>
 382:	ea e0       	ldi	r30, 0x0A	; 10
 384:	2e 9e       	mul	r2, r30
 386:	20 0d       	add	r18, r0
 388:	11 24       	eor	r1, r1
 38a:	22 2e       	mov	r2, r18
 38c:	f3 2d       	mov	r31, r3
 38e:	f0 62       	ori	r31, 0x20	; 32
 390:	3f 2e       	mov	r3, r31
 392:	08 c0       	rjmp	.+16     	; 0x3a4 <vfprintf+0x10c>
 394:	8c 36       	cpi	r24, 0x6C	; 108
 396:	21 f4       	brne	.+8      	; 0x3a0 <vfprintf+0x108>
 398:	83 2d       	mov	r24, r3
 39a:	80 68       	ori	r24, 0x80	; 128
 39c:	38 2e       	mov	r3, r24
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <vfprintf+0x10c>
 3a0:	88 36       	cpi	r24, 0x68	; 104
 3a2:	41 f4       	brne	.+16     	; 0x3b4 <vfprintf+0x11c>
 3a4:	f7 01       	movw	r30, r14
 3a6:	93 fd       	sbrc	r25, 3
 3a8:	85 91       	lpm	r24, Z+
 3aa:	93 ff       	sbrs	r25, 3
 3ac:	81 91       	ld	r24, Z+
 3ae:	7f 01       	movw	r14, r30
 3b0:	81 11       	cpse	r24, r1
 3b2:	b3 cf       	rjmp	.-154    	; 0x31a <vfprintf+0x82>
 3b4:	98 2f       	mov	r25, r24
 3b6:	9f 7d       	andi	r25, 0xDF	; 223
 3b8:	95 54       	subi	r25, 0x45	; 69
 3ba:	93 30       	cpi	r25, 0x03	; 3
 3bc:	28 f4       	brcc	.+10     	; 0x3c8 <vfprintf+0x130>
 3be:	0c 5f       	subi	r16, 0xFC	; 252
 3c0:	1f 4f       	sbci	r17, 0xFF	; 255
 3c2:	9f e3       	ldi	r25, 0x3F	; 63
 3c4:	99 83       	std	Y+1, r25	; 0x01
 3c6:	0d c0       	rjmp	.+26     	; 0x3e2 <vfprintf+0x14a>
 3c8:	83 36       	cpi	r24, 0x63	; 99
 3ca:	31 f0       	breq	.+12     	; 0x3d8 <vfprintf+0x140>
 3cc:	83 37       	cpi	r24, 0x73	; 115
 3ce:	71 f0       	breq	.+28     	; 0x3ec <vfprintf+0x154>
 3d0:	83 35       	cpi	r24, 0x53	; 83
 3d2:	09 f0       	breq	.+2      	; 0x3d6 <vfprintf+0x13e>
 3d4:	55 c0       	rjmp	.+170    	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 3d6:	20 c0       	rjmp	.+64     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3d8:	f8 01       	movw	r30, r16
 3da:	80 81       	ld	r24, Z
 3dc:	89 83       	std	Y+1, r24	; 0x01
 3de:	0e 5f       	subi	r16, 0xFE	; 254
 3e0:	1f 4f       	sbci	r17, 0xFF	; 255
 3e2:	88 24       	eor	r8, r8
 3e4:	83 94       	inc	r8
 3e6:	91 2c       	mov	r9, r1
 3e8:	53 01       	movw	r10, r6
 3ea:	12 c0       	rjmp	.+36     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3ec:	28 01       	movw	r4, r16
 3ee:	f2 e0       	ldi	r31, 0x02	; 2
 3f0:	4f 0e       	add	r4, r31
 3f2:	51 1c       	adc	r5, r1
 3f4:	f8 01       	movw	r30, r16
 3f6:	a0 80       	ld	r10, Z
 3f8:	b1 80       	ldd	r11, Z+1	; 0x01
 3fa:	36 fe       	sbrs	r3, 6
 3fc:	03 c0       	rjmp	.+6      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fe:	69 2d       	mov	r22, r9
 400:	70 e0       	ldi	r23, 0x00	; 0
 402:	02 c0       	rjmp	.+4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 404:	6f ef       	ldi	r22, 0xFF	; 255
 406:	7f ef       	ldi	r23, 0xFF	; 255
 408:	c5 01       	movw	r24, r10
 40a:	4e d1       	rcall	.+668    	; 0x6a8 <strnlen>
 40c:	4c 01       	movw	r8, r24
 40e:	82 01       	movw	r16, r4
 410:	f3 2d       	mov	r31, r3
 412:	ff 77       	andi	r31, 0x7F	; 127
 414:	3f 2e       	mov	r3, r31
 416:	15 c0       	rjmp	.+42     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 418:	28 01       	movw	r4, r16
 41a:	22 e0       	ldi	r18, 0x02	; 2
 41c:	42 0e       	add	r4, r18
 41e:	51 1c       	adc	r5, r1
 420:	f8 01       	movw	r30, r16
 422:	a0 80       	ld	r10, Z
 424:	b1 80       	ldd	r11, Z+1	; 0x01
 426:	36 fe       	sbrs	r3, 6
 428:	03 c0       	rjmp	.+6      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42a:	69 2d       	mov	r22, r9
 42c:	70 e0       	ldi	r23, 0x00	; 0
 42e:	02 c0       	rjmp	.+4      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 430:	6f ef       	ldi	r22, 0xFF	; 255
 432:	7f ef       	ldi	r23, 0xFF	; 255
 434:	c5 01       	movw	r24, r10
 436:	2d d1       	rcall	.+602    	; 0x692 <strnlen_P>
 438:	4c 01       	movw	r8, r24
 43a:	f3 2d       	mov	r31, r3
 43c:	f0 68       	ori	r31, 0x80	; 128
 43e:	3f 2e       	mov	r3, r31
 440:	82 01       	movw	r16, r4
 442:	33 fc       	sbrc	r3, 3
 444:	19 c0       	rjmp	.+50     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 446:	82 2d       	mov	r24, r2
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	88 16       	cp	r8, r24
 44c:	99 06       	cpc	r9, r25
 44e:	a0 f4       	brcc	.+40     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 450:	b6 01       	movw	r22, r12
 452:	80 e2       	ldi	r24, 0x20	; 32
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	33 d1       	rcall	.+614    	; 0x6be <fputc>
 458:	2a 94       	dec	r2
 45a:	f5 cf       	rjmp	.-22     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 45c:	f5 01       	movw	r30, r10
 45e:	37 fc       	sbrc	r3, 7
 460:	85 91       	lpm	r24, Z+
 462:	37 fe       	sbrs	r3, 7
 464:	81 91       	ld	r24, Z+
 466:	5f 01       	movw	r10, r30
 468:	b6 01       	movw	r22, r12
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	28 d1       	rcall	.+592    	; 0x6be <fputc>
 46e:	21 10       	cpse	r2, r1
 470:	2a 94       	dec	r2
 472:	21 e0       	ldi	r18, 0x01	; 1
 474:	82 1a       	sub	r8, r18
 476:	91 08       	sbc	r9, r1
 478:	81 14       	cp	r8, r1
 47a:	91 04       	cpc	r9, r1
 47c:	79 f7       	brne	.-34     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 47e:	e1 c0       	rjmp	.+450    	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 480:	84 36       	cpi	r24, 0x64	; 100
 482:	11 f0       	breq	.+4      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 484:	89 36       	cpi	r24, 0x69	; 105
 486:	39 f5       	brne	.+78     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 488:	f8 01       	movw	r30, r16
 48a:	37 fe       	sbrs	r3, 7
 48c:	07 c0       	rjmp	.+14     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 48e:	60 81       	ld	r22, Z
 490:	71 81       	ldd	r23, Z+1	; 0x01
 492:	82 81       	ldd	r24, Z+2	; 0x02
 494:	93 81       	ldd	r25, Z+3	; 0x03
 496:	0c 5f       	subi	r16, 0xFC	; 252
 498:	1f 4f       	sbci	r17, 0xFF	; 255
 49a:	08 c0       	rjmp	.+16     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 49c:	60 81       	ld	r22, Z
 49e:	71 81       	ldd	r23, Z+1	; 0x01
 4a0:	07 2e       	mov	r0, r23
 4a2:	00 0c       	add	r0, r0
 4a4:	88 0b       	sbc	r24, r24
 4a6:	99 0b       	sbc	r25, r25
 4a8:	0e 5f       	subi	r16, 0xFE	; 254
 4aa:	1f 4f       	sbci	r17, 0xFF	; 255
 4ac:	f3 2d       	mov	r31, r3
 4ae:	ff 76       	andi	r31, 0x6F	; 111
 4b0:	3f 2e       	mov	r3, r31
 4b2:	97 ff       	sbrs	r25, 7
 4b4:	09 c0       	rjmp	.+18     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b6:	90 95       	com	r25
 4b8:	80 95       	com	r24
 4ba:	70 95       	com	r23
 4bc:	61 95       	neg	r22
 4be:	7f 4f       	sbci	r23, 0xFF	; 255
 4c0:	8f 4f       	sbci	r24, 0xFF	; 255
 4c2:	9f 4f       	sbci	r25, 0xFF	; 255
 4c4:	f0 68       	ori	r31, 0x80	; 128
 4c6:	3f 2e       	mov	r3, r31
 4c8:	2a e0       	ldi	r18, 0x0A	; 10
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	a3 01       	movw	r20, r6
 4ce:	33 d1       	rcall	.+614    	; 0x736 <__ultoa_invert>
 4d0:	88 2e       	mov	r8, r24
 4d2:	86 18       	sub	r8, r6
 4d4:	44 c0       	rjmp	.+136    	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 4d6:	85 37       	cpi	r24, 0x75	; 117
 4d8:	31 f4       	brne	.+12     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4da:	23 2d       	mov	r18, r3
 4dc:	2f 7e       	andi	r18, 0xEF	; 239
 4de:	b2 2e       	mov	r11, r18
 4e0:	2a e0       	ldi	r18, 0x0A	; 10
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	25 c0       	rjmp	.+74     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 4e6:	93 2d       	mov	r25, r3
 4e8:	99 7f       	andi	r25, 0xF9	; 249
 4ea:	b9 2e       	mov	r11, r25
 4ec:	8f 36       	cpi	r24, 0x6F	; 111
 4ee:	c1 f0       	breq	.+48     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 4f0:	18 f4       	brcc	.+6      	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4f2:	88 35       	cpi	r24, 0x58	; 88
 4f4:	79 f0       	breq	.+30     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 4f6:	ae c0       	rjmp	.+348    	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 4f8:	80 37       	cpi	r24, 0x70	; 112
 4fa:	19 f0       	breq	.+6      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4fc:	88 37       	cpi	r24, 0x78	; 120
 4fe:	21 f0       	breq	.+8      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 500:	a9 c0       	rjmp	.+338    	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 502:	e9 2f       	mov	r30, r25
 504:	e0 61       	ori	r30, 0x10	; 16
 506:	be 2e       	mov	r11, r30
 508:	b4 fe       	sbrs	r11, 4
 50a:	0d c0       	rjmp	.+26     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 50c:	fb 2d       	mov	r31, r11
 50e:	f4 60       	ori	r31, 0x04	; 4
 510:	bf 2e       	mov	r11, r31
 512:	09 c0       	rjmp	.+18     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 514:	34 fe       	sbrs	r3, 4
 516:	0a c0       	rjmp	.+20     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 518:	29 2f       	mov	r18, r25
 51a:	26 60       	ori	r18, 0x06	; 6
 51c:	b2 2e       	mov	r11, r18
 51e:	06 c0       	rjmp	.+12     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 520:	28 e0       	ldi	r18, 0x08	; 8
 522:	30 e0       	ldi	r19, 0x00	; 0
 524:	05 c0       	rjmp	.+10     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 526:	20 e1       	ldi	r18, 0x10	; 16
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	02 c0       	rjmp	.+4      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52c:	20 e1       	ldi	r18, 0x10	; 16
 52e:	32 e0       	ldi	r19, 0x02	; 2
 530:	f8 01       	movw	r30, r16
 532:	b7 fe       	sbrs	r11, 7
 534:	07 c0       	rjmp	.+14     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 536:	60 81       	ld	r22, Z
 538:	71 81       	ldd	r23, Z+1	; 0x01
 53a:	82 81       	ldd	r24, Z+2	; 0x02
 53c:	93 81       	ldd	r25, Z+3	; 0x03
 53e:	0c 5f       	subi	r16, 0xFC	; 252
 540:	1f 4f       	sbci	r17, 0xFF	; 255
 542:	06 c0       	rjmp	.+12     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 544:	60 81       	ld	r22, Z
 546:	71 81       	ldd	r23, Z+1	; 0x01
 548:	80 e0       	ldi	r24, 0x00	; 0
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	0e 5f       	subi	r16, 0xFE	; 254
 54e:	1f 4f       	sbci	r17, 0xFF	; 255
 550:	a3 01       	movw	r20, r6
 552:	f1 d0       	rcall	.+482    	; 0x736 <__ultoa_invert>
 554:	88 2e       	mov	r8, r24
 556:	86 18       	sub	r8, r6
 558:	fb 2d       	mov	r31, r11
 55a:	ff 77       	andi	r31, 0x7F	; 127
 55c:	3f 2e       	mov	r3, r31
 55e:	36 fe       	sbrs	r3, 6
 560:	0d c0       	rjmp	.+26     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 562:	23 2d       	mov	r18, r3
 564:	2e 7f       	andi	r18, 0xFE	; 254
 566:	a2 2e       	mov	r10, r18
 568:	89 14       	cp	r8, r9
 56a:	58 f4       	brcc	.+22     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 56c:	34 fe       	sbrs	r3, 4
 56e:	0b c0       	rjmp	.+22     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 570:	32 fc       	sbrc	r3, 2
 572:	09 c0       	rjmp	.+18     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 574:	83 2d       	mov	r24, r3
 576:	8e 7e       	andi	r24, 0xEE	; 238
 578:	a8 2e       	mov	r10, r24
 57a:	05 c0       	rjmp	.+10     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 57c:	b8 2c       	mov	r11, r8
 57e:	a3 2c       	mov	r10, r3
 580:	03 c0       	rjmp	.+6      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 582:	b8 2c       	mov	r11, r8
 584:	01 c0       	rjmp	.+2      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 586:	b9 2c       	mov	r11, r9
 588:	a4 fe       	sbrs	r10, 4
 58a:	0f c0       	rjmp	.+30     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 58c:	fe 01       	movw	r30, r28
 58e:	e8 0d       	add	r30, r8
 590:	f1 1d       	adc	r31, r1
 592:	80 81       	ld	r24, Z
 594:	80 33       	cpi	r24, 0x30	; 48
 596:	21 f4       	brne	.+8      	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 598:	9a 2d       	mov	r25, r10
 59a:	99 7e       	andi	r25, 0xE9	; 233
 59c:	a9 2e       	mov	r10, r25
 59e:	09 c0       	rjmp	.+18     	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5a0:	a2 fe       	sbrs	r10, 2
 5a2:	06 c0       	rjmp	.+12     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5a4:	b3 94       	inc	r11
 5a6:	b3 94       	inc	r11
 5a8:	04 c0       	rjmp	.+8      	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5aa:	8a 2d       	mov	r24, r10
 5ac:	86 78       	andi	r24, 0x86	; 134
 5ae:	09 f0       	breq	.+2      	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5b0:	b3 94       	inc	r11
 5b2:	a3 fc       	sbrc	r10, 3
 5b4:	10 c0       	rjmp	.+32     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5b6:	a0 fe       	sbrs	r10, 0
 5b8:	06 c0       	rjmp	.+12     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5ba:	b2 14       	cp	r11, r2
 5bc:	80 f4       	brcc	.+32     	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5be:	28 0c       	add	r2, r8
 5c0:	92 2c       	mov	r9, r2
 5c2:	9b 18       	sub	r9, r11
 5c4:	0d c0       	rjmp	.+26     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5c6:	b2 14       	cp	r11, r2
 5c8:	58 f4       	brcc	.+22     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5ca:	b6 01       	movw	r22, r12
 5cc:	80 e2       	ldi	r24, 0x20	; 32
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	76 d0       	rcall	.+236    	; 0x6be <fputc>
 5d2:	b3 94       	inc	r11
 5d4:	f8 cf       	rjmp	.-16     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5d6:	b2 14       	cp	r11, r2
 5d8:	18 f4       	brcc	.+6      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5da:	2b 18       	sub	r2, r11
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5de:	98 2c       	mov	r9, r8
 5e0:	21 2c       	mov	r2, r1
 5e2:	a4 fe       	sbrs	r10, 4
 5e4:	0f c0       	rjmp	.+30     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5e6:	b6 01       	movw	r22, r12
 5e8:	80 e3       	ldi	r24, 0x30	; 48
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	68 d0       	rcall	.+208    	; 0x6be <fputc>
 5ee:	a2 fe       	sbrs	r10, 2
 5f0:	16 c0       	rjmp	.+44     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 5f2:	a1 fc       	sbrc	r10, 1
 5f4:	03 c0       	rjmp	.+6      	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5f6:	88 e7       	ldi	r24, 0x78	; 120
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5fc:	88 e5       	ldi	r24, 0x58	; 88
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	b6 01       	movw	r22, r12
 602:	0c c0       	rjmp	.+24     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 604:	8a 2d       	mov	r24, r10
 606:	86 78       	andi	r24, 0x86	; 134
 608:	51 f0       	breq	.+20     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 60a:	a1 fe       	sbrs	r10, 1
 60c:	02 c0       	rjmp	.+4      	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 60e:	8b e2       	ldi	r24, 0x2B	; 43
 610:	01 c0       	rjmp	.+2      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 612:	80 e2       	ldi	r24, 0x20	; 32
 614:	a7 fc       	sbrc	r10, 7
 616:	8d e2       	ldi	r24, 0x2D	; 45
 618:	b6 01       	movw	r22, r12
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	50 d0       	rcall	.+160    	; 0x6be <fputc>
 61e:	89 14       	cp	r8, r9
 620:	30 f4       	brcc	.+12     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 622:	b6 01       	movw	r22, r12
 624:	80 e3       	ldi	r24, 0x30	; 48
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	4a d0       	rcall	.+148    	; 0x6be <fputc>
 62a:	9a 94       	dec	r9
 62c:	f8 cf       	rjmp	.-16     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 62e:	8a 94       	dec	r8
 630:	f3 01       	movw	r30, r6
 632:	e8 0d       	add	r30, r8
 634:	f1 1d       	adc	r31, r1
 636:	80 81       	ld	r24, Z
 638:	b6 01       	movw	r22, r12
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	40 d0       	rcall	.+128    	; 0x6be <fputc>
 63e:	81 10       	cpse	r8, r1
 640:	f6 cf       	rjmp	.-20     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 642:	22 20       	and	r2, r2
 644:	09 f4       	brne	.+2      	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 646:	4e ce       	rjmp	.-868    	; 0x2e4 <vfprintf+0x4c>
 648:	b6 01       	movw	r22, r12
 64a:	80 e2       	ldi	r24, 0x20	; 32
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	37 d0       	rcall	.+110    	; 0x6be <fputc>
 650:	2a 94       	dec	r2
 652:	f7 cf       	rjmp	.-18     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 654:	f6 01       	movw	r30, r12
 656:	86 81       	ldd	r24, Z+6	; 0x06
 658:	97 81       	ldd	r25, Z+7	; 0x07
 65a:	02 c0       	rjmp	.+4      	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 65c:	8f ef       	ldi	r24, 0xFF	; 255
 65e:	9f ef       	ldi	r25, 0xFF	; 255
 660:	2b 96       	adiw	r28, 0x0b	; 11
 662:	0f b6       	in	r0, 0x3f	; 63
 664:	f8 94       	cli
 666:	de bf       	out	0x3e, r29	; 62
 668:	0f be       	out	0x3f, r0	; 63
 66a:	cd bf       	out	0x3d, r28	; 61
 66c:	df 91       	pop	r29
 66e:	cf 91       	pop	r28
 670:	1f 91       	pop	r17
 672:	0f 91       	pop	r16
 674:	ff 90       	pop	r15
 676:	ef 90       	pop	r14
 678:	df 90       	pop	r13
 67a:	cf 90       	pop	r12
 67c:	bf 90       	pop	r11
 67e:	af 90       	pop	r10
 680:	9f 90       	pop	r9
 682:	8f 90       	pop	r8
 684:	7f 90       	pop	r7
 686:	6f 90       	pop	r6
 688:	5f 90       	pop	r5
 68a:	4f 90       	pop	r4
 68c:	3f 90       	pop	r3
 68e:	2f 90       	pop	r2
 690:	08 95       	ret

00000692 <strnlen_P>:
 692:	fc 01       	movw	r30, r24
 694:	05 90       	lpm	r0, Z+
 696:	61 50       	subi	r22, 0x01	; 1
 698:	70 40       	sbci	r23, 0x00	; 0
 69a:	01 10       	cpse	r0, r1
 69c:	d8 f7       	brcc	.-10     	; 0x694 <strnlen_P+0x2>
 69e:	80 95       	com	r24
 6a0:	90 95       	com	r25
 6a2:	8e 0f       	add	r24, r30
 6a4:	9f 1f       	adc	r25, r31
 6a6:	08 95       	ret

000006a8 <strnlen>:
 6a8:	fc 01       	movw	r30, r24
 6aa:	61 50       	subi	r22, 0x01	; 1
 6ac:	70 40       	sbci	r23, 0x00	; 0
 6ae:	01 90       	ld	r0, Z+
 6b0:	01 10       	cpse	r0, r1
 6b2:	d8 f7       	brcc	.-10     	; 0x6aa <strnlen+0x2>
 6b4:	80 95       	com	r24
 6b6:	90 95       	com	r25
 6b8:	8e 0f       	add	r24, r30
 6ba:	9f 1f       	adc	r25, r31
 6bc:	08 95       	ret

000006be <fputc>:
 6be:	0f 93       	push	r16
 6c0:	1f 93       	push	r17
 6c2:	cf 93       	push	r28
 6c4:	df 93       	push	r29
 6c6:	fb 01       	movw	r30, r22
 6c8:	23 81       	ldd	r18, Z+3	; 0x03
 6ca:	21 fd       	sbrc	r18, 1
 6cc:	03 c0       	rjmp	.+6      	; 0x6d4 <fputc+0x16>
 6ce:	8f ef       	ldi	r24, 0xFF	; 255
 6d0:	9f ef       	ldi	r25, 0xFF	; 255
 6d2:	2c c0       	rjmp	.+88     	; 0x72c <fputc+0x6e>
 6d4:	22 ff       	sbrs	r18, 2
 6d6:	16 c0       	rjmp	.+44     	; 0x704 <fputc+0x46>
 6d8:	46 81       	ldd	r20, Z+6	; 0x06
 6da:	57 81       	ldd	r21, Z+7	; 0x07
 6dc:	24 81       	ldd	r18, Z+4	; 0x04
 6de:	35 81       	ldd	r19, Z+5	; 0x05
 6e0:	42 17       	cp	r20, r18
 6e2:	53 07       	cpc	r21, r19
 6e4:	44 f4       	brge	.+16     	; 0x6f6 <fputc+0x38>
 6e6:	a0 81       	ld	r26, Z
 6e8:	b1 81       	ldd	r27, Z+1	; 0x01
 6ea:	9d 01       	movw	r18, r26
 6ec:	2f 5f       	subi	r18, 0xFF	; 255
 6ee:	3f 4f       	sbci	r19, 0xFF	; 255
 6f0:	31 83       	std	Z+1, r19	; 0x01
 6f2:	20 83       	st	Z, r18
 6f4:	8c 93       	st	X, r24
 6f6:	26 81       	ldd	r18, Z+6	; 0x06
 6f8:	37 81       	ldd	r19, Z+7	; 0x07
 6fa:	2f 5f       	subi	r18, 0xFF	; 255
 6fc:	3f 4f       	sbci	r19, 0xFF	; 255
 6fe:	37 83       	std	Z+7, r19	; 0x07
 700:	26 83       	std	Z+6, r18	; 0x06
 702:	14 c0       	rjmp	.+40     	; 0x72c <fputc+0x6e>
 704:	8b 01       	movw	r16, r22
 706:	ec 01       	movw	r28, r24
 708:	fb 01       	movw	r30, r22
 70a:	00 84       	ldd	r0, Z+8	; 0x08
 70c:	f1 85       	ldd	r31, Z+9	; 0x09
 70e:	e0 2d       	mov	r30, r0
 710:	09 95       	icall
 712:	89 2b       	or	r24, r25
 714:	e1 f6       	brne	.-72     	; 0x6ce <fputc+0x10>
 716:	d8 01       	movw	r26, r16
 718:	16 96       	adiw	r26, 0x06	; 6
 71a:	8d 91       	ld	r24, X+
 71c:	9c 91       	ld	r25, X
 71e:	17 97       	sbiw	r26, 0x07	; 7
 720:	01 96       	adiw	r24, 0x01	; 1
 722:	17 96       	adiw	r26, 0x07	; 7
 724:	9c 93       	st	X, r25
 726:	8e 93       	st	-X, r24
 728:	16 97       	sbiw	r26, 0x06	; 6
 72a:	ce 01       	movw	r24, r28
 72c:	df 91       	pop	r29
 72e:	cf 91       	pop	r28
 730:	1f 91       	pop	r17
 732:	0f 91       	pop	r16
 734:	08 95       	ret

00000736 <__ultoa_invert>:
 736:	fa 01       	movw	r30, r20
 738:	aa 27       	eor	r26, r26
 73a:	28 30       	cpi	r18, 0x08	; 8
 73c:	51 f1       	breq	.+84     	; 0x792 <__ultoa_invert+0x5c>
 73e:	20 31       	cpi	r18, 0x10	; 16
 740:	81 f1       	breq	.+96     	; 0x7a2 <__ultoa_invert+0x6c>
 742:	e8 94       	clt
 744:	6f 93       	push	r22
 746:	6e 7f       	andi	r22, 0xFE	; 254
 748:	6e 5f       	subi	r22, 0xFE	; 254
 74a:	7f 4f       	sbci	r23, 0xFF	; 255
 74c:	8f 4f       	sbci	r24, 0xFF	; 255
 74e:	9f 4f       	sbci	r25, 0xFF	; 255
 750:	af 4f       	sbci	r26, 0xFF	; 255
 752:	b1 e0       	ldi	r27, 0x01	; 1
 754:	3e d0       	rcall	.+124    	; 0x7d2 <__ultoa_invert+0x9c>
 756:	b4 e0       	ldi	r27, 0x04	; 4
 758:	3c d0       	rcall	.+120    	; 0x7d2 <__ultoa_invert+0x9c>
 75a:	67 0f       	add	r22, r23
 75c:	78 1f       	adc	r23, r24
 75e:	89 1f       	adc	r24, r25
 760:	9a 1f       	adc	r25, r26
 762:	a1 1d       	adc	r26, r1
 764:	68 0f       	add	r22, r24
 766:	79 1f       	adc	r23, r25
 768:	8a 1f       	adc	r24, r26
 76a:	91 1d       	adc	r25, r1
 76c:	a1 1d       	adc	r26, r1
 76e:	6a 0f       	add	r22, r26
 770:	71 1d       	adc	r23, r1
 772:	81 1d       	adc	r24, r1
 774:	91 1d       	adc	r25, r1
 776:	a1 1d       	adc	r26, r1
 778:	20 d0       	rcall	.+64     	; 0x7ba <__ultoa_invert+0x84>
 77a:	09 f4       	brne	.+2      	; 0x77e <__ultoa_invert+0x48>
 77c:	68 94       	set
 77e:	3f 91       	pop	r19
 780:	2a e0       	ldi	r18, 0x0A	; 10
 782:	26 9f       	mul	r18, r22
 784:	11 24       	eor	r1, r1
 786:	30 19       	sub	r19, r0
 788:	30 5d       	subi	r19, 0xD0	; 208
 78a:	31 93       	st	Z+, r19
 78c:	de f6       	brtc	.-74     	; 0x744 <__ultoa_invert+0xe>
 78e:	cf 01       	movw	r24, r30
 790:	08 95       	ret
 792:	46 2f       	mov	r20, r22
 794:	47 70       	andi	r20, 0x07	; 7
 796:	40 5d       	subi	r20, 0xD0	; 208
 798:	41 93       	st	Z+, r20
 79a:	b3 e0       	ldi	r27, 0x03	; 3
 79c:	0f d0       	rcall	.+30     	; 0x7bc <__ultoa_invert+0x86>
 79e:	c9 f7       	brne	.-14     	; 0x792 <__ultoa_invert+0x5c>
 7a0:	f6 cf       	rjmp	.-20     	; 0x78e <__ultoa_invert+0x58>
 7a2:	46 2f       	mov	r20, r22
 7a4:	4f 70       	andi	r20, 0x0F	; 15
 7a6:	40 5d       	subi	r20, 0xD0	; 208
 7a8:	4a 33       	cpi	r20, 0x3A	; 58
 7aa:	18 f0       	brcs	.+6      	; 0x7b2 <__ultoa_invert+0x7c>
 7ac:	49 5d       	subi	r20, 0xD9	; 217
 7ae:	31 fd       	sbrc	r19, 1
 7b0:	40 52       	subi	r20, 0x20	; 32
 7b2:	41 93       	st	Z+, r20
 7b4:	02 d0       	rcall	.+4      	; 0x7ba <__ultoa_invert+0x84>
 7b6:	a9 f7       	brne	.-22     	; 0x7a2 <__ultoa_invert+0x6c>
 7b8:	ea cf       	rjmp	.-44     	; 0x78e <__ultoa_invert+0x58>
 7ba:	b4 e0       	ldi	r27, 0x04	; 4
 7bc:	a6 95       	lsr	r26
 7be:	97 95       	ror	r25
 7c0:	87 95       	ror	r24
 7c2:	77 95       	ror	r23
 7c4:	67 95       	ror	r22
 7c6:	ba 95       	dec	r27
 7c8:	c9 f7       	brne	.-14     	; 0x7bc <__ultoa_invert+0x86>
 7ca:	00 97       	sbiw	r24, 0x00	; 0
 7cc:	61 05       	cpc	r22, r1
 7ce:	71 05       	cpc	r23, r1
 7d0:	08 95       	ret
 7d2:	9b 01       	movw	r18, r22
 7d4:	ac 01       	movw	r20, r24
 7d6:	0a 2e       	mov	r0, r26
 7d8:	06 94       	lsr	r0
 7da:	57 95       	ror	r21
 7dc:	47 95       	ror	r20
 7de:	37 95       	ror	r19
 7e0:	27 95       	ror	r18
 7e2:	ba 95       	dec	r27
 7e4:	c9 f7       	brne	.-14     	; 0x7d8 <__ultoa_invert+0xa2>
 7e6:	62 0f       	add	r22, r18
 7e8:	73 1f       	adc	r23, r19
 7ea:	84 1f       	adc	r24, r20
 7ec:	95 1f       	adc	r25, r21
 7ee:	a0 1d       	adc	r26, r0
 7f0:	08 95       	ret

000007f2 <_exit>:
 7f2:	f8 94       	cli

000007f4 <__stop_program>:
 7f4:	ff cf       	rjmp	.-2      	; 0x7f4 <__stop_program>

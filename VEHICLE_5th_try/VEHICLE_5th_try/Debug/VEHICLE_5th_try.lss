
VEHICLE_5th_try.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000048  00800100  000010a6  0000113a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800148  00800148  00001182  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001182  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00001220  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017f0  00000000  00000000  00001378  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cda  00000000  00000000  00002b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e10  00000000  00000000  00003842  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000027c  00000000  00000000  00004654  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000722  00000000  00000000  000048d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000086f  00000000  00000000  00004ff2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00005861  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	63 c0       	rjmp	.+198    	; 0xc8 <__ctors_end>
       2:	00 00       	nop
       4:	7e c0       	rjmp	.+252    	; 0x102 <__bad_interrupt>
       6:	00 00       	nop
       8:	7c c0       	rjmp	.+248    	; 0x102 <__bad_interrupt>
       a:	00 00       	nop
       c:	7a c0       	rjmp	.+244    	; 0x102 <__bad_interrupt>
       e:	00 00       	nop
      10:	78 c0       	rjmp	.+240    	; 0x102 <__bad_interrupt>
      12:	00 00       	nop
      14:	76 c0       	rjmp	.+236    	; 0x102 <__bad_interrupt>
      16:	00 00       	nop
      18:	74 c0       	rjmp	.+232    	; 0x102 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	72 c0       	rjmp	.+228    	; 0x102 <__bad_interrupt>
      1e:	00 00       	nop
      20:	70 c0       	rjmp	.+224    	; 0x102 <__bad_interrupt>
      22:	00 00       	nop
      24:	6e c0       	rjmp	.+220    	; 0x102 <__bad_interrupt>
      26:	00 00       	nop
      28:	6c c0       	rjmp	.+216    	; 0x102 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	6a c0       	rjmp	.+212    	; 0x102 <__bad_interrupt>
      2e:	00 00       	nop
      30:	68 c0       	rjmp	.+208    	; 0x102 <__bad_interrupt>
      32:	00 00       	nop
      34:	66 c0       	rjmp	.+204    	; 0x102 <__bad_interrupt>
      36:	00 00       	nop
      38:	64 c0       	rjmp	.+200    	; 0x102 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	62 c0       	rjmp	.+196    	; 0x102 <__bad_interrupt>
      3e:	00 00       	nop
      40:	60 c0       	rjmp	.+192    	; 0x102 <__bad_interrupt>
      42:	00 00       	nop
      44:	5e c0       	rjmp	.+188    	; 0x102 <__bad_interrupt>
      46:	00 00       	nop
      48:	5c c0       	rjmp	.+184    	; 0x102 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	5a c0       	rjmp	.+180    	; 0x102 <__bad_interrupt>
      4e:	00 00       	nop
      50:	58 c0       	rjmp	.+176    	; 0x102 <__bad_interrupt>
      52:	00 00       	nop
      54:	56 c0       	rjmp	.+172    	; 0x102 <__bad_interrupt>
      56:	00 00       	nop
      58:	54 c0       	rjmp	.+168    	; 0x102 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	52 c0       	rjmp	.+164    	; 0x102 <__bad_interrupt>
      5e:	00 00       	nop
      60:	50 c0       	rjmp	.+160    	; 0x102 <__bad_interrupt>
      62:	00 00       	nop
      64:	4e c0       	rjmp	.+156    	; 0x102 <__bad_interrupt>
      66:	00 00       	nop
      68:	4c c0       	rjmp	.+152    	; 0x102 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	4a c0       	rjmp	.+148    	; 0x102 <__bad_interrupt>
      6e:	00 00       	nop
      70:	48 c0       	rjmp	.+144    	; 0x102 <__bad_interrupt>
      72:	00 00       	nop
      74:	46 c0       	rjmp	.+140    	; 0x102 <__bad_interrupt>
      76:	00 00       	nop
      78:	44 c0       	rjmp	.+136    	; 0x102 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	42 c0       	rjmp	.+132    	; 0x102 <__bad_interrupt>
      7e:	00 00       	nop
      80:	40 c0       	rjmp	.+128    	; 0x102 <__bad_interrupt>
      82:	00 00       	nop
      84:	3e c0       	rjmp	.+124    	; 0x102 <__bad_interrupt>
      86:	00 00       	nop
      88:	3c c0       	rjmp	.+120    	; 0x102 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	95 00       	.word	0x0095	; ????
      8e:	99 00       	.word	0x0099	; ????
      90:	9d 00       	.word	0x009d	; ????
      92:	a1 00       	.word	0x00a1	; ????
      94:	a5 00       	.word	0x00a5	; ????
      96:	a9 00       	.word	0x00a9	; ????
      98:	ad 00       	.word	0x00ad	; ????
      9a:	b1 00       	.word	0x00b1	; ????
      9c:	c1 00       	.word	0x00c1	; ????
      9e:	c3 00       	.word	0x00c3	; ????
      a0:	c5 00       	.word	0x00c5	; ????
      a2:	c7 00       	.word	0x00c7	; ????
      a4:	c9 00       	.word	0x00c9	; ????
      a6:	cb 00       	.word	0x00cb	; ????
      a8:	cd 00       	.word	0x00cd	; ????
      aa:	cf 00       	.word	0x00cf	; ????
      ac:	11 02       	muls	r17, r17
      ae:	21 02       	muls	r18, r17
      b0:	39 02       	muls	r19, r25
      b2:	49 02       	muls	r20, r25
      b4:	61 02       	muls	r22, r17
      b6:	71 02       	muls	r23, r17
      b8:	89 02       	muls	r24, r25
      ba:	99 02       	muls	r25, r25
      bc:	b1 02       	muls	r27, r17
      be:	c1 02       	muls	r28, r17
      c0:	d9 02       	muls	r29, r25
      c2:	e9 02       	muls	r30, r25
      c4:	01 03       	mulsu	r16, r17
      c6:	0f 03       	fmul	r16, r23

000000c8 <__ctors_end>:
      c8:	11 24       	eor	r1, r1
      ca:	1f be       	out	0x3f, r1	; 63
      cc:	cf ef       	ldi	r28, 0xFF	; 255
      ce:	d0 e1       	ldi	r29, 0x10	; 16
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_copy_data>:
      d4:	11 e0       	ldi	r17, 0x01	; 1
      d6:	a0 e0       	ldi	r26, 0x00	; 0
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	e6 ea       	ldi	r30, 0xA6	; 166
      dc:	f0 e1       	ldi	r31, 0x10	; 16
      de:	00 e0       	ldi	r16, 0x00	; 0
      e0:	0b bf       	out	0x3b, r16	; 59
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x14>
      e4:	07 90       	elpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	a8 34       	cpi	r26, 0x48	; 72
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0x10>

000000ee <__do_clear_bss>:
      ee:	21 e0       	ldi	r18, 0x01	; 1
      f0:	a8 e4       	ldi	r26, 0x48	; 72
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	a5 35       	cpi	r26, 0x55	; 85
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	51 d0       	rcall	.+162    	; 0x1a2 <main>
     100:	d0 c7       	rjmp	.+4000   	; 0x10a2 <_exit>

00000102 <__bad_interrupt>:
     102:	7e cf       	rjmp	.-260    	; 0x0 <__vectors>

00000104 <INIT_MANUAL_MODE>:
	UART0_print_string("2. Forward\r\n");
	UART0_print_string("3. Backward\r\n");
	UART0_print_string("4. Right\r\n");
	UART0_print_string("5. Left\r\n");
	UART0_print_string("6. Speed Up\r\n");
	UART0_print_string("7. Speed Down\r\n");
     104:	81 e0       	ldi	r24, 0x01	; 1
     106:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <__data_end>
     10a:	08 95       	ret

0000010c <MANUAL_MODE>:
	{
		states = STATE_STOP;
	}
	*/
	
	if (UART0_rx_check())
     10c:	b6 d2       	rcall	.+1388   	; 0x67a <UART0_rx_check>
     10e:	88 23       	and	r24, r24
     110:	61 f1       	breq	.+88     	; 0x16a <MANUAL_MODE+0x5e>
	{
		select_mode = UART0_receive();
     112:	af d2       	rcall	.+1374   	; 0x672 <UART0_receive>
     114:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <select_mode>
     118:	90 e0       	ldi	r25, 0x00	; 0
		switch(select_mode)
     11a:	fc 01       	movw	r30, r24
     11c:	f0 97       	sbiw	r30, 0x30	; 48
     11e:	e8 30       	cpi	r30, 0x08	; 8
     120:	f1 05       	cpc	r31, r1
     122:	18 f5       	brcc	.+70     	; 0x16a <MANUAL_MODE+0x5e>
     124:	ea 5b       	subi	r30, 0xBA	; 186
     126:	ff 4f       	sbci	r31, 0xFF	; 255
     128:	df c4       	rjmp	.+2494   	; 0xae8 <__tablejump2__>
     12a:	81 e0       	ldi	r24, 0x01	; 1
		{
			//메뉴에서 state 입력
			case '0':
			states = STATE_STOP;
     12c:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <__data_end>
     130:	28 c0       	rjmp	.+80     	; 0x182 <MANUAL_MODE+0x76>
     132:	82 e0       	ldi	r24, 0x02	; 2
			break;
			
			case '1':
			states = STATE_GO_FORWARD;
     134:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <__data_end>
     138:	26 c0       	rjmp	.+76     	; 0x186 <MANUAL_MODE+0x7a>
     13a:	83 e0       	ldi	r24, 0x03	; 3
			break;
			
			case '2':
			states = STATE_GO_BACKWARD;
     13c:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <__data_end>
     140:	24 c0       	rjmp	.+72     	; 0x18a <MANUAL_MODE+0x7e>
     142:	84 e0       	ldi	r24, 0x04	; 4
			break;
			
			case '3':
			states = TURN_RIGHT;
     144:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <__data_end>
     148:	22 c0       	rjmp	.+68     	; 0x18e <MANUAL_MODE+0x82>
     14a:	85 e0       	ldi	r24, 0x05	; 5
			break;
			
			case '4':
			states = TURN_LEFT;
     14c:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <__data_end>
     150:	20 c0       	rjmp	.+64     	; 0x192 <MANUAL_MODE+0x86>
     152:	86 e0       	ldi	r24, 0x06	; 6
			break;
			
			case '5':
			states = SPEED_UP;
     154:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <__data_end>
     158:	1e c0       	rjmp	.+60     	; 0x196 <MANUAL_MODE+0x8a>
     15a:	87 e0       	ldi	r24, 0x07	; 7
			break;
			
			case '6':
			states = SPEED_DOWN;
     15c:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <__data_end>
     160:	1c c0       	rjmp	.+56     	; 0x19a <MANUAL_MODE+0x8e>
     162:	88 e0       	ldi	r24, 0x08	; 8
			break;
			
			case '7':
			states = AUTO_DRIVE;
     164:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <__data_end>
     168:	1a c0       	rjmp	.+52     	; 0x19e <MANUAL_MODE+0x92>
     16a:	e0 91 48 01 	lds	r30, 0x0148	; 0x800148 <__data_end>
			break;
		}
		//SELECTE_DIRECTION();
	}

	switch(states)
     16e:	8e 2f       	mov	r24, r30
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	fc 01       	movw	r30, r24
     174:	31 97       	sbiw	r30, 0x01	; 1
     176:	e8 30       	cpi	r30, 0x08	; 8
     178:	f1 05       	cpc	r31, r1
     17a:	90 f4       	brcc	.+36     	; 0x1a0 <MANUAL_MODE+0x94>
     17c:	e2 5b       	subi	r30, 0xB2	; 178
     17e:	ff 4f       	sbci	r31, 0xFF	; 255
     180:	b3 c4       	rjmp	.+2406   	; 0xae8 <__tablejump2__>
	{
		//선택한 모드 실행
		case STATE_STOP:
		MOTOR_STOP();
     182:	6c c0       	rjmp	.+216    	; 0x25c <MOTOR_STOP>
		break;
		
		case STATE_GO_FORWARD:
		MOTOR_RUN_FORWARD();
     184:	08 95       	ret
		
		break;
     186:	77 c0       	rjmp	.+238    	; 0x276 <MOTOR_RUN_FORWARD>
		
		case STATE_GO_BACKWARD:
		MOTOR_RUN_BACKWARD();
     188:	08 95       	ret
		
		break;
		
		case TURN_RIGHT:
		MOTOR_RUN_RIGHT();
     18a:	9e c0       	rjmp	.+316    	; 0x2c8 <MOTOR_RUN_BACKWARD>
		break;
     18c:	08 95       	ret
		
		case TURN_LEFT:
		MOTOR_RUN_LEFT();
     18e:	bc c0       	rjmp	.+376    	; 0x308 <MOTOR_RUN_RIGHT>
     190:	08 95       	ret
		break;
     192:	cf c0       	rjmp	.+414    	; 0x332 <MOTOR_RUN_LEFT>
		
		case SPEED_UP:
		MOTOR_SPEED_UP();
     194:	08 95       	ret
     196:	46 c0       	rjmp	.+140    	; 0x224 <MOTOR_SPEED_UP>
		break;
     198:	08 95       	ret
		
		case SPEED_DOWN:
		MOTOR_SPEED_DOWN();
     19a:	56 c0       	rjmp	.+172    	; 0x248 <MOTOR_SPEED_DOWN>
     19c:	08 95       	ret
		break;
     19e:	04 c1       	rjmp	.+520    	; 0x3a8 <MOTOR_AUTO_DRIVE>
		
		case AUTO_DRIVE:
		MOTOR_AUTO_DRIVE();
     1a0:	08 95       	ret

000001a2 <main>:

int main(void)
{
	//uint8_t distance_1, distance_2;
	
	stdout = &OUTPUT;
     1a2:	ef e4       	ldi	r30, 0x4F	; 79
     1a4:	f1 e0       	ldi	r31, 0x01	; 1
     1a6:	8e e0       	ldi	r24, 0x0E	; 14
     1a8:	91 e0       	ldi	r25, 0x01	; 1
     1aa:	93 83       	std	Z+3, r25	; 0x03
     1ac:	82 83       	std	Z+2, r24	; 0x02
	stdin = &INPUT;
     1ae:	80 e0       	ldi	r24, 0x00	; 0
     1b0:	91 e0       	ldi	r25, 0x01	; 1
     1b2:	91 83       	std	Z+1, r25	; 0x01
     1b4:	80 83       	st	Z, r24
	
	UART0_init();   //보레이트 9600
     1b6:	4c d2       	rcall	.+1176   	; 0x650 <UART0_init>
	INIT_PORT_4_MOTOR();
     1b8:	05 d0       	rcall	.+10     	; 0x1c4 <INIT_PORT_4_MOTOR>
	INIT_INTERRUPT_4_MOTOR();
     1ba:	0b d0       	rcall	.+22     	; 0x1d2 <INIT_INTERRUPT_4_MOTOR>
	INTIT_4_ULTRASONIC();
     1bc:	63 d2       	rcall	.+1222   	; 0x684 <INTIT_4_ULTRASONIC>
     1be:	a2 df       	rcall	.-188    	; 0x104 <INIT_MANUAL_MODE>
	INIT_MANUAL_MODE();
     1c0:	a5 df       	rcall	.-182    	; 0x10c <MANUAL_MODE>
     1c2:	fe cf       	rjmp	.-4      	; 0x1c0 <main+0x1e>

000001c4 <INIT_PORT_4_MOTOR>:
uint8_t i = 180;
extern uint8_t auto_states = 0;

void INIT_PORT_4_MOTOR(void)
{
	DDRB |= (1 << PB5) | (1 << PB6);
     1c4:	87 b3       	in	r24, 0x17	; 23
     1c6:	80 66       	ori	r24, 0x60	; 96
     1c8:	87 bb       	out	0x17, r24	; 23
	DDRE |= (1 << PE3) | (1 << PE4);
     1ca:	82 b1       	in	r24, 0x02	; 2
     1cc:	88 61       	ori	r24, 0x18	; 24
     1ce:	82 b9       	out	0x02, r24	; 2
     1d0:	08 95       	ret

000001d2 <INIT_INTERRUPT_4_MOTOR>:
}

void INIT_INTERRUPT_4_MOTOR(void)
{
	TCCR1A |= (1 << WGM10) | (0 << WGM11);
     1d2:	8f b5       	in	r24, 0x2f	; 47
     1d4:	81 60       	ori	r24, 0x01	; 1
     1d6:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << WGM12) | (0 << WGM13);
     1d8:	8e b5       	in	r24, 0x2e	; 46
     1da:	88 60       	ori	r24, 0x08	; 8
     1dc:	8e bd       	out	0x2e, r24	; 46
	TCCR1A |= (1 << COM1B1) | (1 << COM1A1);
     1de:	8f b5       	in	r24, 0x2f	; 47
     1e0:	80 6a       	ori	r24, 0xA0	; 160
     1e2:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (0 << CS12) | (1 << CS11) | (1 << CS10);
     1e4:	8e b5       	in	r24, 0x2e	; 46
     1e6:	83 60       	ori	r24, 0x03	; 3
     1e8:	8e bd       	out	0x2e, r24	; 46
	
	//분주비 64, 고속 PWM
	TCCR3A |= (1 << WGM30) | (0 << WGM31);
     1ea:	ab e8       	ldi	r26, 0x8B	; 139
     1ec:	b0 e0       	ldi	r27, 0x00	; 0
     1ee:	8c 91       	ld	r24, X
     1f0:	81 60       	ori	r24, 0x01	; 1
     1f2:	8c 93       	st	X, r24
	TCCR3B |= (1 << WGM32) | (0 << WGM33);
     1f4:	ea e8       	ldi	r30, 0x8A	; 138
     1f6:	f0 e0       	ldi	r31, 0x00	; 0
     1f8:	80 81       	ld	r24, Z
     1fa:	88 60       	ori	r24, 0x08	; 8
     1fc:	80 83       	st	Z, r24
	TCCR3A |= (1 << COM3B1) | (1 << COM3A1);
     1fe:	8c 91       	ld	r24, X
     200:	80 6a       	ori	r24, 0xA0	; 160
     202:	8c 93       	st	X, r24
	TCCR3B |= (0 << CS32) | (1 << CS31) | (1 << CS30);
     204:	80 81       	ld	r24, Z
     206:	83 60       	ori	r24, 0x03	; 3
     208:	80 83       	st	Z, r24
	
	OCR1A = 0;
     20a:	1b bc       	out	0x2b, r1	; 43
     20c:	1a bc       	out	0x2a, r1	; 42
	OCR1B = 0;
     20e:	19 bc       	out	0x29, r1	; 41
     210:	18 bc       	out	0x28, r1	; 40
	OCR3A = 0;
     212:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     216:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	OCR3B = 0;
     21a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     21e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     222:	08 95       	ret

00000224 <MOTOR_SPEED_UP>:

}

void MOTOR_SPEED_UP(void)
{
	i ++;
     224:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <i>
     228:	8f 5f       	subi	r24, 0xFF	; 255
	if(i > 250)
     22a:	8b 3f       	cpi	r24, 0xFB	; 251
     22c:	18 f4       	brcc	.+6      	; 0x234 <MOTOR_SPEED_UP+0x10>

}

void MOTOR_SPEED_UP(void)
{
	i ++;
     22e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <i>
     232:	03 c0       	rjmp	.+6      	; 0x23a <MOTOR_SPEED_UP+0x16>
	if(i > 250)
	{
		i = 250;
     234:	8a ef       	ldi	r24, 0xFA	; 250
     236:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <i>
	}
	R = i;
     23a:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <i>
     23e:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <R>
	L = i;
     242:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <L>
     246:	08 95       	ret

00000248 <MOTOR_SPEED_DOWN>:
	//UART0_print_1_byte_number(i);
}

void MOTOR_SPEED_DOWN(void)
{
	i --;
     248:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <i>
     24c:	81 50       	subi	r24, 0x01	; 1
     24e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <i>
	if(i < 1)
	{
		i = 0;
	}
	R = i;
     252:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <R>
	L = i;
     256:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <L>
     25a:	08 95       	ret

0000025c <MOTOR_STOP>:
}

void MOTOR_STOP(void)
{
	OCR1A = 0;
     25c:	1b bc       	out	0x2b, r1	; 43
     25e:	1a bc       	out	0x2a, r1	; 42
	OCR1B = 0;
     260:	19 bc       	out	0x29, r1	; 41
     262:	18 bc       	out	0x28, r1	; 40
	OCR3A = 0;
     264:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     268:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	OCR3B = 0;
     26c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     270:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     274:	08 95       	ret

00000276 <MOTOR_RUN_FORWARD>:
}

void MOTOR_RUN_FORWARD(void)
{
	if(R > L)
     276:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <R>
     27a:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <L>
     27e:	89 17       	cp	r24, r25
     280:	18 f4       	brcc	.+6      	; 0x288 <MOTOR_RUN_FORWARD+0x12>
	{
		L = R;
     282:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <L>
     286:	04 c0       	rjmp	.+8      	; 0x290 <MOTOR_RUN_FORWARD+0x1a>
	}
	if(L > R)
     288:	98 17       	cp	r25, r24
     28a:	10 f4       	brcc	.+4      	; 0x290 <MOTOR_RUN_FORWARD+0x1a>
	{
		R = L;
     28c:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <R>
	}
	SpeedMotorR1(0);
     290:	1b bc       	out	0x2b, r1	; 43
     292:	1a bc       	out	0x2a, r1	; 42
	SpeedMotorR2(R);
     294:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <R>
     298:	90 e0       	ldi	r25, 0x00	; 0
     29a:	99 bd       	out	0x29, r25	; 41
     29c:	88 bd       	out	0x28, r24	; 40
	SpeedMotorL1(0);
     29e:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     2a2:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	SpeedMotorL2(0.95*L);
     2a6:	60 91 4d 01 	lds	r22, 0x014D	; 0x80014d <L>
     2aa:	70 e0       	ldi	r23, 0x00	; 0
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	19 d3       	rcall	.+1586   	; 0x8e4 <__floatsisf>
     2b2:	23 e3       	ldi	r18, 0x33	; 51
     2b4:	33 e3       	ldi	r19, 0x33	; 51
     2b6:	43 e7       	ldi	r20, 0x73	; 115
     2b8:	5f e3       	ldi	r21, 0x3F	; 63
     2ba:	a0 d3       	rcall	.+1856   	; 0x9fc <__mulsf3>
     2bc:	e5 d2       	rcall	.+1482   	; 0x888 <__fixunssfsi>
     2be:	70 93 85 00 	sts	0x0085, r23	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     2c2:	60 93 84 00 	sts	0x0084, r22	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     2c6:	08 95       	ret

000002c8 <MOTOR_RUN_BACKWARD>:
	*/
}

void MOTOR_RUN_BACKWARD(void)
{
	if(R > L)
     2c8:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <R>
     2cc:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <L>
     2d0:	89 17       	cp	r24, r25
     2d2:	18 f4       	brcc	.+6      	; 0x2da <MOTOR_RUN_BACKWARD+0x12>
	{
		L = R;
     2d4:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <L>
     2d8:	04 c0       	rjmp	.+8      	; 0x2e2 <MOTOR_RUN_BACKWARD+0x1a>
	}
	if(L > R)
     2da:	98 17       	cp	r25, r24
     2dc:	10 f4       	brcc	.+4      	; 0x2e2 <MOTOR_RUN_BACKWARD+0x1a>
	{
		R = L;
     2de:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <R>
	}
	SpeedMotorR1(R);
     2e2:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <R>
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	9b bd       	out	0x2b, r25	; 43
     2ea:	8a bd       	out	0x2a, r24	; 42
	SpeedMotorR2(0);
     2ec:	19 bc       	out	0x29, r1	; 41
     2ee:	18 bc       	out	0x28, r1	; 40
	SpeedMotorL1(L);
     2f0:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <L>
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     2fa:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	SpeedMotorL2(0);
     2fe:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     302:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     306:	08 95       	ret

00000308 <MOTOR_RUN_RIGHT>:
	SpeedMotorR2(R);
	SpeedMotorL1(0);
	SpeedMotorL2(L);
	*/
	
	SpeedMotorR1(0);
     308:	1b bc       	out	0x2b, r1	; 43
     30a:	1a bc       	out	0x2a, r1	; 42
	SpeedMotorR2(R);
     30c:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <R>
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	99 bd       	out	0x29, r25	; 41
     314:	88 bd       	out	0x28, r24	; 40
	SpeedMotorL1(0);
     316:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     31a:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	SpeedMotorL2(R/4);
     31e:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <R>
     322:	86 95       	lsr	r24
     324:	86 95       	lsr	r24
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     32c:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     330:	08 95       	ret

00000332 <MOTOR_RUN_LEFT>:
	SpeedMotorR2(R);
	SpeedMotorL1(0);
	SpeedMotorL2(L);
	*/
	
	SpeedMotorR1(0);
     332:	1b bc       	out	0x2b, r1	; 43
     334:	1a bc       	out	0x2a, r1	; 42
	SpeedMotorR2(R/4);
     336:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <R>
     33a:	86 95       	lsr	r24
     33c:	86 95       	lsr	r24
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	99 bd       	out	0x29, r25	; 41
     342:	88 bd       	out	0x28, r24	; 40
	SpeedMotorL1(0);
     344:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     348:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	SpeedMotorL2(L);
     34c:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <L>
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     356:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     35a:	08 95       	ret

0000035c <MOTOR_ROTATE_RIGHT>:
}

void MOTOR_ROTATE_RIGHT(void)
{
	SpeedMotorR1(0);
     35c:	1b bc       	out	0x2b, r1	; 43
     35e:	1a bc       	out	0x2a, r1	; 42
	SpeedMotorR2(R);
     360:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <R>
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	99 bd       	out	0x29, r25	; 41
     368:	88 bd       	out	0x28, r24	; 40
	SpeedMotorL1(L);
     36a:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <L>
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     374:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	SpeedMotorL2(0);
     378:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     37c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     380:	08 95       	ret

00000382 <MOTOR_ROTATE_LEFT>:
}

void MOTOR_ROTATE_LEFT(void)
{
	SpeedMotorR1(R);
     382:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <R>
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	9b bd       	out	0x2b, r25	; 43
     38a:	8a bd       	out	0x2a, r24	; 42
	SpeedMotorR2(0);
     38c:	19 bc       	out	0x29, r1	; 41
     38e:	18 bc       	out	0x28, r1	; 40
	SpeedMotorL1(0);
     390:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     394:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	SpeedMotorL2(L);
     398:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <L>
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     3a2:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     3a6:	08 95       	ret

000003a8 <MOTOR_AUTO_DRIVE>:
}


void MOTOR_AUTO_DRIVE(void)
{
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
	
	uint8_t temp1, temp2, temp3, temp4;
	
	temp1 = measure_distance_1();
     3ac:	9f d1       	rcall	.+830    	; 0x6ec <measure_distance_1>
     3ae:	d8 2f       	mov	r29, r24
	temp2 = temp1;
	temp1 = measure_distance_1();
     3b0:	9d d1       	rcall	.+826    	; 0x6ec <measure_distance_1>
     3b2:	c8 2f       	mov	r28, r24
	temp3 = temp2;
	temp2 = temp1;
	temp1 = measure_distance_1();
     3b4:	9b d1       	rcall	.+822    	; 0x6ec <measure_distance_1>
     3b6:	2c 2f       	mov	r18, r28
	
	distance_1 = (temp1+temp2+temp3)/3;
     3b8:	30 e0       	ldi	r19, 0x00	; 0
     3ba:	a9 01       	movw	r20, r18
     3bc:	48 0f       	add	r20, r24
     3be:	51 1d       	adc	r21, r1
     3c0:	ca 01       	movw	r24, r20
     3c2:	8d 0f       	add	r24, r29
     3c4:	91 1d       	adc	r25, r1
     3c6:	63 e0       	ldi	r22, 0x03	; 3
     3c8:	70 e0       	ldi	r23, 0x00	; 0
     3ca:	7b d3       	rcall	.+1782   	; 0xac2 <__divmodhi4>
     3cc:	60 93 4c 01 	sts	0x014C, r22	; 0x80014c <distance_1>
	distance_2 = measure_distance_2();
     3d0:	c0 d1       	rcall	.+896    	; 0x752 <measure_distance_2>
     3d2:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <distance_2>
     3d6:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <distance_1>

	
	printf("distance1: %d cm  \r\n", distance_1);
     3da:	1f 92       	push	r1
     3dc:	8f 93       	push	r24
     3de:	8d e1       	ldi	r24, 0x1D	; 29
     3e0:	91 e0       	ldi	r25, 0x01	; 1
     3e2:	9f 93       	push	r25
     3e4:	8f 93       	push	r24
     3e6:	9d d3       	rcall	.+1850   	; 0xb22 <printf>
     3e8:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <distance_2>
	printf("distance2: %d cm  \r\n", distance_2);
     3ec:	1f 92       	push	r1
     3ee:	8f 93       	push	r24
     3f0:	82 e3       	ldi	r24, 0x32	; 50
     3f2:	91 e0       	ldi	r25, 0x01	; 1
     3f4:	9f 93       	push	r25
     3f6:	8f 93       	push	r24
     3f8:	94 d3       	rcall	.+1832   	; 0xb22 <printf>
     3fa:	8d b7       	in	r24, 0x3d	; 61
	
	
	switch(auto_states)
     3fc:	9e b7       	in	r25, 0x3e	; 62
     3fe:	08 96       	adiw	r24, 0x08	; 8
     400:	0f b6       	in	r0, 0x3f	; 63
     402:	f8 94       	cli
     404:	9e bf       	out	0x3e, r25	; 62
     406:	0f be       	out	0x3f, r0	; 63
     408:	8d bf       	out	0x3d, r24	; 61
     40a:	e0 91 4a 01 	lds	r30, 0x014A	; 0x80014a <auto_states>
     40e:	8e 2f       	mov	r24, r30
     410:	90 e0       	ldi	r25, 0x00	; 0
     412:	8e 30       	cpi	r24, 0x0E	; 14
     414:	91 05       	cpc	r25, r1
     416:	08 f0       	brcs	.+2      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     418:	18 c1       	rjmp	.+560    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     41a:	fc 01       	movw	r30, r24
     41c:	ea 5a       	subi	r30, 0xAA	; 170
     41e:	ff 4f       	sbci	r31, 0xFF	; 255
     420:	63 c3       	rjmp	.+1734   	; 0xae8 <__tablejump2__>
	{
		
		//1st course
		case 0:
		MOTOR_RUN_FORWARD();
     422:	29 df       	rcall	.-430    	; 0x276 <MOTOR_RUN_FORWARD>
     424:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <distance_1>
		if(distance_1 < 60 && distance_2 < 60)
     428:	8c 33       	cpi	r24, 0x3C	; 60
     42a:	08 f0       	brcs	.+2      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     42c:	0e c1       	rjmp	.+540    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     42e:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <distance_2>
     432:	8c 33       	cpi	r24, 0x3C	; 60
     434:	08 f0       	brcs	.+2      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
		{
			if(distance_1 < 60 && distance_2 < 60)
			{
				MOTOR_STOP();
     436:	09 c1       	rjmp	.+530    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     438:	11 df       	rcall	.-478    	; 0x25c <MOTOR_STOP>
				auto_states = 1;
     43a:	81 e0       	ldi	r24, 0x01	; 1
     43c:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
     440:	04 c1       	rjmp	.+520    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
			}
		}
		break;
		
		case 1:
		MOTOR_ROTATE_LEFT();
     442:	9f df       	rcall	.-194    	; 0x382 <MOTOR_ROTATE_LEFT>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     444:	9f ef       	ldi	r25, 0xFF	; 255
     446:	26 e5       	ldi	r18, 0x56	; 86
     448:	47 e1       	ldi	r20, 0x17	; 23
     44a:	91 50       	subi	r25, 0x01	; 1
     44c:	20 40       	sbci	r18, 0x00	; 0
     44e:	40 40       	sbci	r20, 0x00	; 0
     450:	e1 f7       	brne	.-8      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     452:	00 c0       	rjmp	.+0      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
     454:	00 00       	nop
		_delay_ms(478);
		MOTOR_STOP();
     456:	02 df       	rcall	.-508    	; 0x25c <MOTOR_STOP>
     458:	5f ef       	ldi	r21, 0xFF	; 255
     45a:	81 ee       	ldi	r24, 0xE1	; 225
     45c:	94 e0       	ldi	r25, 0x04	; 4
     45e:	51 50       	subi	r21, 0x01	; 1
     460:	80 40       	sbci	r24, 0x00	; 0
     462:	90 40       	sbci	r25, 0x00	; 0
     464:	e1 f7       	brne	.-8      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     466:	00 c0       	rjmp	.+0      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     468:	00 00       	nop
		_delay_ms(100);
		auto_states = 2;
     46a:	82 e0       	ldi	r24, 0x02	; 2
     46c:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
		break;
		
		//2nd course
		case 2:
		MOTOR_RUN_FORWARD();
     470:	ec c0       	rjmp	.+472    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     472:	01 df       	rcall	.-510    	; 0x276 <MOTOR_RUN_FORWARD>
		if(distance_1 < 60 && distance_2 < 60)
     474:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <distance_1>
     478:	8c 33       	cpi	r24, 0x3C	; 60
     47a:	08 f0       	brcs	.+2      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
     47c:	e6 c0       	rjmp	.+460    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     47e:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <distance_2>
     482:	8c 33       	cpi	r24, 0x3C	; 60
     484:	08 f0       	brcs	.+2      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
		{
			if(distance_1 < 60 && distance_2 < 60)
			{
				MOTOR_STOP();
     486:	e1 c0       	rjmp	.+450    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     488:	e9 de       	rcall	.-558    	; 0x25c <MOTOR_STOP>
				auto_states = 3;
     48a:	83 e0       	ldi	r24, 0x03	; 3
     48c:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
			}
		}
		break;
		
		case 3:
		MOTOR_ROTATE_LEFT();
     490:	dc c0       	rjmp	.+440    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     492:	77 df       	rcall	.-274    	; 0x382 <MOTOR_ROTATE_LEFT>
     494:	2f ef       	ldi	r18, 0xFF	; 255
     496:	4f e6       	ldi	r20, 0x6F	; 111
     498:	57 e1       	ldi	r21, 0x17	; 23
     49a:	21 50       	subi	r18, 0x01	; 1
     49c:	40 40       	sbci	r20, 0x00	; 0
     49e:	50 40       	sbci	r21, 0x00	; 0
     4a0:	e1 f7       	brne	.-8      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
		_delay_ms(480);
		MOTOR_STOP();
     4a4:	00 00       	nop
     4a6:	da de       	rcall	.-588    	; 0x25c <MOTOR_STOP>
     4a8:	8f ef       	ldi	r24, 0xFF	; 255
     4aa:	91 ee       	ldi	r25, 0xE1	; 225
     4ac:	24 e0       	ldi	r18, 0x04	; 4
     4ae:	81 50       	subi	r24, 0x01	; 1
     4b0:	90 40       	sbci	r25, 0x00	; 0
     4b2:	20 40       	sbci	r18, 0x00	; 0
     4b4:	e1 f7       	brne	.-8      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
     4b6:	00 c0       	rjmp	.+0      	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
		_delay_ms(100);
		auto_states = 4;
     4b8:	00 00       	nop
     4ba:	84 e0       	ldi	r24, 0x04	; 4
     4bc:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
		break;
		
		//3rd course
		case 4:
		MOTOR_RUN_FORWARD();
     4c0:	c4 c0       	rjmp	.+392    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
		if(distance_1 < 60 && distance_2 < 60)
     4c2:	d9 de       	rcall	.-590    	; 0x276 <MOTOR_RUN_FORWARD>
     4c4:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <distance_1>
     4c8:	8c 33       	cpi	r24, 0x3C	; 60
     4ca:	08 f0       	brcs	.+2      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     4cc:	be c0       	rjmp	.+380    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     4ce:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <distance_2>
     4d2:	8c 33       	cpi	r24, 0x3C	; 60
		{
			if(distance_1 < 60 && distance_2 < 60)
			{
				MOTOR_STOP();
     4d4:	08 f0       	brcs	.+2      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
     4d6:	b9 c0       	rjmp	.+370    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
				auto_states = 5;
     4d8:	c1 de       	rcall	.-638    	; 0x25c <MOTOR_STOP>
     4da:	85 e0       	ldi	r24, 0x05	; 5
     4dc:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
			}
		}
		break;
		
		case 5:
		MOTOR_ROTATE_RIGHT();
     4e0:	b4 c0       	rjmp	.+360    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     4e2:	3c df       	rcall	.-392    	; 0x35c <MOTOR_ROTATE_RIGHT>
     4e4:	4f ef       	ldi	r20, 0xFF	; 255
     4e6:	5c ee       	ldi	r21, 0xEC	; 236
     4e8:	87 e1       	ldi	r24, 0x17	; 23
     4ea:	41 50       	subi	r20, 0x01	; 1
     4ec:	50 40       	sbci	r21, 0x00	; 0
     4ee:	80 40       	sbci	r24, 0x00	; 0
     4f0:	e1 f7       	brne	.-8      	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
     4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
		_delay_ms(490);
		MOTOR_STOP();
     4f4:	00 00       	nop
     4f6:	b2 de       	rcall	.-668    	; 0x25c <MOTOR_STOP>
     4f8:	9f ef       	ldi	r25, 0xFF	; 255
     4fa:	21 ee       	ldi	r18, 0xE1	; 225
     4fc:	44 e0       	ldi	r20, 0x04	; 4
     4fe:	91 50       	subi	r25, 0x01	; 1
     500:	20 40       	sbci	r18, 0x00	; 0
     502:	40 40       	sbci	r20, 0x00	; 0
     504:	e1 f7       	brne	.-8      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
     506:	00 c0       	rjmp	.+0      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
		_delay_ms(100);
		auto_states = 6;
     508:	00 00       	nop
     50a:	86 e0       	ldi	r24, 0x06	; 6
		break;
     50c:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
		
		//4th course
		case 6:
		MOTOR_RUN_FORWARD();
     510:	9c c0       	rjmp	.+312    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
		if(distance_1 < 60 && distance_2 < 60)
     512:	b1 de       	rcall	.-670    	; 0x276 <MOTOR_RUN_FORWARD>
     514:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <distance_1>
     518:	8c 33       	cpi	r24, 0x3C	; 60
     51a:	08 f0       	brcs	.+2      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
     51c:	96 c0       	rjmp	.+300    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     51e:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <distance_2>
     522:	8c 33       	cpi	r24, 0x3C	; 60
		{
			MOTOR_STOP();
     524:	08 f0       	brcs	.+2      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
     526:	91 c0       	rjmp	.+290    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
			auto_states = 7;
     528:	99 de       	rcall	.-718    	; 0x25c <MOTOR_STOP>
     52a:	87 e0       	ldi	r24, 0x07	; 7
     52c:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
		}
		break;
		
		case 7:
		MOTOR_ROTATE_LEFT();
     530:	8c c0       	rjmp	.+280    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     532:	27 df       	rcall	.-434    	; 0x382 <MOTOR_ROTATE_LEFT>
     534:	5f ef       	ldi	r21, 0xFF	; 255
     536:	8f e6       	ldi	r24, 0x6F	; 111
     538:	97 e1       	ldi	r25, 0x17	; 23
     53a:	51 50       	subi	r21, 0x01	; 1
     53c:	80 40       	sbci	r24, 0x00	; 0
     53e:	90 40       	sbci	r25, 0x00	; 0
     540:	e1 f7       	brne	.-8      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
     542:	00 c0       	rjmp	.+0      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
		_delay_ms(480);
		MOTOR_STOP();
     544:	00 00       	nop
     546:	8a de       	rcall	.-748    	; 0x25c <MOTOR_STOP>
     548:	2f ef       	ldi	r18, 0xFF	; 255
     54a:	41 ee       	ldi	r20, 0xE1	; 225
     54c:	54 e0       	ldi	r21, 0x04	; 4
     54e:	21 50       	subi	r18, 0x01	; 1
     550:	40 40       	sbci	r20, 0x00	; 0
     552:	50 40       	sbci	r21, 0x00	; 0
     554:	e1 f7       	brne	.-8      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
		_delay_ms(100);
		auto_states = 8;
     556:	00 c0       	rjmp	.+0      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
     558:	00 00       	nop
     55a:	88 e0       	ldi	r24, 0x08	; 8
		break;
     55c:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
		
		//5th course
		case 8:
		MOTOR_RUN_FORWARD();
     560:	74 c0       	rjmp	.+232    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
		if(distance_1 < 60 && distance_2 < 60)
     562:	89 de       	rcall	.-750    	; 0x276 <MOTOR_RUN_FORWARD>
     564:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <distance_1>
     568:	8c 33       	cpi	r24, 0x3C	; 60
     56a:	08 f0       	brcs	.+2      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
     56c:	6e c0       	rjmp	.+220    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     56e:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <distance_2>
     572:	8c 33       	cpi	r24, 0x3C	; 60
		{
			MOTOR_STOP();
     574:	08 f0       	brcs	.+2      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
     576:	69 c0       	rjmp	.+210    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
			auto_states = 9;
     578:	71 de       	rcall	.-798    	; 0x25c <MOTOR_STOP>
     57a:	89 e0       	ldi	r24, 0x09	; 9
     57c:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
		}
		break;
		
		case 9:
		MOTOR_ROTATE_RIGHT();
     580:	64 c0       	rjmp	.+200    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     582:	ec de       	rcall	.-552    	; 0x35c <MOTOR_ROTATE_RIGHT>
     584:	8f ef       	ldi	r24, 0xFF	; 255
     586:	9f e6       	ldi	r25, 0x6F	; 111
     588:	27 e1       	ldi	r18, 0x17	; 23
     58a:	81 50       	subi	r24, 0x01	; 1
     58c:	90 40       	sbci	r25, 0x00	; 0
     58e:	20 40       	sbci	r18, 0x00	; 0
     590:	e1 f7       	brne	.-8      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
		_delay_ms(480);
		MOTOR_STOP();
     592:	00 c0       	rjmp	.+0      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
     594:	00 00       	nop
     596:	62 de       	rcall	.-828    	; 0x25c <MOTOR_STOP>
     598:	4f ef       	ldi	r20, 0xFF	; 255
     59a:	51 ee       	ldi	r21, 0xE1	; 225
     59c:	84 e0       	ldi	r24, 0x04	; 4
     59e:	41 50       	subi	r20, 0x01	; 1
     5a0:	50 40       	sbci	r21, 0x00	; 0
     5a2:	80 40       	sbci	r24, 0x00	; 0
     5a4:	e1 f7       	brne	.-8      	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
		_delay_ms(100);
		auto_states = 10;
     5a6:	00 c0       	rjmp	.+0      	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
     5a8:	00 00       	nop
		break;
     5aa:	8a e0       	ldi	r24, 0x0A	; 10
		
		//6th course
		case 10:
		MOTOR_RUN_FORWARD();
     5ac:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
		if(distance_1 < 60 && distance_2 < 60)
     5b0:	4c c0       	rjmp	.+152    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     5b2:	61 de       	rcall	.-830    	; 0x276 <MOTOR_RUN_FORWARD>
     5b4:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <distance_1>
     5b8:	8c 33       	cpi	r24, 0x3C	; 60
     5ba:	08 f0       	brcs	.+2      	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
     5bc:	46 c0       	rjmp	.+140    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     5be:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <distance_2>
     5c2:	8c 33       	cpi	r24, 0x3C	; 60
		{
			MOTOR_STOP();
     5c4:	08 f0       	brcs	.+2      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
			auto_states = 11;
     5c6:	41 c0       	rjmp	.+130    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     5c8:	49 de       	rcall	.-878    	; 0x25c <MOTOR_STOP>
     5ca:	8b e0       	ldi	r24, 0x0B	; 11
     5cc:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
		}
		break;
		
		case 11:
		MOTOR_ROTATE_RIGHT();
     5d0:	3c c0       	rjmp	.+120    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     5d2:	c4 de       	rcall	.-632    	; 0x35c <MOTOR_ROTATE_RIGHT>
     5d4:	9f ef       	ldi	r25, 0xFF	; 255
     5d6:	2f e6       	ldi	r18, 0x6F	; 111
     5d8:	47 e1       	ldi	r20, 0x17	; 23
     5da:	91 50       	subi	r25, 0x01	; 1
     5dc:	20 40       	sbci	r18, 0x00	; 0
     5de:	40 40       	sbci	r20, 0x00	; 0
		_delay_ms(480);
		MOTOR_STOP();
     5e0:	e1 f7       	brne	.-8      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
     5e2:	00 c0       	rjmp	.+0      	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
     5e4:	00 00       	nop
     5e6:	3a de       	rcall	.-908    	; 0x25c <MOTOR_STOP>
     5e8:	5f ef       	ldi	r21, 0xFF	; 255
     5ea:	81 ee       	ldi	r24, 0xE1	; 225
     5ec:	94 e0       	ldi	r25, 0x04	; 4
     5ee:	51 50       	subi	r21, 0x01	; 1
     5f0:	80 40       	sbci	r24, 0x00	; 0
     5f2:	90 40       	sbci	r25, 0x00	; 0
		_delay_ms(100);
		auto_states = 12;
     5f4:	e1 f7       	brne	.-8      	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
     5f6:	00 c0       	rjmp	.+0      	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
     5f8:	00 00       	nop
		break;
     5fa:	8c e0       	ldi	r24, 0x0C	; 12
		
		//7th course
		case 12:
		MOTOR_RUN_FORWARD();
     5fc:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
		if(distance_1 < 60 && distance_2 < 60)
     600:	24 c0       	rjmp	.+72     	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     602:	39 de       	rcall	.-910    	; 0x276 <MOTOR_RUN_FORWARD>
     604:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <distance_1>
     608:	8c 33       	cpi	r24, 0x3C	; 60
     60a:	f8 f4       	brcc	.+62     	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     60c:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <distance_2>
		{
			MOTOR_STOP();
     610:	8c 33       	cpi	r24, 0x3C	; 60
     612:	d8 f4       	brcc	.+54     	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
			auto_states = 13;
     614:	23 de       	rcall	.-954    	; 0x25c <MOTOR_STOP>
     616:	8d e0       	ldi	r24, 0x0D	; 13
     618:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <auto_states>
		}
		break;
		
		case 13:
		MOTOR_ROTATE_LEFT();
     61c:	16 c0       	rjmp	.+44     	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     61e:	b1 de       	rcall	.-670    	; 0x382 <MOTOR_ROTATE_LEFT>
     620:	2f ef       	ldi	r18, 0xFF	; 255
     622:	4f e6       	ldi	r20, 0x6F	; 111
     624:	57 e1       	ldi	r21, 0x17	; 23
     626:	21 50       	subi	r18, 0x01	; 1
     628:	40 40       	sbci	r20, 0x00	; 0
     62a:	50 40       	sbci	r21, 0x00	; 0
     62c:	e1 f7       	brne	.-8      	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
     62e:	00 c0       	rjmp	.+0      	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
     630:	00 00       	nop
		_delay_ms(480);
		MOTOR_STOP();
     632:	14 de       	rcall	.-984    	; 0x25c <MOTOR_STOP>
     634:	8f ef       	ldi	r24, 0xFF	; 255
     636:	91 ee       	ldi	r25, 0xE1	; 225
     638:	24 e0       	ldi	r18, 0x04	; 4
     63a:	81 50       	subi	r24, 0x01	; 1
     63c:	90 40       	sbci	r25, 0x00	; 0
     63e:	20 40       	sbci	r18, 0x00	; 0
     640:	e1 f7       	brne	.-8      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
     642:	00 c0       	rjmp	.+0      	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
     644:	00 00       	nop
     646:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <auto_states>
		_delay_ms(100);
		auto_states = 0;
     64a:	df 91       	pop	r29
		
		default:
		break;
	}
	
}
     64c:	cf 91       	pop	r28
     64e:	08 95       	ret

00000650 <UART0_init>:
     650:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	}
	for(i = index; i >= 0; i--)
	{
		UART0_transmit(numString[i]);
	}
}
     654:	8f ec       	ldi	r24, 0xCF	; 207
     656:	89 b9       	out	0x09, r24	; 9
     658:	59 9a       	sbi	0x0b, 1	; 11
     65a:	e5 e9       	ldi	r30, 0x95	; 149
     65c:	f0 e0       	ldi	r31, 0x00	; 0
     65e:	80 81       	ld	r24, Z
     660:	86 60       	ori	r24, 0x06	; 6
     662:	80 83       	st	Z, r24
     664:	54 9a       	sbi	0x0a, 4	; 10
     666:	53 9a       	sbi	0x0a, 3	; 10
     668:	08 95       	ret

0000066a <UART0_transmit>:
     66a:	5d 9b       	sbis	0x0b, 5	; 11
     66c:	fe cf       	rjmp	.-4      	; 0x66a <UART0_transmit>
     66e:	8c b9       	out	0x0c, r24	; 12
     670:	08 95       	ret

00000672 <UART0_receive>:
     672:	5f 9b       	sbis	0x0b, 7	; 11
     674:	fe cf       	rjmp	.-4      	; 0x672 <UART0_receive>
     676:	8c b1       	in	r24, 0x0c	; 12
     678:	08 95       	ret

0000067a <UART0_rx_check>:

uint8_t UART0_rx_check(void)
{
	if( UCSR0A & (1<<RXC0) )	// 데이터 수신 대기
     67a:	8b b1       	in	r24, 0x0b	; 11
	return 1;
	else
	return 0;
     67c:	88 1f       	adc	r24, r24
     67e:	88 27       	eor	r24, r24
     680:	88 1f       	adc	r24, r24
     682:	08 95       	ret

00000684 <INTIT_4_ULTRASONIC>:

#include "ULTRASONIC.h"

void INTIT_4_ULTRASONIC(void)
{
	TCCR0 |= (1 << CS02) | (1 << CS01) | (1 << CS00); //16비트 타이머 1번 타이머/카운터 분주비를 1024로 설정
     684:	83 b7       	in	r24, 0x33	; 51
     686:	87 60       	ori	r24, 0x07	; 7
     688:	83 bf       	out	0x33, r24	; 51
	
	ULTAR_DDR |= (1 << ULTRA_TRIG_1) | (1 << ULTRA_TRIG_2);
     68a:	e4 e6       	ldi	r30, 0x64	; 100
     68c:	f0 e0       	ldi	r31, 0x00	; 0
     68e:	80 81       	ld	r24, Z
     690:	8a 60       	ori	r24, 0x0A	; 10
     692:	80 83       	st	Z, r24
	ULTAR_DDR &= ~(1 <<ULTRA_ECHO_1) | (1 << ULTRA_TRIG_2);
     694:	80 81       	ld	r24, Z
     696:	8b 7f       	andi	r24, 0xFB	; 251
     698:	80 83       	st	Z, r24
     69a:	08 95       	ret

0000069c <UltraSonic_Trigger_1>:
}

void UltraSonic_Trigger_1(void)
{
	//트리거 핀으로 펄스 출력
	ULTRA_PORT &= ~(1 << ULTRA_TRIG_1);
     69c:	e5 e6       	ldi	r30, 0x65	; 101
     69e:	f0 e0       	ldi	r31, 0x00	; 0
     6a0:	80 81       	ld	r24, Z
     6a2:	8d 7f       	andi	r24, 0xFD	; 253
     6a4:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6a6:	85 e0       	ldi	r24, 0x05	; 5
     6a8:	8a 95       	dec	r24
     6aa:	f1 f7       	brne	.-4      	; 0x6a8 <UltraSonic_Trigger_1+0xc>
     6ac:	00 00       	nop
	_delay_us(1);
	ULTRA_PORT |= (1 << ULTRA_TRIG_1);
     6ae:	80 81       	ld	r24, Z
     6b0:	82 60       	ori	r24, 0x02	; 2
     6b2:	80 83       	st	Z, r24
     6b4:	85 e3       	ldi	r24, 0x35	; 53
     6b6:	8a 95       	dec	r24
     6b8:	f1 f7       	brne	.-4      	; 0x6b6 <UltraSonic_Trigger_1+0x1a>
     6ba:	00 00       	nop
	_delay_us(10);
	ULTRA_PORT &= ~(1 << ULTRA_TRIG_1);
     6bc:	80 81       	ld	r24, Z
     6be:	8d 7f       	andi	r24, 0xFD	; 253
     6c0:	80 83       	st	Z, r24
     6c2:	08 95       	ret

000006c4 <UltraSonic_Trigger_2>:
}

void UltraSonic_Trigger_2(void)
{
	//트리거 핀으로 펄스 출력
	ULTRA_PORT &= ~(1 << ULTRA_TRIG_2);
     6c4:	e5 e6       	ldi	r30, 0x65	; 101
     6c6:	f0 e0       	ldi	r31, 0x00	; 0
     6c8:	80 81       	ld	r24, Z
     6ca:	87 7f       	andi	r24, 0xF7	; 247
     6cc:	80 83       	st	Z, r24
     6ce:	85 e0       	ldi	r24, 0x05	; 5
     6d0:	8a 95       	dec	r24
     6d2:	f1 f7       	brne	.-4      	; 0x6d0 <UltraSonic_Trigger_2+0xc>
     6d4:	00 00       	nop
	_delay_us(1);
	ULTRA_PORT |= (1 << ULTRA_TRIG_2);
     6d6:	80 81       	ld	r24, Z
     6d8:	88 60       	ori	r24, 0x08	; 8
     6da:	80 83       	st	Z, r24
     6dc:	85 e3       	ldi	r24, 0x35	; 53
     6de:	8a 95       	dec	r24
     6e0:	f1 f7       	brne	.-4      	; 0x6de <UltraSonic_Trigger_2+0x1a>
     6e2:	00 00       	nop
	_delay_us(10);
	ULTRA_PORT &= ~(1 << ULTRA_TRIG_2);
     6e4:	80 81       	ld	r24, Z
     6e6:	87 7f       	andi	r24, 0xF7	; 247
     6e8:	80 83       	st	Z, r24
     6ea:	08 95       	ret

000006ec <measure_distance_1>:
}

uint8_t measure_distance_1(void)
{
	UltraSonic_Trigger_1();
     6ec:	d7 df       	rcall	.-82     	; 0x69c <UltraSonic_Trigger_1>
	
	TCNT0 = 0;
     6ee:	12 be       	out	0x32, r1	; 50
	while(!(ULTRA_PIN & (1 << ULTRA_ECHO_1))) // echo pin이 high가 될 때까지 대기
     6f0:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
     6f4:	82 fd       	sbrc	r24, 2
     6f6:	06 c0       	rjmp	.+12     	; 0x704 <measure_distance_1+0x18>
     6f8:	e3 e6       	ldi	r30, 0x63	; 99
     6fa:	f0 e0       	ldi	r31, 0x00	; 0
	{
		if(TCNT0 > 255)
     6fc:	82 b7       	in	r24, 0x32	; 50
uint8_t measure_distance_1(void)
{
	UltraSonic_Trigger_1();
	
	TCNT0 = 0;
	while(!(ULTRA_PIN & (1 << ULTRA_ECHO_1))) // echo pin이 high가 될 때까지 대기
     6fe:	80 81       	ld	r24, Z
     700:	82 ff       	sbrs	r24, 2
     702:	fc cf       	rjmp	.-8      	; 0x6fc <measure_distance_1+0x10>
	{
		if(TCNT0 > 255)
		return 0;
	}
	
	TCNT0 = 0;
     704:	12 be       	out	0x32, r1	; 50
	while(ULTRA_PIN & (1 << ULTRA_ECHO_1))
     706:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
     70a:	82 ff       	sbrs	r24, 2
     70c:	06 c0       	rjmp	.+12     	; 0x71a <measure_distance_1+0x2e>
     70e:	e3 e6       	ldi	r30, 0x63	; 99
     710:	f0 e0       	ldi	r31, 0x00	; 0
	{
		if(TCNT0 > 255)
     712:	82 b7       	in	r24, 0x32	; 50
		if(TCNT0 > 255)
		return 0;
	}
	
	TCNT0 = 0;
	while(ULTRA_PIN & (1 << ULTRA_ECHO_1))
     714:	80 81       	ld	r24, Z
     716:	82 fd       	sbrc	r24, 2
     718:	fc cf       	rjmp	.-8      	; 0x712 <measure_distance_1+0x26>
			TCNT0 = 0;
			break;
		}
	}
	
	double pulse_width = 1000000.0*TCNT0*PRESCALER/F_CPU;
     71a:	62 b7       	in	r22, 0x32	; 50
     71c:	70 e0       	ldi	r23, 0x00	; 0
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	e0 d0       	rcall	.+448    	; 0x8e4 <__floatsisf>
     724:	20 e0       	ldi	r18, 0x00	; 0
     726:	34 e2       	ldi	r19, 0x24	; 36
     728:	44 e7       	ldi	r20, 0x74	; 116
     72a:	59 e4       	ldi	r21, 0x49	; 73
     72c:	67 d1       	rcall	.+718    	; 0x9fc <__mulsf3>
     72e:	20 e0       	ldi	r18, 0x00	; 0
     730:	30 e0       	ldi	r19, 0x00	; 0
     732:	40 e8       	ldi	r20, 0x80	; 128
     734:	54 e4       	ldi	r21, 0x44	; 68
     736:	62 d1       	rcall	.+708    	; 0x9fc <__mulsf3>
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	34 e2       	ldi	r19, 0x24	; 36
     73c:	44 e7       	ldi	r20, 0x74	; 116
     73e:	5b e4       	ldi	r21, 0x4B	; 75
     740:	3b d0       	rcall	.+118    	; 0x7b8 <__divsf3>
     742:	20 e0       	ldi	r18, 0x00	; 0
     744:	30 e0       	ldi	r19, 0x00	; 0
     746:	48 e6       	ldi	r20, 0x68	; 104
     748:	52 e4       	ldi	r21, 0x42	; 66
     74a:	36 d0       	rcall	.+108    	; 0x7b8 <__divsf3>
     74c:	9d d0       	rcall	.+314    	; 0x888 <__fixunssfsi>
     74e:	86 2f       	mov	r24, r22
	
	return pulse_width / 58;
}
     750:	08 95       	ret

00000752 <measure_distance_2>:

uint8_t measure_distance_2(void)
{
	UltraSonic_Trigger_2();
     752:	b8 df       	rcall	.-144    	; 0x6c4 <UltraSonic_Trigger_2>
	
	TCNT0 = 0;
     754:	12 be       	out	0x32, r1	; 50
	while(!(ULTRA_PIN & (1 << ULTRA_ECHO_2))) // echo pin이 high가 될 때까지 대기
     756:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
     75a:	84 fd       	sbrc	r24, 4
     75c:	06 c0       	rjmp	.+12     	; 0x76a <measure_distance_2+0x18>
     75e:	e3 e6       	ldi	r30, 0x63	; 99
     760:	f0 e0       	ldi	r31, 0x00	; 0
	{
		if(TCNT0 > 255)
     762:	82 b7       	in	r24, 0x32	; 50
uint8_t measure_distance_2(void)
{
	UltraSonic_Trigger_2();
	
	TCNT0 = 0;
	while(!(ULTRA_PIN & (1 << ULTRA_ECHO_2))) // echo pin이 high가 될 때까지 대기
     764:	80 81       	ld	r24, Z
     766:	84 ff       	sbrs	r24, 4
     768:	fc cf       	rjmp	.-8      	; 0x762 <measure_distance_2+0x10>
	{
		if(TCNT0 > 255)
		return 0;
	}
	
	TCNT0 = 0;
     76a:	12 be       	out	0x32, r1	; 50
	while(ULTRA_PIN & (1 << ULTRA_ECHO_2))
     76c:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
     770:	84 ff       	sbrs	r24, 4
     772:	06 c0       	rjmp	.+12     	; 0x780 <measure_distance_2+0x2e>
     774:	e3 e6       	ldi	r30, 0x63	; 99
     776:	f0 e0       	ldi	r31, 0x00	; 0
	{
		if(TCNT0 > 255)
     778:	82 b7       	in	r24, 0x32	; 50
		if(TCNT0 > 255)
		return 0;
	}
	
	TCNT0 = 0;
	while(ULTRA_PIN & (1 << ULTRA_ECHO_2))
     77a:	80 81       	ld	r24, Z
     77c:	84 fd       	sbrc	r24, 4
     77e:	fc cf       	rjmp	.-8      	; 0x778 <measure_distance_2+0x26>
			TCNT0 = 0;
			break;
		}
	}
	
	double pulse_width = 1000000.0*TCNT0*PRESCALER/F_CPU;
     780:	62 b7       	in	r22, 0x32	; 50
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	80 e0       	ldi	r24, 0x00	; 0
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	ad d0       	rcall	.+346    	; 0x8e4 <__floatsisf>
     78a:	20 e0       	ldi	r18, 0x00	; 0
     78c:	34 e2       	ldi	r19, 0x24	; 36
     78e:	44 e7       	ldi	r20, 0x74	; 116
     790:	59 e4       	ldi	r21, 0x49	; 73
     792:	34 d1       	rcall	.+616    	; 0x9fc <__mulsf3>
     794:	20 e0       	ldi	r18, 0x00	; 0
     796:	30 e0       	ldi	r19, 0x00	; 0
     798:	40 e8       	ldi	r20, 0x80	; 128
     79a:	54 e4       	ldi	r21, 0x44	; 68
     79c:	2f d1       	rcall	.+606    	; 0x9fc <__mulsf3>
     79e:	20 e0       	ldi	r18, 0x00	; 0
     7a0:	34 e2       	ldi	r19, 0x24	; 36
     7a2:	44 e7       	ldi	r20, 0x74	; 116
     7a4:	5b e4       	ldi	r21, 0x4B	; 75
     7a6:	08 d0       	rcall	.+16     	; 0x7b8 <__divsf3>
     7a8:	20 e0       	ldi	r18, 0x00	; 0
     7aa:	30 e0       	ldi	r19, 0x00	; 0
     7ac:	48 e6       	ldi	r20, 0x68	; 104
     7ae:	52 e4       	ldi	r21, 0x42	; 66
     7b0:	03 d0       	rcall	.+6      	; 0x7b8 <__divsf3>
     7b2:	6a d0       	rcall	.+212    	; 0x888 <__fixunssfsi>
     7b4:	86 2f       	mov	r24, r22
	
	return pulse_width / 58;
     7b6:	08 95       	ret

000007b8 <__divsf3>:
     7b8:	0c d0       	rcall	.+24     	; 0x7d2 <__divsf3x>
     7ba:	e6 c0       	rjmp	.+460    	; 0x988 <__fp_round>
     7bc:	de d0       	rcall	.+444    	; 0x97a <__fp_pscB>
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__divsf3+0x18>
     7c0:	d5 d0       	rcall	.+426    	; 0x96c <__fp_pscA>
     7c2:	30 f0       	brcs	.+12     	; 0x7d0 <__divsf3+0x18>
     7c4:	21 f4       	brne	.+8      	; 0x7ce <__divsf3+0x16>
     7c6:	5f 3f       	cpi	r21, 0xFF	; 255
     7c8:	19 f0       	breq	.+6      	; 0x7d0 <__divsf3+0x18>
     7ca:	c7 c0       	rjmp	.+398    	; 0x95a <__fp_inf>
     7cc:	51 11       	cpse	r21, r1
     7ce:	10 c1       	rjmp	.+544    	; 0x9f0 <__fp_szero>
     7d0:	ca c0       	rjmp	.+404    	; 0x966 <__fp_nan>

000007d2 <__divsf3x>:
     7d2:	eb d0       	rcall	.+470    	; 0x9aa <__fp_split3>
     7d4:	98 f3       	brcs	.-26     	; 0x7bc <__divsf3+0x4>

000007d6 <__divsf3_pse>:
     7d6:	99 23       	and	r25, r25
     7d8:	c9 f3       	breq	.-14     	; 0x7cc <__divsf3+0x14>
     7da:	55 23       	and	r21, r21
     7dc:	b1 f3       	breq	.-20     	; 0x7ca <__divsf3+0x12>
     7de:	95 1b       	sub	r25, r21
     7e0:	55 0b       	sbc	r21, r21
     7e2:	bb 27       	eor	r27, r27
     7e4:	aa 27       	eor	r26, r26
     7e6:	62 17       	cp	r22, r18
     7e8:	73 07       	cpc	r23, r19
     7ea:	84 07       	cpc	r24, r20
     7ec:	38 f0       	brcs	.+14     	; 0x7fc <__divsf3_pse+0x26>
     7ee:	9f 5f       	subi	r25, 0xFF	; 255
     7f0:	5f 4f       	sbci	r21, 0xFF	; 255
     7f2:	22 0f       	add	r18, r18
     7f4:	33 1f       	adc	r19, r19
     7f6:	44 1f       	adc	r20, r20
     7f8:	aa 1f       	adc	r26, r26
     7fa:	a9 f3       	breq	.-22     	; 0x7e6 <__divsf3_pse+0x10>
     7fc:	33 d0       	rcall	.+102    	; 0x864 <__divsf3_pse+0x8e>
     7fe:	0e 2e       	mov	r0, r30
     800:	3a f0       	brmi	.+14     	; 0x810 <__divsf3_pse+0x3a>
     802:	e0 e8       	ldi	r30, 0x80	; 128
     804:	30 d0       	rcall	.+96     	; 0x866 <__divsf3_pse+0x90>
     806:	91 50       	subi	r25, 0x01	; 1
     808:	50 40       	sbci	r21, 0x00	; 0
     80a:	e6 95       	lsr	r30
     80c:	00 1c       	adc	r0, r0
     80e:	ca f7       	brpl	.-14     	; 0x802 <__divsf3_pse+0x2c>
     810:	29 d0       	rcall	.+82     	; 0x864 <__divsf3_pse+0x8e>
     812:	fe 2f       	mov	r31, r30
     814:	27 d0       	rcall	.+78     	; 0x864 <__divsf3_pse+0x8e>
     816:	66 0f       	add	r22, r22
     818:	77 1f       	adc	r23, r23
     81a:	88 1f       	adc	r24, r24
     81c:	bb 1f       	adc	r27, r27
     81e:	26 17       	cp	r18, r22
     820:	37 07       	cpc	r19, r23
     822:	48 07       	cpc	r20, r24
     824:	ab 07       	cpc	r26, r27
     826:	b0 e8       	ldi	r27, 0x80	; 128
     828:	09 f0       	breq	.+2      	; 0x82c <__divsf3_pse+0x56>
     82a:	bb 0b       	sbc	r27, r27
     82c:	80 2d       	mov	r24, r0
     82e:	bf 01       	movw	r22, r30
     830:	ff 27       	eor	r31, r31
     832:	93 58       	subi	r25, 0x83	; 131
     834:	5f 4f       	sbci	r21, 0xFF	; 255
     836:	2a f0       	brmi	.+10     	; 0x842 <__divsf3_pse+0x6c>
     838:	9e 3f       	cpi	r25, 0xFE	; 254
     83a:	51 05       	cpc	r21, r1
     83c:	68 f0       	brcs	.+26     	; 0x858 <__divsf3_pse+0x82>
     83e:	8d c0       	rjmp	.+282    	; 0x95a <__fp_inf>
     840:	d7 c0       	rjmp	.+430    	; 0x9f0 <__fp_szero>
     842:	5f 3f       	cpi	r21, 0xFF	; 255
     844:	ec f3       	brlt	.-6      	; 0x840 <__divsf3_pse+0x6a>
     846:	98 3e       	cpi	r25, 0xE8	; 232
     848:	dc f3       	brlt	.-10     	; 0x840 <__divsf3_pse+0x6a>
     84a:	86 95       	lsr	r24
     84c:	77 95       	ror	r23
     84e:	67 95       	ror	r22
     850:	b7 95       	ror	r27
     852:	f7 95       	ror	r31
     854:	9f 5f       	subi	r25, 0xFF	; 255
     856:	c9 f7       	brne	.-14     	; 0x84a <__divsf3_pse+0x74>
     858:	88 0f       	add	r24, r24
     85a:	91 1d       	adc	r25, r1
     85c:	96 95       	lsr	r25
     85e:	87 95       	ror	r24
     860:	97 f9       	bld	r25, 7
     862:	08 95       	ret
     864:	e1 e0       	ldi	r30, 0x01	; 1
     866:	66 0f       	add	r22, r22
     868:	77 1f       	adc	r23, r23
     86a:	88 1f       	adc	r24, r24
     86c:	bb 1f       	adc	r27, r27
     86e:	62 17       	cp	r22, r18
     870:	73 07       	cpc	r23, r19
     872:	84 07       	cpc	r24, r20
     874:	ba 07       	cpc	r27, r26
     876:	20 f0       	brcs	.+8      	; 0x880 <__divsf3_pse+0xaa>
     878:	62 1b       	sub	r22, r18
     87a:	73 0b       	sbc	r23, r19
     87c:	84 0b       	sbc	r24, r20
     87e:	ba 0b       	sbc	r27, r26
     880:	ee 1f       	adc	r30, r30
     882:	88 f7       	brcc	.-30     	; 0x866 <__divsf3_pse+0x90>
     884:	e0 95       	com	r30
     886:	08 95       	ret

00000888 <__fixunssfsi>:
     888:	98 d0       	rcall	.+304    	; 0x9ba <__fp_splitA>
     88a:	88 f0       	brcs	.+34     	; 0x8ae <__fixunssfsi+0x26>
     88c:	9f 57       	subi	r25, 0x7F	; 127
     88e:	90 f0       	brcs	.+36     	; 0x8b4 <__fixunssfsi+0x2c>
     890:	b9 2f       	mov	r27, r25
     892:	99 27       	eor	r25, r25
     894:	b7 51       	subi	r27, 0x17	; 23
     896:	a0 f0       	brcs	.+40     	; 0x8c0 <__fixunssfsi+0x38>
     898:	d1 f0       	breq	.+52     	; 0x8ce <__fixunssfsi+0x46>
     89a:	66 0f       	add	r22, r22
     89c:	77 1f       	adc	r23, r23
     89e:	88 1f       	adc	r24, r24
     8a0:	99 1f       	adc	r25, r25
     8a2:	1a f0       	brmi	.+6      	; 0x8aa <__fixunssfsi+0x22>
     8a4:	ba 95       	dec	r27
     8a6:	c9 f7       	brne	.-14     	; 0x89a <__fixunssfsi+0x12>
     8a8:	12 c0       	rjmp	.+36     	; 0x8ce <__fixunssfsi+0x46>
     8aa:	b1 30       	cpi	r27, 0x01	; 1
     8ac:	81 f0       	breq	.+32     	; 0x8ce <__fixunssfsi+0x46>
     8ae:	9f d0       	rcall	.+318    	; 0x9ee <__fp_zero>
     8b0:	b1 e0       	ldi	r27, 0x01	; 1
     8b2:	08 95       	ret
     8b4:	9c c0       	rjmp	.+312    	; 0x9ee <__fp_zero>
     8b6:	67 2f       	mov	r22, r23
     8b8:	78 2f       	mov	r23, r24
     8ba:	88 27       	eor	r24, r24
     8bc:	b8 5f       	subi	r27, 0xF8	; 248
     8be:	39 f0       	breq	.+14     	; 0x8ce <__fixunssfsi+0x46>
     8c0:	b9 3f       	cpi	r27, 0xF9	; 249
     8c2:	cc f3       	brlt	.-14     	; 0x8b6 <__fixunssfsi+0x2e>
     8c4:	86 95       	lsr	r24
     8c6:	77 95       	ror	r23
     8c8:	67 95       	ror	r22
     8ca:	b3 95       	inc	r27
     8cc:	d9 f7       	brne	.-10     	; 0x8c4 <__fixunssfsi+0x3c>
     8ce:	3e f4       	brtc	.+14     	; 0x8de <__fixunssfsi+0x56>
     8d0:	90 95       	com	r25
     8d2:	80 95       	com	r24
     8d4:	70 95       	com	r23
     8d6:	61 95       	neg	r22
     8d8:	7f 4f       	sbci	r23, 0xFF	; 255
     8da:	8f 4f       	sbci	r24, 0xFF	; 255
     8dc:	9f 4f       	sbci	r25, 0xFF	; 255
     8de:	08 95       	ret

000008e0 <__floatunsisf>:
     8e0:	e8 94       	clt
     8e2:	09 c0       	rjmp	.+18     	; 0x8f6 <__floatsisf+0x12>

000008e4 <__floatsisf>:
     8e4:	97 fb       	bst	r25, 7
     8e6:	3e f4       	brtc	.+14     	; 0x8f6 <__floatsisf+0x12>
     8e8:	90 95       	com	r25
     8ea:	80 95       	com	r24
     8ec:	70 95       	com	r23
     8ee:	61 95       	neg	r22
     8f0:	7f 4f       	sbci	r23, 0xFF	; 255
     8f2:	8f 4f       	sbci	r24, 0xFF	; 255
     8f4:	9f 4f       	sbci	r25, 0xFF	; 255
     8f6:	99 23       	and	r25, r25
     8f8:	a9 f0       	breq	.+42     	; 0x924 <__floatsisf+0x40>
     8fa:	f9 2f       	mov	r31, r25
     8fc:	96 e9       	ldi	r25, 0x96	; 150
     8fe:	bb 27       	eor	r27, r27
     900:	93 95       	inc	r25
     902:	f6 95       	lsr	r31
     904:	87 95       	ror	r24
     906:	77 95       	ror	r23
     908:	67 95       	ror	r22
     90a:	b7 95       	ror	r27
     90c:	f1 11       	cpse	r31, r1
     90e:	f8 cf       	rjmp	.-16     	; 0x900 <__floatsisf+0x1c>
     910:	fa f4       	brpl	.+62     	; 0x950 <__floatsisf+0x6c>
     912:	bb 0f       	add	r27, r27
     914:	11 f4       	brne	.+4      	; 0x91a <__floatsisf+0x36>
     916:	60 ff       	sbrs	r22, 0
     918:	1b c0       	rjmp	.+54     	; 0x950 <__floatsisf+0x6c>
     91a:	6f 5f       	subi	r22, 0xFF	; 255
     91c:	7f 4f       	sbci	r23, 0xFF	; 255
     91e:	8f 4f       	sbci	r24, 0xFF	; 255
     920:	9f 4f       	sbci	r25, 0xFF	; 255
     922:	16 c0       	rjmp	.+44     	; 0x950 <__floatsisf+0x6c>
     924:	88 23       	and	r24, r24
     926:	11 f0       	breq	.+4      	; 0x92c <__floatsisf+0x48>
     928:	96 e9       	ldi	r25, 0x96	; 150
     92a:	11 c0       	rjmp	.+34     	; 0x94e <__floatsisf+0x6a>
     92c:	77 23       	and	r23, r23
     92e:	21 f0       	breq	.+8      	; 0x938 <__floatsisf+0x54>
     930:	9e e8       	ldi	r25, 0x8E	; 142
     932:	87 2f       	mov	r24, r23
     934:	76 2f       	mov	r23, r22
     936:	05 c0       	rjmp	.+10     	; 0x942 <__floatsisf+0x5e>
     938:	66 23       	and	r22, r22
     93a:	71 f0       	breq	.+28     	; 0x958 <__floatsisf+0x74>
     93c:	96 e8       	ldi	r25, 0x86	; 134
     93e:	86 2f       	mov	r24, r22
     940:	70 e0       	ldi	r23, 0x00	; 0
     942:	60 e0       	ldi	r22, 0x00	; 0
     944:	2a f0       	brmi	.+10     	; 0x950 <__floatsisf+0x6c>
     946:	9a 95       	dec	r25
     948:	66 0f       	add	r22, r22
     94a:	77 1f       	adc	r23, r23
     94c:	88 1f       	adc	r24, r24
     94e:	da f7       	brpl	.-10     	; 0x946 <__floatsisf+0x62>
     950:	88 0f       	add	r24, r24
     952:	96 95       	lsr	r25
     954:	87 95       	ror	r24
     956:	97 f9       	bld	r25, 7
     958:	08 95       	ret

0000095a <__fp_inf>:
     95a:	97 f9       	bld	r25, 7
     95c:	9f 67       	ori	r25, 0x7F	; 127
     95e:	80 e8       	ldi	r24, 0x80	; 128
     960:	70 e0       	ldi	r23, 0x00	; 0
     962:	60 e0       	ldi	r22, 0x00	; 0
     964:	08 95       	ret

00000966 <__fp_nan>:
     966:	9f ef       	ldi	r25, 0xFF	; 255
     968:	80 ec       	ldi	r24, 0xC0	; 192
     96a:	08 95       	ret

0000096c <__fp_pscA>:
     96c:	00 24       	eor	r0, r0
     96e:	0a 94       	dec	r0
     970:	16 16       	cp	r1, r22
     972:	17 06       	cpc	r1, r23
     974:	18 06       	cpc	r1, r24
     976:	09 06       	cpc	r0, r25
     978:	08 95       	ret

0000097a <__fp_pscB>:
     97a:	00 24       	eor	r0, r0
     97c:	0a 94       	dec	r0
     97e:	12 16       	cp	r1, r18
     980:	13 06       	cpc	r1, r19
     982:	14 06       	cpc	r1, r20
     984:	05 06       	cpc	r0, r21
     986:	08 95       	ret

00000988 <__fp_round>:
     988:	09 2e       	mov	r0, r25
     98a:	03 94       	inc	r0
     98c:	00 0c       	add	r0, r0
     98e:	11 f4       	brne	.+4      	; 0x994 <__fp_round+0xc>
     990:	88 23       	and	r24, r24
     992:	52 f0       	brmi	.+20     	; 0x9a8 <__fp_round+0x20>
     994:	bb 0f       	add	r27, r27
     996:	40 f4       	brcc	.+16     	; 0x9a8 <__fp_round+0x20>
     998:	bf 2b       	or	r27, r31
     99a:	11 f4       	brne	.+4      	; 0x9a0 <__fp_round+0x18>
     99c:	60 ff       	sbrs	r22, 0
     99e:	04 c0       	rjmp	.+8      	; 0x9a8 <__fp_round+0x20>
     9a0:	6f 5f       	subi	r22, 0xFF	; 255
     9a2:	7f 4f       	sbci	r23, 0xFF	; 255
     9a4:	8f 4f       	sbci	r24, 0xFF	; 255
     9a6:	9f 4f       	sbci	r25, 0xFF	; 255
     9a8:	08 95       	ret

000009aa <__fp_split3>:
     9aa:	57 fd       	sbrc	r21, 7
     9ac:	90 58       	subi	r25, 0x80	; 128
     9ae:	44 0f       	add	r20, r20
     9b0:	55 1f       	adc	r21, r21
     9b2:	59 f0       	breq	.+22     	; 0x9ca <__fp_splitA+0x10>
     9b4:	5f 3f       	cpi	r21, 0xFF	; 255
     9b6:	71 f0       	breq	.+28     	; 0x9d4 <__fp_splitA+0x1a>
     9b8:	47 95       	ror	r20

000009ba <__fp_splitA>:
     9ba:	88 0f       	add	r24, r24
     9bc:	97 fb       	bst	r25, 7
     9be:	99 1f       	adc	r25, r25
     9c0:	61 f0       	breq	.+24     	; 0x9da <__fp_splitA+0x20>
     9c2:	9f 3f       	cpi	r25, 0xFF	; 255
     9c4:	79 f0       	breq	.+30     	; 0x9e4 <__fp_splitA+0x2a>
     9c6:	87 95       	ror	r24
     9c8:	08 95       	ret
     9ca:	12 16       	cp	r1, r18
     9cc:	13 06       	cpc	r1, r19
     9ce:	14 06       	cpc	r1, r20
     9d0:	55 1f       	adc	r21, r21
     9d2:	f2 cf       	rjmp	.-28     	; 0x9b8 <__fp_split3+0xe>
     9d4:	46 95       	lsr	r20
     9d6:	f1 df       	rcall	.-30     	; 0x9ba <__fp_splitA>
     9d8:	08 c0       	rjmp	.+16     	; 0x9ea <__fp_splitA+0x30>
     9da:	16 16       	cp	r1, r22
     9dc:	17 06       	cpc	r1, r23
     9de:	18 06       	cpc	r1, r24
     9e0:	99 1f       	adc	r25, r25
     9e2:	f1 cf       	rjmp	.-30     	; 0x9c6 <__fp_splitA+0xc>
     9e4:	86 95       	lsr	r24
     9e6:	71 05       	cpc	r23, r1
     9e8:	61 05       	cpc	r22, r1
     9ea:	08 94       	sec
     9ec:	08 95       	ret

000009ee <__fp_zero>:
     9ee:	e8 94       	clt

000009f0 <__fp_szero>:
     9f0:	bb 27       	eor	r27, r27
     9f2:	66 27       	eor	r22, r22
     9f4:	77 27       	eor	r23, r23
     9f6:	cb 01       	movw	r24, r22
     9f8:	97 f9       	bld	r25, 7
     9fa:	08 95       	ret

000009fc <__mulsf3>:
     9fc:	0b d0       	rcall	.+22     	; 0xa14 <__mulsf3x>
     9fe:	c4 cf       	rjmp	.-120    	; 0x988 <__fp_round>
     a00:	b5 df       	rcall	.-150    	; 0x96c <__fp_pscA>
     a02:	28 f0       	brcs	.+10     	; 0xa0e <__mulsf3+0x12>
     a04:	ba df       	rcall	.-140    	; 0x97a <__fp_pscB>
     a06:	18 f0       	brcs	.+6      	; 0xa0e <__mulsf3+0x12>
     a08:	95 23       	and	r25, r21
     a0a:	09 f0       	breq	.+2      	; 0xa0e <__mulsf3+0x12>
     a0c:	a6 cf       	rjmp	.-180    	; 0x95a <__fp_inf>
     a0e:	ab cf       	rjmp	.-170    	; 0x966 <__fp_nan>
     a10:	11 24       	eor	r1, r1
     a12:	ee cf       	rjmp	.-36     	; 0x9f0 <__fp_szero>

00000a14 <__mulsf3x>:
     a14:	ca df       	rcall	.-108    	; 0x9aa <__fp_split3>
     a16:	a0 f3       	brcs	.-24     	; 0xa00 <__mulsf3+0x4>

00000a18 <__mulsf3_pse>:
     a18:	95 9f       	mul	r25, r21
     a1a:	d1 f3       	breq	.-12     	; 0xa10 <__mulsf3+0x14>
     a1c:	95 0f       	add	r25, r21
     a1e:	50 e0       	ldi	r21, 0x00	; 0
     a20:	55 1f       	adc	r21, r21
     a22:	62 9f       	mul	r22, r18
     a24:	f0 01       	movw	r30, r0
     a26:	72 9f       	mul	r23, r18
     a28:	bb 27       	eor	r27, r27
     a2a:	f0 0d       	add	r31, r0
     a2c:	b1 1d       	adc	r27, r1
     a2e:	63 9f       	mul	r22, r19
     a30:	aa 27       	eor	r26, r26
     a32:	f0 0d       	add	r31, r0
     a34:	b1 1d       	adc	r27, r1
     a36:	aa 1f       	adc	r26, r26
     a38:	64 9f       	mul	r22, r20
     a3a:	66 27       	eor	r22, r22
     a3c:	b0 0d       	add	r27, r0
     a3e:	a1 1d       	adc	r26, r1
     a40:	66 1f       	adc	r22, r22
     a42:	82 9f       	mul	r24, r18
     a44:	22 27       	eor	r18, r18
     a46:	b0 0d       	add	r27, r0
     a48:	a1 1d       	adc	r26, r1
     a4a:	62 1f       	adc	r22, r18
     a4c:	73 9f       	mul	r23, r19
     a4e:	b0 0d       	add	r27, r0
     a50:	a1 1d       	adc	r26, r1
     a52:	62 1f       	adc	r22, r18
     a54:	83 9f       	mul	r24, r19
     a56:	a0 0d       	add	r26, r0
     a58:	61 1d       	adc	r22, r1
     a5a:	22 1f       	adc	r18, r18
     a5c:	74 9f       	mul	r23, r20
     a5e:	33 27       	eor	r19, r19
     a60:	a0 0d       	add	r26, r0
     a62:	61 1d       	adc	r22, r1
     a64:	23 1f       	adc	r18, r19
     a66:	84 9f       	mul	r24, r20
     a68:	60 0d       	add	r22, r0
     a6a:	21 1d       	adc	r18, r1
     a6c:	82 2f       	mov	r24, r18
     a6e:	76 2f       	mov	r23, r22
     a70:	6a 2f       	mov	r22, r26
     a72:	11 24       	eor	r1, r1
     a74:	9f 57       	subi	r25, 0x7F	; 127
     a76:	50 40       	sbci	r21, 0x00	; 0
     a78:	8a f0       	brmi	.+34     	; 0xa9c <__mulsf3_pse+0x84>
     a7a:	e1 f0       	breq	.+56     	; 0xab4 <__mulsf3_pse+0x9c>
     a7c:	88 23       	and	r24, r24
     a7e:	4a f0       	brmi	.+18     	; 0xa92 <__mulsf3_pse+0x7a>
     a80:	ee 0f       	add	r30, r30
     a82:	ff 1f       	adc	r31, r31
     a84:	bb 1f       	adc	r27, r27
     a86:	66 1f       	adc	r22, r22
     a88:	77 1f       	adc	r23, r23
     a8a:	88 1f       	adc	r24, r24
     a8c:	91 50       	subi	r25, 0x01	; 1
     a8e:	50 40       	sbci	r21, 0x00	; 0
     a90:	a9 f7       	brne	.-22     	; 0xa7c <__mulsf3_pse+0x64>
     a92:	9e 3f       	cpi	r25, 0xFE	; 254
     a94:	51 05       	cpc	r21, r1
     a96:	70 f0       	brcs	.+28     	; 0xab4 <__mulsf3_pse+0x9c>
     a98:	60 cf       	rjmp	.-320    	; 0x95a <__fp_inf>
     a9a:	aa cf       	rjmp	.-172    	; 0x9f0 <__fp_szero>
     a9c:	5f 3f       	cpi	r21, 0xFF	; 255
     a9e:	ec f3       	brlt	.-6      	; 0xa9a <__mulsf3_pse+0x82>
     aa0:	98 3e       	cpi	r25, 0xE8	; 232
     aa2:	dc f3       	brlt	.-10     	; 0xa9a <__mulsf3_pse+0x82>
     aa4:	86 95       	lsr	r24
     aa6:	77 95       	ror	r23
     aa8:	67 95       	ror	r22
     aaa:	b7 95       	ror	r27
     aac:	f7 95       	ror	r31
     aae:	e7 95       	ror	r30
     ab0:	9f 5f       	subi	r25, 0xFF	; 255
     ab2:	c1 f7       	brne	.-16     	; 0xaa4 <__mulsf3_pse+0x8c>
     ab4:	fe 2b       	or	r31, r30
     ab6:	88 0f       	add	r24, r24
     ab8:	91 1d       	adc	r25, r1
     aba:	96 95       	lsr	r25
     abc:	87 95       	ror	r24
     abe:	97 f9       	bld	r25, 7
     ac0:	08 95       	ret

00000ac2 <__divmodhi4>:
     ac2:	97 fb       	bst	r25, 7
     ac4:	07 2e       	mov	r0, r23
     ac6:	16 f4       	brtc	.+4      	; 0xacc <__divmodhi4+0xa>
     ac8:	00 94       	com	r0
     aca:	06 d0       	rcall	.+12     	; 0xad8 <__divmodhi4_neg1>
     acc:	77 fd       	sbrc	r23, 7
     ace:	08 d0       	rcall	.+16     	; 0xae0 <__divmodhi4_neg2>
     ad0:	14 d0       	rcall	.+40     	; 0xafa <__udivmodhi4>
     ad2:	07 fc       	sbrc	r0, 7
     ad4:	05 d0       	rcall	.+10     	; 0xae0 <__divmodhi4_neg2>
     ad6:	3e f4       	brtc	.+14     	; 0xae6 <__divmodhi4_exit>

00000ad8 <__divmodhi4_neg1>:
     ad8:	90 95       	com	r25
     ada:	81 95       	neg	r24
     adc:	9f 4f       	sbci	r25, 0xFF	; 255
     ade:	08 95       	ret

00000ae0 <__divmodhi4_neg2>:
     ae0:	70 95       	com	r23
     ae2:	61 95       	neg	r22
     ae4:	7f 4f       	sbci	r23, 0xFF	; 255

00000ae6 <__divmodhi4_exit>:
     ae6:	08 95       	ret

00000ae8 <__tablejump2__>:
     ae8:	ee 0f       	add	r30, r30
     aea:	ff 1f       	adc	r31, r31
     aec:	00 24       	eor	r0, r0
     aee:	00 1c       	adc	r0, r0
     af0:	0b be       	out	0x3b, r0	; 59
     af2:	07 90       	elpm	r0, Z+
     af4:	f6 91       	elpm	r31, Z
     af6:	e0 2d       	mov	r30, r0
     af8:	09 94       	ijmp

00000afa <__udivmodhi4>:
     afa:	aa 1b       	sub	r26, r26
     afc:	bb 1b       	sub	r27, r27
     afe:	51 e1       	ldi	r21, 0x11	; 17
     b00:	07 c0       	rjmp	.+14     	; 0xb10 <__udivmodhi4_ep>

00000b02 <__udivmodhi4_loop>:
     b02:	aa 1f       	adc	r26, r26
     b04:	bb 1f       	adc	r27, r27
     b06:	a6 17       	cp	r26, r22
     b08:	b7 07       	cpc	r27, r23
     b0a:	10 f0       	brcs	.+4      	; 0xb10 <__udivmodhi4_ep>
     b0c:	a6 1b       	sub	r26, r22
     b0e:	b7 0b       	sbc	r27, r23

00000b10 <__udivmodhi4_ep>:
     b10:	88 1f       	adc	r24, r24
     b12:	99 1f       	adc	r25, r25
     b14:	5a 95       	dec	r21
     b16:	a9 f7       	brne	.-22     	; 0xb02 <__udivmodhi4_loop>
     b18:	80 95       	com	r24
     b1a:	90 95       	com	r25
     b1c:	bc 01       	movw	r22, r24
     b1e:	cd 01       	movw	r24, r26
     b20:	08 95       	ret

00000b22 <printf>:
     b22:	cf 93       	push	r28
     b24:	df 93       	push	r29
     b26:	cd b7       	in	r28, 0x3d	; 61
     b28:	de b7       	in	r29, 0x3e	; 62
     b2a:	ae 01       	movw	r20, r28
     b2c:	4b 5f       	subi	r20, 0xFB	; 251
     b2e:	5f 4f       	sbci	r21, 0xFF	; 255
     b30:	fa 01       	movw	r30, r20
     b32:	61 91       	ld	r22, Z+
     b34:	71 91       	ld	r23, Z+
     b36:	af 01       	movw	r20, r30
     b38:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <__iob+0x2>
     b3c:	90 91 52 01 	lds	r25, 0x0152	; 0x800152 <__iob+0x3>
     b40:	03 d0       	rcall	.+6      	; 0xb48 <vfprintf>
     b42:	df 91       	pop	r29
     b44:	cf 91       	pop	r28
     b46:	08 95       	ret

00000b48 <vfprintf>:
     b48:	2f 92       	push	r2
     b4a:	3f 92       	push	r3
     b4c:	4f 92       	push	r4
     b4e:	5f 92       	push	r5
     b50:	6f 92       	push	r6
     b52:	7f 92       	push	r7
     b54:	8f 92       	push	r8
     b56:	9f 92       	push	r9
     b58:	af 92       	push	r10
     b5a:	bf 92       	push	r11
     b5c:	cf 92       	push	r12
     b5e:	df 92       	push	r13
     b60:	ef 92       	push	r14
     b62:	ff 92       	push	r15
     b64:	0f 93       	push	r16
     b66:	1f 93       	push	r17
     b68:	cf 93       	push	r28
     b6a:	df 93       	push	r29
     b6c:	cd b7       	in	r28, 0x3d	; 61
     b6e:	de b7       	in	r29, 0x3e	; 62
     b70:	2b 97       	sbiw	r28, 0x0b	; 11
     b72:	0f b6       	in	r0, 0x3f	; 63
     b74:	f8 94       	cli
     b76:	de bf       	out	0x3e, r29	; 62
     b78:	0f be       	out	0x3f, r0	; 63
     b7a:	cd bf       	out	0x3d, r28	; 61
     b7c:	6c 01       	movw	r12, r24
     b7e:	7b 01       	movw	r14, r22
     b80:	8a 01       	movw	r16, r20
     b82:	fc 01       	movw	r30, r24
     b84:	17 82       	std	Z+7, r1	; 0x07
     b86:	16 82       	std	Z+6, r1	; 0x06
     b88:	83 81       	ldd	r24, Z+3	; 0x03
     b8a:	81 ff       	sbrs	r24, 1
     b8c:	bf c1       	rjmp	.+894    	; 0xf0c <vfprintf+0x3c4>
     b8e:	ce 01       	movw	r24, r28
     b90:	01 96       	adiw	r24, 0x01	; 1
     b92:	3c 01       	movw	r6, r24
     b94:	f6 01       	movw	r30, r12
     b96:	93 81       	ldd	r25, Z+3	; 0x03
     b98:	f7 01       	movw	r30, r14
     b9a:	93 fd       	sbrc	r25, 3
     b9c:	85 91       	lpm	r24, Z+
     b9e:	93 ff       	sbrs	r25, 3
     ba0:	81 91       	ld	r24, Z+
     ba2:	7f 01       	movw	r14, r30
     ba4:	88 23       	and	r24, r24
     ba6:	09 f4       	brne	.+2      	; 0xbaa <vfprintf+0x62>
     ba8:	ad c1       	rjmp	.+858    	; 0xf04 <vfprintf+0x3bc>
     baa:	85 32       	cpi	r24, 0x25	; 37
     bac:	39 f4       	brne	.+14     	; 0xbbc <vfprintf+0x74>
     bae:	93 fd       	sbrc	r25, 3
     bb0:	85 91       	lpm	r24, Z+
     bb2:	93 ff       	sbrs	r25, 3
     bb4:	81 91       	ld	r24, Z+
     bb6:	7f 01       	movw	r14, r30
     bb8:	85 32       	cpi	r24, 0x25	; 37
     bba:	21 f4       	brne	.+8      	; 0xbc4 <vfprintf+0x7c>
     bbc:	b6 01       	movw	r22, r12
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	d6 d1       	rcall	.+940    	; 0xf6e <fputc>
     bc2:	e8 cf       	rjmp	.-48     	; 0xb94 <vfprintf+0x4c>
     bc4:	91 2c       	mov	r9, r1
     bc6:	21 2c       	mov	r2, r1
     bc8:	31 2c       	mov	r3, r1
     bca:	ff e1       	ldi	r31, 0x1F	; 31
     bcc:	f3 15       	cp	r31, r3
     bce:	d8 f0       	brcs	.+54     	; 0xc06 <vfprintf+0xbe>
     bd0:	8b 32       	cpi	r24, 0x2B	; 43
     bd2:	79 f0       	breq	.+30     	; 0xbf2 <vfprintf+0xaa>
     bd4:	38 f4       	brcc	.+14     	; 0xbe4 <vfprintf+0x9c>
     bd6:	80 32       	cpi	r24, 0x20	; 32
     bd8:	79 f0       	breq	.+30     	; 0xbf8 <vfprintf+0xb0>
     bda:	83 32       	cpi	r24, 0x23	; 35
     bdc:	a1 f4       	brne	.+40     	; 0xc06 <vfprintf+0xbe>
     bde:	23 2d       	mov	r18, r3
     be0:	20 61       	ori	r18, 0x10	; 16
     be2:	1d c0       	rjmp	.+58     	; 0xc1e <vfprintf+0xd6>
     be4:	8d 32       	cpi	r24, 0x2D	; 45
     be6:	61 f0       	breq	.+24     	; 0xc00 <vfprintf+0xb8>
     be8:	80 33       	cpi	r24, 0x30	; 48
     bea:	69 f4       	brne	.+26     	; 0xc06 <vfprintf+0xbe>
     bec:	23 2d       	mov	r18, r3
     bee:	21 60       	ori	r18, 0x01	; 1
     bf0:	16 c0       	rjmp	.+44     	; 0xc1e <vfprintf+0xd6>
     bf2:	83 2d       	mov	r24, r3
     bf4:	82 60       	ori	r24, 0x02	; 2
     bf6:	38 2e       	mov	r3, r24
     bf8:	e3 2d       	mov	r30, r3
     bfa:	e4 60       	ori	r30, 0x04	; 4
     bfc:	3e 2e       	mov	r3, r30
     bfe:	2a c0       	rjmp	.+84     	; 0xc54 <vfprintf+0x10c>
     c00:	f3 2d       	mov	r31, r3
     c02:	f8 60       	ori	r31, 0x08	; 8
     c04:	1d c0       	rjmp	.+58     	; 0xc40 <vfprintf+0xf8>
     c06:	37 fc       	sbrc	r3, 7
     c08:	2d c0       	rjmp	.+90     	; 0xc64 <vfprintf+0x11c>
     c0a:	20 ed       	ldi	r18, 0xD0	; 208
     c0c:	28 0f       	add	r18, r24
     c0e:	2a 30       	cpi	r18, 0x0A	; 10
     c10:	40 f0       	brcs	.+16     	; 0xc22 <vfprintf+0xda>
     c12:	8e 32       	cpi	r24, 0x2E	; 46
     c14:	b9 f4       	brne	.+46     	; 0xc44 <vfprintf+0xfc>
     c16:	36 fc       	sbrc	r3, 6
     c18:	75 c1       	rjmp	.+746    	; 0xf04 <vfprintf+0x3bc>
     c1a:	23 2d       	mov	r18, r3
     c1c:	20 64       	ori	r18, 0x40	; 64
     c1e:	32 2e       	mov	r3, r18
     c20:	19 c0       	rjmp	.+50     	; 0xc54 <vfprintf+0x10c>
     c22:	36 fe       	sbrs	r3, 6
     c24:	06 c0       	rjmp	.+12     	; 0xc32 <vfprintf+0xea>
     c26:	8a e0       	ldi	r24, 0x0A	; 10
     c28:	98 9e       	mul	r9, r24
     c2a:	20 0d       	add	r18, r0
     c2c:	11 24       	eor	r1, r1
     c2e:	92 2e       	mov	r9, r18
     c30:	11 c0       	rjmp	.+34     	; 0xc54 <vfprintf+0x10c>
     c32:	ea e0       	ldi	r30, 0x0A	; 10
     c34:	2e 9e       	mul	r2, r30
     c36:	20 0d       	add	r18, r0
     c38:	11 24       	eor	r1, r1
     c3a:	22 2e       	mov	r2, r18
     c3c:	f3 2d       	mov	r31, r3
     c3e:	f0 62       	ori	r31, 0x20	; 32
     c40:	3f 2e       	mov	r3, r31
     c42:	08 c0       	rjmp	.+16     	; 0xc54 <vfprintf+0x10c>
     c44:	8c 36       	cpi	r24, 0x6C	; 108
     c46:	21 f4       	brne	.+8      	; 0xc50 <vfprintf+0x108>
     c48:	83 2d       	mov	r24, r3
     c4a:	80 68       	ori	r24, 0x80	; 128
     c4c:	38 2e       	mov	r3, r24
     c4e:	02 c0       	rjmp	.+4      	; 0xc54 <vfprintf+0x10c>
     c50:	88 36       	cpi	r24, 0x68	; 104
     c52:	41 f4       	brne	.+16     	; 0xc64 <vfprintf+0x11c>
     c54:	f7 01       	movw	r30, r14
     c56:	93 fd       	sbrc	r25, 3
     c58:	85 91       	lpm	r24, Z+
     c5a:	93 ff       	sbrs	r25, 3
     c5c:	81 91       	ld	r24, Z+
     c5e:	7f 01       	movw	r14, r30
     c60:	81 11       	cpse	r24, r1
     c62:	b3 cf       	rjmp	.-154    	; 0xbca <vfprintf+0x82>
     c64:	98 2f       	mov	r25, r24
     c66:	9f 7d       	andi	r25, 0xDF	; 223
     c68:	95 54       	subi	r25, 0x45	; 69
     c6a:	93 30       	cpi	r25, 0x03	; 3
     c6c:	28 f4       	brcc	.+10     	; 0xc78 <vfprintf+0x130>
     c6e:	0c 5f       	subi	r16, 0xFC	; 252
     c70:	1f 4f       	sbci	r17, 0xFF	; 255
     c72:	9f e3       	ldi	r25, 0x3F	; 63
     c74:	99 83       	std	Y+1, r25	; 0x01
     c76:	0d c0       	rjmp	.+26     	; 0xc92 <vfprintf+0x14a>
     c78:	83 36       	cpi	r24, 0x63	; 99
     c7a:	31 f0       	breq	.+12     	; 0xc88 <vfprintf+0x140>
     c7c:	83 37       	cpi	r24, 0x73	; 115
     c7e:	71 f0       	breq	.+28     	; 0xc9c <vfprintf+0x154>
     c80:	83 35       	cpi	r24, 0x53	; 83
     c82:	09 f0       	breq	.+2      	; 0xc86 <vfprintf+0x13e>
     c84:	55 c0       	rjmp	.+170    	; 0xd30 <vfprintf+0x1e8>
     c86:	20 c0       	rjmp	.+64     	; 0xcc8 <vfprintf+0x180>
     c88:	f8 01       	movw	r30, r16
     c8a:	80 81       	ld	r24, Z
     c8c:	89 83       	std	Y+1, r24	; 0x01
     c8e:	0e 5f       	subi	r16, 0xFE	; 254
     c90:	1f 4f       	sbci	r17, 0xFF	; 255
     c92:	88 24       	eor	r8, r8
     c94:	83 94       	inc	r8
     c96:	91 2c       	mov	r9, r1
     c98:	53 01       	movw	r10, r6
     c9a:	12 c0       	rjmp	.+36     	; 0xcc0 <vfprintf+0x178>
     c9c:	28 01       	movw	r4, r16
     c9e:	f2 e0       	ldi	r31, 0x02	; 2
     ca0:	4f 0e       	add	r4, r31
     ca2:	51 1c       	adc	r5, r1
     ca4:	f8 01       	movw	r30, r16
     ca6:	a0 80       	ld	r10, Z
     ca8:	b1 80       	ldd	r11, Z+1	; 0x01
     caa:	36 fe       	sbrs	r3, 6
     cac:	03 c0       	rjmp	.+6      	; 0xcb4 <vfprintf+0x16c>
     cae:	69 2d       	mov	r22, r9
     cb0:	70 e0       	ldi	r23, 0x00	; 0
     cb2:	02 c0       	rjmp	.+4      	; 0xcb8 <vfprintf+0x170>
     cb4:	6f ef       	ldi	r22, 0xFF	; 255
     cb6:	7f ef       	ldi	r23, 0xFF	; 255
     cb8:	c5 01       	movw	r24, r10
     cba:	4e d1       	rcall	.+668    	; 0xf58 <strnlen>
     cbc:	4c 01       	movw	r8, r24
     cbe:	82 01       	movw	r16, r4
     cc0:	f3 2d       	mov	r31, r3
     cc2:	ff 77       	andi	r31, 0x7F	; 127
     cc4:	3f 2e       	mov	r3, r31
     cc6:	15 c0       	rjmp	.+42     	; 0xcf2 <vfprintf+0x1aa>
     cc8:	28 01       	movw	r4, r16
     cca:	22 e0       	ldi	r18, 0x02	; 2
     ccc:	42 0e       	add	r4, r18
     cce:	51 1c       	adc	r5, r1
     cd0:	f8 01       	movw	r30, r16
     cd2:	a0 80       	ld	r10, Z
     cd4:	b1 80       	ldd	r11, Z+1	; 0x01
     cd6:	36 fe       	sbrs	r3, 6
     cd8:	03 c0       	rjmp	.+6      	; 0xce0 <vfprintf+0x198>
     cda:	69 2d       	mov	r22, r9
     cdc:	70 e0       	ldi	r23, 0x00	; 0
     cde:	02 c0       	rjmp	.+4      	; 0xce4 <vfprintf+0x19c>
     ce0:	6f ef       	ldi	r22, 0xFF	; 255
     ce2:	7f ef       	ldi	r23, 0xFF	; 255
     ce4:	c5 01       	movw	r24, r10
     ce6:	2d d1       	rcall	.+602    	; 0xf42 <strnlen_P>
     ce8:	4c 01       	movw	r8, r24
     cea:	f3 2d       	mov	r31, r3
     cec:	f0 68       	ori	r31, 0x80	; 128
     cee:	3f 2e       	mov	r3, r31
     cf0:	82 01       	movw	r16, r4
     cf2:	33 fc       	sbrc	r3, 3
     cf4:	19 c0       	rjmp	.+50     	; 0xd28 <vfprintf+0x1e0>
     cf6:	82 2d       	mov	r24, r2
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	88 16       	cp	r8, r24
     cfc:	99 06       	cpc	r9, r25
     cfe:	a0 f4       	brcc	.+40     	; 0xd28 <vfprintf+0x1e0>
     d00:	b6 01       	movw	r22, r12
     d02:	80 e2       	ldi	r24, 0x20	; 32
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	33 d1       	rcall	.+614    	; 0xf6e <fputc>
     d08:	2a 94       	dec	r2
     d0a:	f5 cf       	rjmp	.-22     	; 0xcf6 <vfprintf+0x1ae>
     d0c:	f5 01       	movw	r30, r10
     d0e:	37 fc       	sbrc	r3, 7
     d10:	85 91       	lpm	r24, Z+
     d12:	37 fe       	sbrs	r3, 7
     d14:	81 91       	ld	r24, Z+
     d16:	5f 01       	movw	r10, r30
     d18:	b6 01       	movw	r22, r12
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	28 d1       	rcall	.+592    	; 0xf6e <fputc>
     d1e:	21 10       	cpse	r2, r1
     d20:	2a 94       	dec	r2
     d22:	21 e0       	ldi	r18, 0x01	; 1
     d24:	82 1a       	sub	r8, r18
     d26:	91 08       	sbc	r9, r1
     d28:	81 14       	cp	r8, r1
     d2a:	91 04       	cpc	r9, r1
     d2c:	79 f7       	brne	.-34     	; 0xd0c <vfprintf+0x1c4>
     d2e:	e1 c0       	rjmp	.+450    	; 0xef2 <vfprintf+0x3aa>
     d30:	84 36       	cpi	r24, 0x64	; 100
     d32:	11 f0       	breq	.+4      	; 0xd38 <vfprintf+0x1f0>
     d34:	89 36       	cpi	r24, 0x69	; 105
     d36:	39 f5       	brne	.+78     	; 0xd86 <vfprintf+0x23e>
     d38:	f8 01       	movw	r30, r16
     d3a:	37 fe       	sbrs	r3, 7
     d3c:	07 c0       	rjmp	.+14     	; 0xd4c <vfprintf+0x204>
     d3e:	60 81       	ld	r22, Z
     d40:	71 81       	ldd	r23, Z+1	; 0x01
     d42:	82 81       	ldd	r24, Z+2	; 0x02
     d44:	93 81       	ldd	r25, Z+3	; 0x03
     d46:	0c 5f       	subi	r16, 0xFC	; 252
     d48:	1f 4f       	sbci	r17, 0xFF	; 255
     d4a:	08 c0       	rjmp	.+16     	; 0xd5c <vfprintf+0x214>
     d4c:	60 81       	ld	r22, Z
     d4e:	71 81       	ldd	r23, Z+1	; 0x01
     d50:	07 2e       	mov	r0, r23
     d52:	00 0c       	add	r0, r0
     d54:	88 0b       	sbc	r24, r24
     d56:	99 0b       	sbc	r25, r25
     d58:	0e 5f       	subi	r16, 0xFE	; 254
     d5a:	1f 4f       	sbci	r17, 0xFF	; 255
     d5c:	f3 2d       	mov	r31, r3
     d5e:	ff 76       	andi	r31, 0x6F	; 111
     d60:	3f 2e       	mov	r3, r31
     d62:	97 ff       	sbrs	r25, 7
     d64:	09 c0       	rjmp	.+18     	; 0xd78 <vfprintf+0x230>
     d66:	90 95       	com	r25
     d68:	80 95       	com	r24
     d6a:	70 95       	com	r23
     d6c:	61 95       	neg	r22
     d6e:	7f 4f       	sbci	r23, 0xFF	; 255
     d70:	8f 4f       	sbci	r24, 0xFF	; 255
     d72:	9f 4f       	sbci	r25, 0xFF	; 255
     d74:	f0 68       	ori	r31, 0x80	; 128
     d76:	3f 2e       	mov	r3, r31
     d78:	2a e0       	ldi	r18, 0x0A	; 10
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	a3 01       	movw	r20, r6
     d7e:	33 d1       	rcall	.+614    	; 0xfe6 <__ultoa_invert>
     d80:	88 2e       	mov	r8, r24
     d82:	86 18       	sub	r8, r6
     d84:	44 c0       	rjmp	.+136    	; 0xe0e <vfprintf+0x2c6>
     d86:	85 37       	cpi	r24, 0x75	; 117
     d88:	31 f4       	brne	.+12     	; 0xd96 <vfprintf+0x24e>
     d8a:	23 2d       	mov	r18, r3
     d8c:	2f 7e       	andi	r18, 0xEF	; 239
     d8e:	b2 2e       	mov	r11, r18
     d90:	2a e0       	ldi	r18, 0x0A	; 10
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	25 c0       	rjmp	.+74     	; 0xde0 <vfprintf+0x298>
     d96:	93 2d       	mov	r25, r3
     d98:	99 7f       	andi	r25, 0xF9	; 249
     d9a:	b9 2e       	mov	r11, r25
     d9c:	8f 36       	cpi	r24, 0x6F	; 111
     d9e:	c1 f0       	breq	.+48     	; 0xdd0 <vfprintf+0x288>
     da0:	18 f4       	brcc	.+6      	; 0xda8 <vfprintf+0x260>
     da2:	88 35       	cpi	r24, 0x58	; 88
     da4:	79 f0       	breq	.+30     	; 0xdc4 <vfprintf+0x27c>
     da6:	ae c0       	rjmp	.+348    	; 0xf04 <vfprintf+0x3bc>
     da8:	80 37       	cpi	r24, 0x70	; 112
     daa:	19 f0       	breq	.+6      	; 0xdb2 <vfprintf+0x26a>
     dac:	88 37       	cpi	r24, 0x78	; 120
     dae:	21 f0       	breq	.+8      	; 0xdb8 <vfprintf+0x270>
     db0:	a9 c0       	rjmp	.+338    	; 0xf04 <vfprintf+0x3bc>
     db2:	e9 2f       	mov	r30, r25
     db4:	e0 61       	ori	r30, 0x10	; 16
     db6:	be 2e       	mov	r11, r30
     db8:	b4 fe       	sbrs	r11, 4
     dba:	0d c0       	rjmp	.+26     	; 0xdd6 <vfprintf+0x28e>
     dbc:	fb 2d       	mov	r31, r11
     dbe:	f4 60       	ori	r31, 0x04	; 4
     dc0:	bf 2e       	mov	r11, r31
     dc2:	09 c0       	rjmp	.+18     	; 0xdd6 <vfprintf+0x28e>
     dc4:	34 fe       	sbrs	r3, 4
     dc6:	0a c0       	rjmp	.+20     	; 0xddc <vfprintf+0x294>
     dc8:	29 2f       	mov	r18, r25
     dca:	26 60       	ori	r18, 0x06	; 6
     dcc:	b2 2e       	mov	r11, r18
     dce:	06 c0       	rjmp	.+12     	; 0xddc <vfprintf+0x294>
     dd0:	28 e0       	ldi	r18, 0x08	; 8
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	05 c0       	rjmp	.+10     	; 0xde0 <vfprintf+0x298>
     dd6:	20 e1       	ldi	r18, 0x10	; 16
     dd8:	30 e0       	ldi	r19, 0x00	; 0
     dda:	02 c0       	rjmp	.+4      	; 0xde0 <vfprintf+0x298>
     ddc:	20 e1       	ldi	r18, 0x10	; 16
     dde:	32 e0       	ldi	r19, 0x02	; 2
     de0:	f8 01       	movw	r30, r16
     de2:	b7 fe       	sbrs	r11, 7
     de4:	07 c0       	rjmp	.+14     	; 0xdf4 <vfprintf+0x2ac>
     de6:	60 81       	ld	r22, Z
     de8:	71 81       	ldd	r23, Z+1	; 0x01
     dea:	82 81       	ldd	r24, Z+2	; 0x02
     dec:	93 81       	ldd	r25, Z+3	; 0x03
     dee:	0c 5f       	subi	r16, 0xFC	; 252
     df0:	1f 4f       	sbci	r17, 0xFF	; 255
     df2:	06 c0       	rjmp	.+12     	; 0xe00 <vfprintf+0x2b8>
     df4:	60 81       	ld	r22, Z
     df6:	71 81       	ldd	r23, Z+1	; 0x01
     df8:	80 e0       	ldi	r24, 0x00	; 0
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	0e 5f       	subi	r16, 0xFE	; 254
     dfe:	1f 4f       	sbci	r17, 0xFF	; 255
     e00:	a3 01       	movw	r20, r6
     e02:	f1 d0       	rcall	.+482    	; 0xfe6 <__ultoa_invert>
     e04:	88 2e       	mov	r8, r24
     e06:	86 18       	sub	r8, r6
     e08:	fb 2d       	mov	r31, r11
     e0a:	ff 77       	andi	r31, 0x7F	; 127
     e0c:	3f 2e       	mov	r3, r31
     e0e:	36 fe       	sbrs	r3, 6
     e10:	0d c0       	rjmp	.+26     	; 0xe2c <vfprintf+0x2e4>
     e12:	23 2d       	mov	r18, r3
     e14:	2e 7f       	andi	r18, 0xFE	; 254
     e16:	a2 2e       	mov	r10, r18
     e18:	89 14       	cp	r8, r9
     e1a:	58 f4       	brcc	.+22     	; 0xe32 <vfprintf+0x2ea>
     e1c:	34 fe       	sbrs	r3, 4
     e1e:	0b c0       	rjmp	.+22     	; 0xe36 <vfprintf+0x2ee>
     e20:	32 fc       	sbrc	r3, 2
     e22:	09 c0       	rjmp	.+18     	; 0xe36 <vfprintf+0x2ee>
     e24:	83 2d       	mov	r24, r3
     e26:	8e 7e       	andi	r24, 0xEE	; 238
     e28:	a8 2e       	mov	r10, r24
     e2a:	05 c0       	rjmp	.+10     	; 0xe36 <vfprintf+0x2ee>
     e2c:	b8 2c       	mov	r11, r8
     e2e:	a3 2c       	mov	r10, r3
     e30:	03 c0       	rjmp	.+6      	; 0xe38 <vfprintf+0x2f0>
     e32:	b8 2c       	mov	r11, r8
     e34:	01 c0       	rjmp	.+2      	; 0xe38 <vfprintf+0x2f0>
     e36:	b9 2c       	mov	r11, r9
     e38:	a4 fe       	sbrs	r10, 4
     e3a:	0f c0       	rjmp	.+30     	; 0xe5a <vfprintf+0x312>
     e3c:	fe 01       	movw	r30, r28
     e3e:	e8 0d       	add	r30, r8
     e40:	f1 1d       	adc	r31, r1
     e42:	80 81       	ld	r24, Z
     e44:	80 33       	cpi	r24, 0x30	; 48
     e46:	21 f4       	brne	.+8      	; 0xe50 <vfprintf+0x308>
     e48:	9a 2d       	mov	r25, r10
     e4a:	99 7e       	andi	r25, 0xE9	; 233
     e4c:	a9 2e       	mov	r10, r25
     e4e:	09 c0       	rjmp	.+18     	; 0xe62 <vfprintf+0x31a>
     e50:	a2 fe       	sbrs	r10, 2
     e52:	06 c0       	rjmp	.+12     	; 0xe60 <vfprintf+0x318>
     e54:	b3 94       	inc	r11
     e56:	b3 94       	inc	r11
     e58:	04 c0       	rjmp	.+8      	; 0xe62 <vfprintf+0x31a>
     e5a:	8a 2d       	mov	r24, r10
     e5c:	86 78       	andi	r24, 0x86	; 134
     e5e:	09 f0       	breq	.+2      	; 0xe62 <vfprintf+0x31a>
     e60:	b3 94       	inc	r11
     e62:	a3 fc       	sbrc	r10, 3
     e64:	10 c0       	rjmp	.+32     	; 0xe86 <vfprintf+0x33e>
     e66:	a0 fe       	sbrs	r10, 0
     e68:	06 c0       	rjmp	.+12     	; 0xe76 <vfprintf+0x32e>
     e6a:	b2 14       	cp	r11, r2
     e6c:	80 f4       	brcc	.+32     	; 0xe8e <vfprintf+0x346>
     e6e:	28 0c       	add	r2, r8
     e70:	92 2c       	mov	r9, r2
     e72:	9b 18       	sub	r9, r11
     e74:	0d c0       	rjmp	.+26     	; 0xe90 <vfprintf+0x348>
     e76:	b2 14       	cp	r11, r2
     e78:	58 f4       	brcc	.+22     	; 0xe90 <vfprintf+0x348>
     e7a:	b6 01       	movw	r22, r12
     e7c:	80 e2       	ldi	r24, 0x20	; 32
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	76 d0       	rcall	.+236    	; 0xf6e <fputc>
     e82:	b3 94       	inc	r11
     e84:	f8 cf       	rjmp	.-16     	; 0xe76 <vfprintf+0x32e>
     e86:	b2 14       	cp	r11, r2
     e88:	18 f4       	brcc	.+6      	; 0xe90 <vfprintf+0x348>
     e8a:	2b 18       	sub	r2, r11
     e8c:	02 c0       	rjmp	.+4      	; 0xe92 <vfprintf+0x34a>
     e8e:	98 2c       	mov	r9, r8
     e90:	21 2c       	mov	r2, r1
     e92:	a4 fe       	sbrs	r10, 4
     e94:	0f c0       	rjmp	.+30     	; 0xeb4 <vfprintf+0x36c>
     e96:	b6 01       	movw	r22, r12
     e98:	80 e3       	ldi	r24, 0x30	; 48
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	68 d0       	rcall	.+208    	; 0xf6e <fputc>
     e9e:	a2 fe       	sbrs	r10, 2
     ea0:	16 c0       	rjmp	.+44     	; 0xece <vfprintf+0x386>
     ea2:	a1 fc       	sbrc	r10, 1
     ea4:	03 c0       	rjmp	.+6      	; 0xeac <vfprintf+0x364>
     ea6:	88 e7       	ldi	r24, 0x78	; 120
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	02 c0       	rjmp	.+4      	; 0xeb0 <vfprintf+0x368>
     eac:	88 e5       	ldi	r24, 0x58	; 88
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	b6 01       	movw	r22, r12
     eb2:	0c c0       	rjmp	.+24     	; 0xecc <vfprintf+0x384>
     eb4:	8a 2d       	mov	r24, r10
     eb6:	86 78       	andi	r24, 0x86	; 134
     eb8:	51 f0       	breq	.+20     	; 0xece <vfprintf+0x386>
     eba:	a1 fe       	sbrs	r10, 1
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <vfprintf+0x37a>
     ebe:	8b e2       	ldi	r24, 0x2B	; 43
     ec0:	01 c0       	rjmp	.+2      	; 0xec4 <vfprintf+0x37c>
     ec2:	80 e2       	ldi	r24, 0x20	; 32
     ec4:	a7 fc       	sbrc	r10, 7
     ec6:	8d e2       	ldi	r24, 0x2D	; 45
     ec8:	b6 01       	movw	r22, r12
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	50 d0       	rcall	.+160    	; 0xf6e <fputc>
     ece:	89 14       	cp	r8, r9
     ed0:	30 f4       	brcc	.+12     	; 0xede <vfprintf+0x396>
     ed2:	b6 01       	movw	r22, r12
     ed4:	80 e3       	ldi	r24, 0x30	; 48
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	4a d0       	rcall	.+148    	; 0xf6e <fputc>
     eda:	9a 94       	dec	r9
     edc:	f8 cf       	rjmp	.-16     	; 0xece <vfprintf+0x386>
     ede:	8a 94       	dec	r8
     ee0:	f3 01       	movw	r30, r6
     ee2:	e8 0d       	add	r30, r8
     ee4:	f1 1d       	adc	r31, r1
     ee6:	80 81       	ld	r24, Z
     ee8:	b6 01       	movw	r22, r12
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	40 d0       	rcall	.+128    	; 0xf6e <fputc>
     eee:	81 10       	cpse	r8, r1
     ef0:	f6 cf       	rjmp	.-20     	; 0xede <vfprintf+0x396>
     ef2:	22 20       	and	r2, r2
     ef4:	09 f4       	brne	.+2      	; 0xef8 <vfprintf+0x3b0>
     ef6:	4e ce       	rjmp	.-868    	; 0xb94 <vfprintf+0x4c>
     ef8:	b6 01       	movw	r22, r12
     efa:	80 e2       	ldi	r24, 0x20	; 32
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	37 d0       	rcall	.+110    	; 0xf6e <fputc>
     f00:	2a 94       	dec	r2
     f02:	f7 cf       	rjmp	.-18     	; 0xef2 <vfprintf+0x3aa>
     f04:	f6 01       	movw	r30, r12
     f06:	86 81       	ldd	r24, Z+6	; 0x06
     f08:	97 81       	ldd	r25, Z+7	; 0x07
     f0a:	02 c0       	rjmp	.+4      	; 0xf10 <vfprintf+0x3c8>
     f0c:	8f ef       	ldi	r24, 0xFF	; 255
     f0e:	9f ef       	ldi	r25, 0xFF	; 255
     f10:	2b 96       	adiw	r28, 0x0b	; 11
     f12:	0f b6       	in	r0, 0x3f	; 63
     f14:	f8 94       	cli
     f16:	de bf       	out	0x3e, r29	; 62
     f18:	0f be       	out	0x3f, r0	; 63
     f1a:	cd bf       	out	0x3d, r28	; 61
     f1c:	df 91       	pop	r29
     f1e:	cf 91       	pop	r28
     f20:	1f 91       	pop	r17
     f22:	0f 91       	pop	r16
     f24:	ff 90       	pop	r15
     f26:	ef 90       	pop	r14
     f28:	df 90       	pop	r13
     f2a:	cf 90       	pop	r12
     f2c:	bf 90       	pop	r11
     f2e:	af 90       	pop	r10
     f30:	9f 90       	pop	r9
     f32:	8f 90       	pop	r8
     f34:	7f 90       	pop	r7
     f36:	6f 90       	pop	r6
     f38:	5f 90       	pop	r5
     f3a:	4f 90       	pop	r4
     f3c:	3f 90       	pop	r3
     f3e:	2f 90       	pop	r2
     f40:	08 95       	ret

00000f42 <strnlen_P>:
     f42:	fc 01       	movw	r30, r24
     f44:	05 90       	lpm	r0, Z+
     f46:	61 50       	subi	r22, 0x01	; 1
     f48:	70 40       	sbci	r23, 0x00	; 0
     f4a:	01 10       	cpse	r0, r1
     f4c:	d8 f7       	brcc	.-10     	; 0xf44 <strnlen_P+0x2>
     f4e:	80 95       	com	r24
     f50:	90 95       	com	r25
     f52:	8e 0f       	add	r24, r30
     f54:	9f 1f       	adc	r25, r31
     f56:	08 95       	ret

00000f58 <strnlen>:
     f58:	fc 01       	movw	r30, r24
     f5a:	61 50       	subi	r22, 0x01	; 1
     f5c:	70 40       	sbci	r23, 0x00	; 0
     f5e:	01 90       	ld	r0, Z+
     f60:	01 10       	cpse	r0, r1
     f62:	d8 f7       	brcc	.-10     	; 0xf5a <strnlen+0x2>
     f64:	80 95       	com	r24
     f66:	90 95       	com	r25
     f68:	8e 0f       	add	r24, r30
     f6a:	9f 1f       	adc	r25, r31
     f6c:	08 95       	ret

00000f6e <fputc>:
     f6e:	0f 93       	push	r16
     f70:	1f 93       	push	r17
     f72:	cf 93       	push	r28
     f74:	df 93       	push	r29
     f76:	fb 01       	movw	r30, r22
     f78:	23 81       	ldd	r18, Z+3	; 0x03
     f7a:	21 fd       	sbrc	r18, 1
     f7c:	03 c0       	rjmp	.+6      	; 0xf84 <fputc+0x16>
     f7e:	8f ef       	ldi	r24, 0xFF	; 255
     f80:	9f ef       	ldi	r25, 0xFF	; 255
     f82:	2c c0       	rjmp	.+88     	; 0xfdc <fputc+0x6e>
     f84:	22 ff       	sbrs	r18, 2
     f86:	16 c0       	rjmp	.+44     	; 0xfb4 <fputc+0x46>
     f88:	46 81       	ldd	r20, Z+6	; 0x06
     f8a:	57 81       	ldd	r21, Z+7	; 0x07
     f8c:	24 81       	ldd	r18, Z+4	; 0x04
     f8e:	35 81       	ldd	r19, Z+5	; 0x05
     f90:	42 17       	cp	r20, r18
     f92:	53 07       	cpc	r21, r19
     f94:	44 f4       	brge	.+16     	; 0xfa6 <fputc+0x38>
     f96:	a0 81       	ld	r26, Z
     f98:	b1 81       	ldd	r27, Z+1	; 0x01
     f9a:	9d 01       	movw	r18, r26
     f9c:	2f 5f       	subi	r18, 0xFF	; 255
     f9e:	3f 4f       	sbci	r19, 0xFF	; 255
     fa0:	31 83       	std	Z+1, r19	; 0x01
     fa2:	20 83       	st	Z, r18
     fa4:	8c 93       	st	X, r24
     fa6:	26 81       	ldd	r18, Z+6	; 0x06
     fa8:	37 81       	ldd	r19, Z+7	; 0x07
     faa:	2f 5f       	subi	r18, 0xFF	; 255
     fac:	3f 4f       	sbci	r19, 0xFF	; 255
     fae:	37 83       	std	Z+7, r19	; 0x07
     fb0:	26 83       	std	Z+6, r18	; 0x06
     fb2:	14 c0       	rjmp	.+40     	; 0xfdc <fputc+0x6e>
     fb4:	8b 01       	movw	r16, r22
     fb6:	ec 01       	movw	r28, r24
     fb8:	fb 01       	movw	r30, r22
     fba:	00 84       	ldd	r0, Z+8	; 0x08
     fbc:	f1 85       	ldd	r31, Z+9	; 0x09
     fbe:	e0 2d       	mov	r30, r0
     fc0:	09 95       	icall
     fc2:	89 2b       	or	r24, r25
     fc4:	e1 f6       	brne	.-72     	; 0xf7e <fputc+0x10>
     fc6:	d8 01       	movw	r26, r16
     fc8:	16 96       	adiw	r26, 0x06	; 6
     fca:	8d 91       	ld	r24, X+
     fcc:	9c 91       	ld	r25, X
     fce:	17 97       	sbiw	r26, 0x07	; 7
     fd0:	01 96       	adiw	r24, 0x01	; 1
     fd2:	17 96       	adiw	r26, 0x07	; 7
     fd4:	9c 93       	st	X, r25
     fd6:	8e 93       	st	-X, r24
     fd8:	16 97       	sbiw	r26, 0x06	; 6
     fda:	ce 01       	movw	r24, r28
     fdc:	df 91       	pop	r29
     fde:	cf 91       	pop	r28
     fe0:	1f 91       	pop	r17
     fe2:	0f 91       	pop	r16
     fe4:	08 95       	ret

00000fe6 <__ultoa_invert>:
     fe6:	fa 01       	movw	r30, r20
     fe8:	aa 27       	eor	r26, r26
     fea:	28 30       	cpi	r18, 0x08	; 8
     fec:	51 f1       	breq	.+84     	; 0x1042 <__ultoa_invert+0x5c>
     fee:	20 31       	cpi	r18, 0x10	; 16
     ff0:	81 f1       	breq	.+96     	; 0x1052 <__ultoa_invert+0x6c>
     ff2:	e8 94       	clt
     ff4:	6f 93       	push	r22
     ff6:	6e 7f       	andi	r22, 0xFE	; 254
     ff8:	6e 5f       	subi	r22, 0xFE	; 254
     ffa:	7f 4f       	sbci	r23, 0xFF	; 255
     ffc:	8f 4f       	sbci	r24, 0xFF	; 255
     ffe:	9f 4f       	sbci	r25, 0xFF	; 255
    1000:	af 4f       	sbci	r26, 0xFF	; 255
    1002:	b1 e0       	ldi	r27, 0x01	; 1
    1004:	3e d0       	rcall	.+124    	; 0x1082 <__ultoa_invert+0x9c>
    1006:	b4 e0       	ldi	r27, 0x04	; 4
    1008:	3c d0       	rcall	.+120    	; 0x1082 <__ultoa_invert+0x9c>
    100a:	67 0f       	add	r22, r23
    100c:	78 1f       	adc	r23, r24
    100e:	89 1f       	adc	r24, r25
    1010:	9a 1f       	adc	r25, r26
    1012:	a1 1d       	adc	r26, r1
    1014:	68 0f       	add	r22, r24
    1016:	79 1f       	adc	r23, r25
    1018:	8a 1f       	adc	r24, r26
    101a:	91 1d       	adc	r25, r1
    101c:	a1 1d       	adc	r26, r1
    101e:	6a 0f       	add	r22, r26
    1020:	71 1d       	adc	r23, r1
    1022:	81 1d       	adc	r24, r1
    1024:	91 1d       	adc	r25, r1
    1026:	a1 1d       	adc	r26, r1
    1028:	20 d0       	rcall	.+64     	; 0x106a <__ultoa_invert+0x84>
    102a:	09 f4       	brne	.+2      	; 0x102e <__ultoa_invert+0x48>
    102c:	68 94       	set
    102e:	3f 91       	pop	r19
    1030:	2a e0       	ldi	r18, 0x0A	; 10
    1032:	26 9f       	mul	r18, r22
    1034:	11 24       	eor	r1, r1
    1036:	30 19       	sub	r19, r0
    1038:	30 5d       	subi	r19, 0xD0	; 208
    103a:	31 93       	st	Z+, r19
    103c:	de f6       	brtc	.-74     	; 0xff4 <__ultoa_invert+0xe>
    103e:	cf 01       	movw	r24, r30
    1040:	08 95       	ret
    1042:	46 2f       	mov	r20, r22
    1044:	47 70       	andi	r20, 0x07	; 7
    1046:	40 5d       	subi	r20, 0xD0	; 208
    1048:	41 93       	st	Z+, r20
    104a:	b3 e0       	ldi	r27, 0x03	; 3
    104c:	0f d0       	rcall	.+30     	; 0x106c <__ultoa_invert+0x86>
    104e:	c9 f7       	brne	.-14     	; 0x1042 <__ultoa_invert+0x5c>
    1050:	f6 cf       	rjmp	.-20     	; 0x103e <__ultoa_invert+0x58>
    1052:	46 2f       	mov	r20, r22
    1054:	4f 70       	andi	r20, 0x0F	; 15
    1056:	40 5d       	subi	r20, 0xD0	; 208
    1058:	4a 33       	cpi	r20, 0x3A	; 58
    105a:	18 f0       	brcs	.+6      	; 0x1062 <__ultoa_invert+0x7c>
    105c:	49 5d       	subi	r20, 0xD9	; 217
    105e:	31 fd       	sbrc	r19, 1
    1060:	40 52       	subi	r20, 0x20	; 32
    1062:	41 93       	st	Z+, r20
    1064:	02 d0       	rcall	.+4      	; 0x106a <__ultoa_invert+0x84>
    1066:	a9 f7       	brne	.-22     	; 0x1052 <__ultoa_invert+0x6c>
    1068:	ea cf       	rjmp	.-44     	; 0x103e <__ultoa_invert+0x58>
    106a:	b4 e0       	ldi	r27, 0x04	; 4
    106c:	a6 95       	lsr	r26
    106e:	97 95       	ror	r25
    1070:	87 95       	ror	r24
    1072:	77 95       	ror	r23
    1074:	67 95       	ror	r22
    1076:	ba 95       	dec	r27
    1078:	c9 f7       	brne	.-14     	; 0x106c <__ultoa_invert+0x86>
    107a:	00 97       	sbiw	r24, 0x00	; 0
    107c:	61 05       	cpc	r22, r1
    107e:	71 05       	cpc	r23, r1
    1080:	08 95       	ret
    1082:	9b 01       	movw	r18, r22
    1084:	ac 01       	movw	r20, r24
    1086:	0a 2e       	mov	r0, r26
    1088:	06 94       	lsr	r0
    108a:	57 95       	ror	r21
    108c:	47 95       	ror	r20
    108e:	37 95       	ror	r19
    1090:	27 95       	ror	r18
    1092:	ba 95       	dec	r27
    1094:	c9 f7       	brne	.-14     	; 0x1088 <__ultoa_invert+0xa2>
    1096:	62 0f       	add	r22, r18
    1098:	73 1f       	adc	r23, r19
    109a:	84 1f       	adc	r24, r20
    109c:	95 1f       	adc	r25, r21
    109e:	a0 1d       	adc	r26, r0
    10a0:	08 95       	ret

000010a2 <_exit>:
    10a2:	f8 94       	cli

000010a4 <__stop_program>:
    10a4:	ff cf       	rjmp	.-2      	; 0x10a4 <__stop_program>

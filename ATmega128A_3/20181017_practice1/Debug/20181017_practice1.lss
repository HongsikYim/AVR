
20181017_practice1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ea  00800100  000008d6  0000096a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  008001ea  008001ea  00000a54  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a54  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ab0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e0f  00000000  00000000  00000b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009e6  00000000  00000000  00001977  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005c2  00000000  00000000  0000235d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000114  00000000  00000000  00002920  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f5  00000000  00000000  00002a34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000294  00000000  00000000  00002f29  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000031bd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4d c0       	rjmp	.+154    	; 0x9c <__ctors_end>
   2:	00 00       	nop
   4:	68 c0       	rjmp	.+208    	; 0xd6 <__bad_interrupt>
   6:	00 00       	nop
   8:	66 c0       	rjmp	.+204    	; 0xd6 <__bad_interrupt>
   a:	00 00       	nop
   c:	64 c0       	rjmp	.+200    	; 0xd6 <__bad_interrupt>
   e:	00 00       	nop
  10:	62 c0       	rjmp	.+196    	; 0xd6 <__bad_interrupt>
  12:	00 00       	nop
  14:	60 c0       	rjmp	.+192    	; 0xd6 <__bad_interrupt>
  16:	00 00       	nop
  18:	5e c0       	rjmp	.+188    	; 0xd6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5c c0       	rjmp	.+184    	; 0xd6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	5a c0       	rjmp	.+180    	; 0xd6 <__bad_interrupt>
  22:	00 00       	nop
  24:	58 c0       	rjmp	.+176    	; 0xd6 <__bad_interrupt>
  26:	00 00       	nop
  28:	56 c0       	rjmp	.+172    	; 0xd6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	54 c0       	rjmp	.+168    	; 0xd6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	52 c0       	rjmp	.+164    	; 0xd6 <__bad_interrupt>
  32:	00 00       	nop
  34:	50 c0       	rjmp	.+160    	; 0xd6 <__bad_interrupt>
  36:	00 00       	nop
  38:	4e c0       	rjmp	.+156    	; 0xd6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4c c0       	rjmp	.+152    	; 0xd6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	4b c0       	rjmp	.+150    	; 0xd8 <__vector_16>
  42:	00 00       	nop
  44:	48 c0       	rjmp	.+144    	; 0xd6 <__bad_interrupt>
  46:	00 00       	nop
  48:	46 c0       	rjmp	.+140    	; 0xd6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	44 c0       	rjmp	.+136    	; 0xd6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	42 c0       	rjmp	.+132    	; 0xd6 <__bad_interrupt>
  52:	00 00       	nop
  54:	40 c0       	rjmp	.+128    	; 0xd6 <__bad_interrupt>
  56:	00 00       	nop
  58:	3e c0       	rjmp	.+124    	; 0xd6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3c c0       	rjmp	.+120    	; 0xd6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	3a c0       	rjmp	.+116    	; 0xd6 <__bad_interrupt>
  62:	00 00       	nop
  64:	38 c0       	rjmp	.+112    	; 0xd6 <__bad_interrupt>
  66:	00 00       	nop
  68:	36 c0       	rjmp	.+108    	; 0xd6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	34 c0       	rjmp	.+104    	; 0xd6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	32 c0       	rjmp	.+100    	; 0xd6 <__bad_interrupt>
  72:	00 00       	nop
  74:	30 c0       	rjmp	.+96     	; 0xd6 <__bad_interrupt>
  76:	00 00       	nop
  78:	2e c0       	rjmp	.+92     	; 0xd6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2c c0       	rjmp	.+88     	; 0xd6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	2a c0       	rjmp	.+84     	; 0xd6 <__bad_interrupt>
  82:	00 00       	nop
  84:	28 c0       	rjmp	.+80     	; 0xd6 <__bad_interrupt>
  86:	00 00       	nop
  88:	26 c0       	rjmp	.+76     	; 0xd6 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	fa 00       	.word	0x00fa	; ????
  8e:	09 01       	movw	r0, r18
  90:	18 01       	movw	r2, r16
  92:	28 01       	movw	r4, r16
  94:	38 01       	movw	r6, r16
  96:	48 01       	movw	r8, r16
  98:	58 01       	movw	r10, r16
  9a:	68 01       	movw	r12, r16

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf ef       	ldi	r28, 0xFF	; 255
  a2:	d0 e1       	ldi	r29, 0x10	; 16
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_copy_data>:
  a8:	11 e0       	ldi	r17, 0x01	; 1
  aa:	a0 e0       	ldi	r26, 0x00	; 0
  ac:	b1 e0       	ldi	r27, 0x01	; 1
  ae:	e6 ed       	ldi	r30, 0xD6	; 214
  b0:	f8 e0       	ldi	r31, 0x08	; 8
  b2:	00 e0       	ldi	r16, 0x00	; 0
  b4:	0b bf       	out	0x3b, r16	; 59
  b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x14>
  b8:	07 90       	elpm	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	aa 3e       	cpi	r26, 0xEA	; 234
  be:	b1 07       	cpc	r27, r17
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0x10>

000000c2 <__do_clear_bss>:
  c2:	21 e0       	ldi	r18, 0x01	; 1
  c4:	aa ee       	ldi	r26, 0xEA	; 234
  c6:	b1 e0       	ldi	r27, 0x01	; 1
  c8:	01 c0       	rjmp	.+2      	; 0xcc <.do_clear_bss_start>

000000ca <.do_clear_bss_loop>:
  ca:	1d 92       	st	X+, r1

000000cc <.do_clear_bss_start>:
  cc:	a7 3f       	cpi	r26, 0xF7	; 247
  ce:	b2 07       	cpc	r27, r18
  d0:	e1 f7       	brne	.-8      	; 0xca <.do_clear_bss_loop>
  d2:	32 d0       	rcall	.+100    	; 0x138 <main>
  d4:	fe c3       	rjmp	.+2044   	; 0x8d2 <_exit>

000000d6 <__bad_interrupt>:
  d6:	94 cf       	rjmp	.-216    	; 0x0 <__vectors>

000000d8 <__vector_16>:

// 온도, 습도 변수
uint8_t temperature = 0, humidity = 0;

ISR(TIMER0_OVF_vect)
{
  d8:	1f 92       	push	r1
  da:	0f 92       	push	r0
  dc:	0f b6       	in	r0, 0x3f	; 63
  de:	0f 92       	push	r0
  e0:	11 24       	eor	r1, r1
  e2:	8f 93       	push	r24
  e4:	9f 93       	push	r25
	count++;
  e6:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <count>
  ea:	90 91 f0 01 	lds	r25, 0x01F0	; 0x8001f0 <count+0x1>
  ee:	01 96       	adiw	r24, 0x01	; 1
  f0:	90 93 f0 01 	sts	0x01F0, r25	; 0x8001f0 <count+0x1>
  f4:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <count>
	if(count == 10)
  f8:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <count>
  fc:	90 91 f0 01 	lds	r25, 0x01F0	; 0x8001f0 <count+0x1>
 100:	0a 97       	sbiw	r24, 0x0a	; 10
 102:	49 f4       	brne	.+18     	; 0x116 <__vector_16+0x3e>
	{
		count = 0;
 104:	10 92 f0 01 	sts	0x01F0, r1	; 0x8001f0 <count+0x1>
 108:	10 92 ef 01 	sts	0x01EF, r1	; 0x8001ef <count>
		ms++;
 10c:	80 91 ee 01 	lds	r24, 0x01EE	; 0x8001ee <ms>
 110:	8f 5f       	subi	r24, 0xFF	; 255
 112:	80 93 ee 01 	sts	0x01EE, r24	; 0x8001ee <ms>
	}
	TCNT0 = 256 - 250;
 116:	86 e0       	ldi	r24, 0x06	; 6
 118:	82 bf       	out	0x32, r24	; 50
}
 11a:	9f 91       	pop	r25
 11c:	8f 91       	pop	r24
 11e:	0f 90       	pop	r0
 120:	0f be       	out	0x3f, r0	; 63
 122:	0f 90       	pop	r0
 124:	1f 90       	pop	r1
 126:	18 95       	reti

00000128 <INTERRUPT>:

void INTERRUPT(void)
{
	//인터럽트
	TCCR0 |= (1 << CS02) | (0 << CS01) | (0 << CS00); // 분주비
 128:	83 b7       	in	r24, 0x33	; 51
 12a:	84 60       	ori	r24, 0x04	; 4
 12c:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1 << TOIE0);
 12e:	87 b7       	in	r24, 0x37	; 55
 130:	81 60       	ori	r24, 0x01	; 1
 132:	87 bf       	out	0x37, r24	; 55
	
	sei();
 134:	78 94       	sei
 136:	08 95       	ret

00000138 <main>:
}

int main(void)
{
	stdin = &INPUT;
 138:	e1 ef       	ldi	r30, 0xF1	; 241
 13a:	f1 e0       	ldi	r31, 0x01	; 1
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	91 83       	std	Z+1, r25	; 0x01
 142:	80 83       	st	Z, r24
	stdout = &OUTPUT;
 144:	8e e0       	ldi	r24, 0x0E	; 14
 146:	91 e0       	ldi	r25, 0x01	; 1
 148:	93 83       	std	Z+3, r25	; 0x03
 14a:	82 83       	std	Z+2, r24	; 0x02
	
	UART0_init();
 14c:	d1 d0       	rcall	.+418    	; 0x2f0 <UART0_init>
	INTERRUPT();
 14e:	ec df       	rcall	.-40     	; 0x128 <INTERRUPT>
 150:	8f ef       	ldi	r24, 0xFF	; 255
	
	DDRD = 0xFF;
 152:	81 bb       	out	0x11, r24	; 17
 154:	12 ba       	out	0x12, r1	; 18
	PORTD = 0x00;
 156:	cc e1       	ldi	r28, 0x1C	; 28
		// 1초 주기로 온도, 습도 센싱
		if(ms > 100)
		{
			temperature ++;
			humidity ++;
			printf("temp, %d, humid, %d\r\n", temperature, humidity);
 158:	d1 e0       	ldi	r29, 0x01	; 1
 15a:	68 94       	set
					UART0_print_string("LED,7,OFF\r\n");
				}
				break;
				
				case '8':
				states = LED8;
 15c:	ee 24       	eor	r14, r14
 15e:	e3 f8       	bld	r14, 3
 160:	0f 2e       	mov	r0, r31
					UART0_print_string("LED,6,OFF\r\n");
				}
				break;
				
				case '7':
				states = LED7;
 162:	f7 e0       	ldi	r31, 0x07	; 7
 164:	7f 2e       	mov	r7, r31
 166:	f0 2d       	mov	r31, r0
 168:	68 94       	set
				PORTD ^= (1 << PORTD6);
 16a:	88 24       	eor	r8, r8
 16c:	86 f8       	bld	r8, 6
 16e:	0f 2e       	mov	r0, r31
					UART0_print_string("LED,5,OFF\r\n");
				}
				break;
				
				case '6':
				states = LED6;
 170:	f6 e0       	ldi	r31, 0x06	; 6
 172:	9f 2e       	mov	r9, r31
 174:	f0 2d       	mov	r31, r0
 176:	68 94       	set
				PORTD ^= (1 << PORTD5);
 178:	aa 24       	eor	r10, r10
 17a:	a5 f8       	bld	r10, 5
 17c:	0f 2e       	mov	r0, r31
					UART0_print_string("LED,4,OFF\r\n");
				}
				break;
				
				case '5':
				states = LED5;
 17e:	f5 e0       	ldi	r31, 0x05	; 5
 180:	bf 2e       	mov	r11, r31
 182:	f0 2d       	mov	r31, r0
 184:	68 94       	set
				PORTD ^= (1 << PORTD4);
 186:	cc 24       	eor	r12, r12
 188:	c4 f8       	bld	r12, 4
 18a:	68 94       	set
					UART0_print_string("LED,3,OFF\r\n");
				}
				break;
				
				case '4':
				states = LED4;
 18c:	ff 24       	eor	r15, r15
 18e:	f2 f8       	bld	r15, 2
 190:	0f 2e       	mov	r0, r31
					UART0_print_string("LED,2,OFF\r\n");
				}
				break;
				
				case '3':
				states = LED3;
 192:	f3 e0       	ldi	r31, 0x03	; 3
 194:	df 2e       	mov	r13, r31
 196:	f0 2d       	mov	r31, r0
 198:	02 e0       	ldi	r16, 0x02	; 2
					UART0_print_string("LED,1,OFF\r\n");
				}
				break;
				
				case '2':
				states =LED2;
 19a:	11 e0       	ldi	r17, 0x01	; 1
			click = UART0_receive();
			switch(click)
			{
				//
				case '1':
				states = LED1;
 19c:	80 91 ee 01 	lds	r24, 0x01EE	; 0x8001ee <ms>
	
    /* Replace with your application code */
    while (1) 
    {
		// 1초 주기로 온도, 습도 센싱
		if(ms > 100)
 1a0:	85 36       	cpi	r24, 0x65	; 101
 1a2:	c8 f0       	brcs	.+50     	; 0x1d6 <main+0x9e>
 1a4:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <temperature>
		{
			temperature ++;
 1a8:	8f 5f       	subi	r24, 0xFF	; 255
 1aa:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <temperature>
 1ae:	90 91 ea 01 	lds	r25, 0x01EA	; 0x8001ea <__data_end>
			humidity ++;
 1b2:	9f 5f       	subi	r25, 0xFF	; 255
 1b4:	90 93 ea 01 	sts	0x01EA, r25	; 0x8001ea <__data_end>
 1b8:	1f 92       	push	r1
			printf("temp, %d, humid, %d\r\n", temperature, humidity);
 1ba:	9f 93       	push	r25
 1bc:	1f 92       	push	r1
 1be:	8f 93       	push	r24
 1c0:	df 93       	push	r29
 1c2:	cf 93       	push	r28
 1c4:	c6 d0       	rcall	.+396    	; 0x352 <printf>
 1c6:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <ms>
			
			ms = 0;
 1ca:	0f 90       	pop	r0
 1cc:	0f 90       	pop	r0
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
		}
		
		if(UART0_rx_check())
 1d6:	af d0       	rcall	.+350    	; 0x336 <UART0_rx_check>
 1d8:	88 23       	and	r24, r24
 1da:	01 f3       	breq	.-64     	; 0x19c <main+0x64>
		{

			//LED 점등
			click = UART0_receive();
 1dc:	9a d0       	rcall	.+308    	; 0x312 <UART0_receive>
 1de:	80 93 ed 01 	sts	0x01ED, r24	; 0x8001ed <click>
 1e2:	90 e0       	ldi	r25, 0x00	; 0
			switch(click)
 1e4:	fc 01       	movw	r30, r24
 1e6:	f1 97       	sbiw	r30, 0x31	; 49
 1e8:	e8 30       	cpi	r30, 0x08	; 8
 1ea:	f1 05       	cpc	r31, r1
 1ec:	b8 f6       	brcc	.-82     	; 0x19c <main+0x64>
 1ee:	ea 5b       	subi	r30, 0xBA	; 186
 1f0:	ff 4f       	sbci	r31, 0xFF	; 255
 1f2:	a6 c0       	rjmp	.+332    	; 0x340 <__tablejump2__>
 1f4:	10 93 ec 01 	sts	0x01EC, r17	; 0x8001ec <states>
			{
				//
				case '1':
				states = LED1;
 1f8:	82 b3       	in	r24, 0x12	; 18
				PORTD ^= (1 << PORTD0);
 1fa:	81 27       	eor	r24, r17
 1fc:	82 bb       	out	0x12, r24	; 18
				if((PORTD & 0x01) == 0x01)
 1fe:	90 9b       	sbis	0x12, 0	; 18
 200:	04 c0       	rjmp	.+8      	; 0x20a <main+0xd2>
				{
					UART0_print_string("LED,1,ON\r\n");
 202:	82 e3       	ldi	r24, 0x32	; 50
 204:	91 e0       	ldi	r25, 0x01	; 1
 206:	89 d0       	rcall	.+274    	; 0x31a <UART0_print_string>
 208:	c9 cf       	rjmp	.-110    	; 0x19c <main+0x64>
				}
				else
				{
					UART0_print_string("LED,1,OFF\r\n");
 20a:	8d e3       	ldi	r24, 0x3D	; 61
 20c:	91 e0       	ldi	r25, 0x01	; 1
 20e:	85 d0       	rcall	.+266    	; 0x31a <UART0_print_string>
 210:	c5 cf       	rjmp	.-118    	; 0x19c <main+0x64>
 212:	00 93 ec 01 	sts	0x01EC, r16	; 0x8001ec <states>
				}
				break;
				
				case '2':
				states =LED2;
				PORTD ^= (1 << PORTD1);
 216:	82 b3       	in	r24, 0x12	; 18
 218:	80 27       	eor	r24, r16
 21a:	82 bb       	out	0x12, r24	; 18
				if((PORTD & 0x02) == 0x02)
 21c:	91 9b       	sbis	0x12, 1	; 18
				{
					UART0_print_string("LED,2,ON\r\n");
 21e:	04 c0       	rjmp	.+8      	; 0x228 <main+0xf0>
 220:	89 e4       	ldi	r24, 0x49	; 73
 222:	91 e0       	ldi	r25, 0x01	; 1
 224:	7a d0       	rcall	.+244    	; 0x31a <UART0_print_string>
 226:	ba cf       	rjmp	.-140    	; 0x19c <main+0x64>
				}
				else
				{
					UART0_print_string("LED,2,OFF\r\n");
 228:	84 e5       	ldi	r24, 0x54	; 84
 22a:	91 e0       	ldi	r25, 0x01	; 1
 22c:	76 d0       	rcall	.+236    	; 0x31a <UART0_print_string>
 22e:	b6 cf       	rjmp	.-148    	; 0x19c <main+0x64>
 230:	d0 92 ec 01 	sts	0x01EC, r13	; 0x8001ec <states>
				}
				break;
				
				case '3':
				states = LED3;
				PORTD ^= (1 << PORTD2);
 234:	82 b3       	in	r24, 0x12	; 18
 236:	8f 25       	eor	r24, r15
				if(PORTD == 0x04)
 238:	82 bb       	out	0x12, r24	; 18
 23a:	82 b3       	in	r24, 0x12	; 18
 23c:	84 30       	cpi	r24, 0x04	; 4
				{
					UART0_print_string("LED,3,ON\r\n");
 23e:	21 f4       	brne	.+8      	; 0x248 <main+0x110>
 240:	80 e6       	ldi	r24, 0x60	; 96
 242:	91 e0       	ldi	r25, 0x01	; 1
 244:	6a d0       	rcall	.+212    	; 0x31a <UART0_print_string>
 246:	aa cf       	rjmp	.-172    	; 0x19c <main+0x64>
				}
				else
				{
					UART0_print_string("LED,3,OFF\r\n");
 248:	8b e6       	ldi	r24, 0x6B	; 107
 24a:	91 e0       	ldi	r25, 0x01	; 1
 24c:	66 d0       	rcall	.+204    	; 0x31a <UART0_print_string>
 24e:	a6 cf       	rjmp	.-180    	; 0x19c <main+0x64>
				}
				break;
				
				case '4':
				states = LED4;
 250:	f0 92 ec 01 	sts	0x01EC, r15	; 0x8001ec <states>
				PORTD ^= (1 << PORTD3);
 254:	82 b3       	in	r24, 0x12	; 18
 256:	8e 25       	eor	r24, r14
				if(PORTD == 0x08)
 258:	82 bb       	out	0x12, r24	; 18
 25a:	82 b3       	in	r24, 0x12	; 18
 25c:	88 30       	cpi	r24, 0x08	; 8
				{
					UART0_print_string("LED,4,ON\r\n");
 25e:	21 f4       	brne	.+8      	; 0x268 <main+0x130>
 260:	87 e7       	ldi	r24, 0x77	; 119
 262:	91 e0       	ldi	r25, 0x01	; 1
 264:	5a d0       	rcall	.+180    	; 0x31a <UART0_print_string>
 266:	9a cf       	rjmp	.-204    	; 0x19c <main+0x64>
				}
				else
				{
					UART0_print_string("LED,4,OFF\r\n");
 268:	82 e8       	ldi	r24, 0x82	; 130
 26a:	91 e0       	ldi	r25, 0x01	; 1
 26c:	56 d0       	rcall	.+172    	; 0x31a <UART0_print_string>
 26e:	96 cf       	rjmp	.-212    	; 0x19c <main+0x64>
				}
				break;
				
				case '5':
				states = LED5;
 270:	b0 92 ec 01 	sts	0x01EC, r11	; 0x8001ec <states>
				PORTD ^= (1 << PORTD4);
 274:	82 b3       	in	r24, 0x12	; 18
 276:	8c 25       	eor	r24, r12
				if(PORTD == 0x10)
 278:	82 bb       	out	0x12, r24	; 18
 27a:	82 b3       	in	r24, 0x12	; 18
 27c:	80 31       	cpi	r24, 0x10	; 16
				{
					UART0_print_string("LED,5,ON\r\n");
 27e:	21 f4       	brne	.+8      	; 0x288 <main+0x150>
 280:	8e e8       	ldi	r24, 0x8E	; 142
 282:	91 e0       	ldi	r25, 0x01	; 1
 284:	4a d0       	rcall	.+148    	; 0x31a <UART0_print_string>
				}
				else
				{
					UART0_print_string("LED,5,OFF\r\n");
 286:	8a cf       	rjmp	.-236    	; 0x19c <main+0x64>
 288:	89 e9       	ldi	r24, 0x99	; 153
 28a:	91 e0       	ldi	r25, 0x01	; 1
 28c:	46 d0       	rcall	.+140    	; 0x31a <UART0_print_string>
				}
				break;
				
				case '6':
				states = LED6;
 28e:	86 cf       	rjmp	.-244    	; 0x19c <main+0x64>
 290:	90 92 ec 01 	sts	0x01EC, r9	; 0x8001ec <states>
				PORTD ^= (1 << PORTD5);
 294:	82 b3       	in	r24, 0x12	; 18
 296:	8a 25       	eor	r24, r10
				if(PORTD == 0x20)
 298:	82 bb       	out	0x12, r24	; 18
 29a:	82 b3       	in	r24, 0x12	; 18
 29c:	80 32       	cpi	r24, 0x20	; 32
				{
					UART0_print_string("LED,6,ON\r\n");
 29e:	21 f4       	brne	.+8      	; 0x2a8 <main+0x170>
 2a0:	85 ea       	ldi	r24, 0xA5	; 165
 2a2:	91 e0       	ldi	r25, 0x01	; 1
 2a4:	3a d0       	rcall	.+116    	; 0x31a <UART0_print_string>
				}
				else
				{
					UART0_print_string("LED,6,OFF\r\n");
 2a6:	7a cf       	rjmp	.-268    	; 0x19c <main+0x64>
 2a8:	80 eb       	ldi	r24, 0xB0	; 176
 2aa:	91 e0       	ldi	r25, 0x01	; 1
 2ac:	36 d0       	rcall	.+108    	; 0x31a <UART0_print_string>
				}
				break;
				
				case '7':
				states = LED7;
 2ae:	76 cf       	rjmp	.-276    	; 0x19c <main+0x64>
 2b0:	70 92 ec 01 	sts	0x01EC, r7	; 0x8001ec <states>
				PORTD ^= (1 << PORTD6);
 2b4:	82 b3       	in	r24, 0x12	; 18
 2b6:	88 25       	eor	r24, r8
				if(PORTD == 0x40)
 2b8:	82 bb       	out	0x12, r24	; 18
 2ba:	82 b3       	in	r24, 0x12	; 18
 2bc:	80 34       	cpi	r24, 0x40	; 64
				{
					UART0_print_string("LED,7,ON\r\n");
 2be:	21 f4       	brne	.+8      	; 0x2c8 <main+0x190>
 2c0:	8c eb       	ldi	r24, 0xBC	; 188
 2c2:	91 e0       	ldi	r25, 0x01	; 1
 2c4:	2a d0       	rcall	.+84     	; 0x31a <UART0_print_string>
				}
				else
				{
					UART0_print_string("LED,7,OFF\r\n");
 2c6:	6a cf       	rjmp	.-300    	; 0x19c <main+0x64>
 2c8:	87 ec       	ldi	r24, 0xC7	; 199
 2ca:	91 e0       	ldi	r25, 0x01	; 1
 2cc:	26 d0       	rcall	.+76     	; 0x31a <UART0_print_string>
 2ce:	66 cf       	rjmp	.-308    	; 0x19c <main+0x64>
				}
				break;
				
				case '8':
				states = LED8;
 2d0:	e0 92 ec 01 	sts	0x01EC, r14	; 0x8001ec <states>
				PORTD ^= (1 << PORTD7);
 2d4:	82 b3       	in	r24, 0x12	; 18
 2d6:	80 58       	subi	r24, 0x80	; 128
 2d8:	82 bb       	out	0x12, r24	; 18
				if(PORTD == 0x80)
 2da:	82 b3       	in	r24, 0x12	; 18
 2dc:	80 38       	cpi	r24, 0x80	; 128
 2de:	21 f4       	brne	.+8      	; 0x2e8 <main+0x1b0>
				{
					UART0_print_string("LED,8,ON\r\n");
 2e0:	83 ed       	ldi	r24, 0xD3	; 211
 2e2:	91 e0       	ldi	r25, 0x01	; 1
 2e4:	1a d0       	rcall	.+52     	; 0x31a <UART0_print_string>
 2e6:	5a cf       	rjmp	.-332    	; 0x19c <main+0x64>
 2e8:	8e ed       	ldi	r24, 0xDE	; 222
				}
				else
				{
					UART0_print_string("LED,8,OFF\r\n");
 2ea:	91 e0       	ldi	r25, 0x01	; 1
 2ec:	16 d0       	rcall	.+44     	; 0x31a <UART0_print_string>
 2ee:	56 cf       	rjmp	.-340    	; 0x19c <main+0x64>

000002f0 <UART0_init>:
 2f0:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	}
	for(i = index; i >= 0; i--)
	{
		UART0_transmit(numString[i]);
	}
}
 2f4:	8f ec       	ldi	r24, 0xCF	; 207
 2f6:	89 b9       	out	0x09, r24	; 9
 2f8:	59 9a       	sbi	0x0b, 1	; 11
 2fa:	e5 e9       	ldi	r30, 0x95	; 149
 2fc:	f0 e0       	ldi	r31, 0x00	; 0
 2fe:	80 81       	ld	r24, Z
 300:	86 60       	ori	r24, 0x06	; 6
 302:	80 83       	st	Z, r24
 304:	54 9a       	sbi	0x0a, 4	; 10
 306:	53 9a       	sbi	0x0a, 3	; 10
 308:	08 95       	ret

0000030a <UART0_transmit>:
 30a:	5d 9b       	sbis	0x0b, 5	; 11
 30c:	fe cf       	rjmp	.-4      	; 0x30a <UART0_transmit>
 30e:	8c b9       	out	0x0c, r24	; 12
 310:	08 95       	ret

00000312 <UART0_receive>:
 312:	5f 9b       	sbis	0x0b, 7	; 11
 314:	fe cf       	rjmp	.-4      	; 0x312 <UART0_receive>
 316:	8c b1       	in	r24, 0x0c	; 12
 318:	08 95       	ret

0000031a <UART0_print_string>:
 31a:	cf 93       	push	r28
 31c:	df 93       	push	r29
 31e:	ec 01       	movw	r28, r24
 320:	88 81       	ld	r24, Y
 322:	88 23       	and	r24, r24
 324:	29 f0       	breq	.+10     	; 0x330 <UART0_print_string+0x16>
 326:	21 96       	adiw	r28, 0x01	; 1
 328:	f0 df       	rcall	.-32     	; 0x30a <UART0_transmit>
 32a:	89 91       	ld	r24, Y+
 32c:	81 11       	cpse	r24, r1
 32e:	fc cf       	rjmp	.-8      	; 0x328 <UART0_print_string+0xe>
 330:	df 91       	pop	r29
 332:	cf 91       	pop	r28
 334:	08 95       	ret

00000336 <UART0_rx_check>:

uint8_t UART0_rx_check(void)
{
	if( UCSR0A & (1<<RXC0) )	// 데이터 수신 대기
 336:	8b b1       	in	r24, 0x0b	; 11
	return 1;
	else
	return 0;
 338:	88 1f       	adc	r24, r24
 33a:	88 27       	eor	r24, r24
 33c:	88 1f       	adc	r24, r24
 33e:	08 95       	ret

00000340 <__tablejump2__>:
 340:	ee 0f       	add	r30, r30
 342:	ff 1f       	adc	r31, r31
 344:	00 24       	eor	r0, r0
 346:	00 1c       	adc	r0, r0
 348:	0b be       	out	0x3b, r0	; 59
 34a:	07 90       	elpm	r0, Z+
 34c:	f6 91       	elpm	r31, Z
 34e:	e0 2d       	mov	r30, r0
 350:	09 94       	ijmp

00000352 <printf>:
 352:	cf 93       	push	r28
 354:	df 93       	push	r29
 356:	cd b7       	in	r28, 0x3d	; 61
 358:	de b7       	in	r29, 0x3e	; 62
 35a:	ae 01       	movw	r20, r28
 35c:	4b 5f       	subi	r20, 0xFB	; 251
 35e:	5f 4f       	sbci	r21, 0xFF	; 255
 360:	fa 01       	movw	r30, r20
 362:	61 91       	ld	r22, Z+
 364:	71 91       	ld	r23, Z+
 366:	af 01       	movw	r20, r30
 368:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <__iob+0x2>
 36c:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <__iob+0x3>
 370:	03 d0       	rcall	.+6      	; 0x378 <vfprintf>
 372:	df 91       	pop	r29
 374:	cf 91       	pop	r28
 376:	08 95       	ret

00000378 <vfprintf>:
 378:	2f 92       	push	r2
 37a:	3f 92       	push	r3
 37c:	4f 92       	push	r4
 37e:	5f 92       	push	r5
 380:	6f 92       	push	r6
 382:	7f 92       	push	r7
 384:	8f 92       	push	r8
 386:	9f 92       	push	r9
 388:	af 92       	push	r10
 38a:	bf 92       	push	r11
 38c:	cf 92       	push	r12
 38e:	df 92       	push	r13
 390:	ef 92       	push	r14
 392:	ff 92       	push	r15
 394:	0f 93       	push	r16
 396:	1f 93       	push	r17
 398:	cf 93       	push	r28
 39a:	df 93       	push	r29
 39c:	cd b7       	in	r28, 0x3d	; 61
 39e:	de b7       	in	r29, 0x3e	; 62
 3a0:	2b 97       	sbiw	r28, 0x0b	; 11
 3a2:	0f b6       	in	r0, 0x3f	; 63
 3a4:	f8 94       	cli
 3a6:	de bf       	out	0x3e, r29	; 62
 3a8:	0f be       	out	0x3f, r0	; 63
 3aa:	cd bf       	out	0x3d, r28	; 61
 3ac:	6c 01       	movw	r12, r24
 3ae:	7b 01       	movw	r14, r22
 3b0:	8a 01       	movw	r16, r20
 3b2:	fc 01       	movw	r30, r24
 3b4:	17 82       	std	Z+7, r1	; 0x07
 3b6:	16 82       	std	Z+6, r1	; 0x06
 3b8:	83 81       	ldd	r24, Z+3	; 0x03
 3ba:	81 ff       	sbrs	r24, 1
 3bc:	bf c1       	rjmp	.+894    	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 3be:	ce 01       	movw	r24, r28
 3c0:	01 96       	adiw	r24, 0x01	; 1
 3c2:	3c 01       	movw	r6, r24
 3c4:	f6 01       	movw	r30, r12
 3c6:	93 81       	ldd	r25, Z+3	; 0x03
 3c8:	f7 01       	movw	r30, r14
 3ca:	93 fd       	sbrc	r25, 3
 3cc:	85 91       	lpm	r24, Z+
 3ce:	93 ff       	sbrs	r25, 3
 3d0:	81 91       	ld	r24, Z+
 3d2:	7f 01       	movw	r14, r30
 3d4:	88 23       	and	r24, r24
 3d6:	09 f4       	brne	.+2      	; 0x3da <vfprintf+0x62>
 3d8:	ad c1       	rjmp	.+858    	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
 3da:	85 32       	cpi	r24, 0x25	; 37
 3dc:	39 f4       	brne	.+14     	; 0x3ec <vfprintf+0x74>
 3de:	93 fd       	sbrc	r25, 3
 3e0:	85 91       	lpm	r24, Z+
 3e2:	93 ff       	sbrs	r25, 3
 3e4:	81 91       	ld	r24, Z+
 3e6:	7f 01       	movw	r14, r30
 3e8:	85 32       	cpi	r24, 0x25	; 37
 3ea:	21 f4       	brne	.+8      	; 0x3f4 <vfprintf+0x7c>
 3ec:	b6 01       	movw	r22, r12
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	d6 d1       	rcall	.+940    	; 0x79e <fputc>
 3f2:	e8 cf       	rjmp	.-48     	; 0x3c4 <vfprintf+0x4c>
 3f4:	91 2c       	mov	r9, r1
 3f6:	21 2c       	mov	r2, r1
 3f8:	31 2c       	mov	r3, r1
 3fa:	ff e1       	ldi	r31, 0x1F	; 31
 3fc:	f3 15       	cp	r31, r3
 3fe:	d8 f0       	brcs	.+54     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 400:	8b 32       	cpi	r24, 0x2B	; 43
 402:	79 f0       	breq	.+30     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 404:	38 f4       	brcc	.+14     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 406:	80 32       	cpi	r24, 0x20	; 32
 408:	79 f0       	breq	.+30     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 40a:	83 32       	cpi	r24, 0x23	; 35
 40c:	a1 f4       	brne	.+40     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 40e:	23 2d       	mov	r18, r3
 410:	20 61       	ori	r18, 0x10	; 16
 412:	1d c0       	rjmp	.+58     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 414:	8d 32       	cpi	r24, 0x2D	; 45
 416:	61 f0       	breq	.+24     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 418:	80 33       	cpi	r24, 0x30	; 48
 41a:	69 f4       	brne	.+26     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 41c:	23 2d       	mov	r18, r3
 41e:	21 60       	ori	r18, 0x01	; 1
 420:	16 c0       	rjmp	.+44     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 422:	83 2d       	mov	r24, r3
 424:	82 60       	ori	r24, 0x02	; 2
 426:	38 2e       	mov	r3, r24
 428:	e3 2d       	mov	r30, r3
 42a:	e4 60       	ori	r30, 0x04	; 4
 42c:	3e 2e       	mov	r3, r30
 42e:	2a c0       	rjmp	.+84     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 430:	f3 2d       	mov	r31, r3
 432:	f8 60       	ori	r31, 0x08	; 8
 434:	1d c0       	rjmp	.+58     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 436:	37 fc       	sbrc	r3, 7
 438:	2d c0       	rjmp	.+90     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 43a:	20 ed       	ldi	r18, 0xD0	; 208
 43c:	28 0f       	add	r18, r24
 43e:	2a 30       	cpi	r18, 0x0A	; 10
 440:	40 f0       	brcs	.+16     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 442:	8e 32       	cpi	r24, 0x2E	; 46
 444:	b9 f4       	brne	.+46     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 446:	36 fc       	sbrc	r3, 6
 448:	75 c1       	rjmp	.+746    	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
 44a:	23 2d       	mov	r18, r3
 44c:	20 64       	ori	r18, 0x40	; 64
 44e:	32 2e       	mov	r3, r18
 450:	19 c0       	rjmp	.+50     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 452:	36 fe       	sbrs	r3, 6
 454:	06 c0       	rjmp	.+12     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 456:	8a e0       	ldi	r24, 0x0A	; 10
 458:	98 9e       	mul	r9, r24
 45a:	20 0d       	add	r18, r0
 45c:	11 24       	eor	r1, r1
 45e:	92 2e       	mov	r9, r18
 460:	11 c0       	rjmp	.+34     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 462:	ea e0       	ldi	r30, 0x0A	; 10
 464:	2e 9e       	mul	r2, r30
 466:	20 0d       	add	r18, r0
 468:	11 24       	eor	r1, r1
 46a:	22 2e       	mov	r2, r18
 46c:	f3 2d       	mov	r31, r3
 46e:	f0 62       	ori	r31, 0x20	; 32
 470:	3f 2e       	mov	r3, r31
 472:	08 c0       	rjmp	.+16     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 474:	8c 36       	cpi	r24, 0x6C	; 108
 476:	21 f4       	brne	.+8      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 478:	83 2d       	mov	r24, r3
 47a:	80 68       	ori	r24, 0x80	; 128
 47c:	38 2e       	mov	r3, r24
 47e:	02 c0       	rjmp	.+4      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 480:	88 36       	cpi	r24, 0x68	; 104
 482:	41 f4       	brne	.+16     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 484:	f7 01       	movw	r30, r14
 486:	93 fd       	sbrc	r25, 3
 488:	85 91       	lpm	r24, Z+
 48a:	93 ff       	sbrs	r25, 3
 48c:	81 91       	ld	r24, Z+
 48e:	7f 01       	movw	r14, r30
 490:	81 11       	cpse	r24, r1
 492:	b3 cf       	rjmp	.-154    	; 0x3fa <vfprintf+0x82>
 494:	98 2f       	mov	r25, r24
 496:	9f 7d       	andi	r25, 0xDF	; 223
 498:	95 54       	subi	r25, 0x45	; 69
 49a:	93 30       	cpi	r25, 0x03	; 3
 49c:	28 f4       	brcc	.+10     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 49e:	0c 5f       	subi	r16, 0xFC	; 252
 4a0:	1f 4f       	sbci	r17, 0xFF	; 255
 4a2:	9f e3       	ldi	r25, 0x3F	; 63
 4a4:	99 83       	std	Y+1, r25	; 0x01
 4a6:	0d c0       	rjmp	.+26     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4a8:	83 36       	cpi	r24, 0x63	; 99
 4aa:	31 f0       	breq	.+12     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4ac:	83 37       	cpi	r24, 0x73	; 115
 4ae:	71 f0       	breq	.+28     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4b0:	83 35       	cpi	r24, 0x53	; 83
 4b2:	09 f0       	breq	.+2      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4b4:	55 c0       	rjmp	.+170    	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 4b6:	20 c0       	rjmp	.+64     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4b8:	f8 01       	movw	r30, r16
 4ba:	80 81       	ld	r24, Z
 4bc:	89 83       	std	Y+1, r24	; 0x01
 4be:	0e 5f       	subi	r16, 0xFE	; 254
 4c0:	1f 4f       	sbci	r17, 0xFF	; 255
 4c2:	88 24       	eor	r8, r8
 4c4:	83 94       	inc	r8
 4c6:	91 2c       	mov	r9, r1
 4c8:	53 01       	movw	r10, r6
 4ca:	12 c0       	rjmp	.+36     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4cc:	28 01       	movw	r4, r16
 4ce:	f2 e0       	ldi	r31, 0x02	; 2
 4d0:	4f 0e       	add	r4, r31
 4d2:	51 1c       	adc	r5, r1
 4d4:	f8 01       	movw	r30, r16
 4d6:	a0 80       	ld	r10, Z
 4d8:	b1 80       	ldd	r11, Z+1	; 0x01
 4da:	36 fe       	sbrs	r3, 6
 4dc:	03 c0       	rjmp	.+6      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4de:	69 2d       	mov	r22, r9
 4e0:	70 e0       	ldi	r23, 0x00	; 0
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e4:	6f ef       	ldi	r22, 0xFF	; 255
 4e6:	7f ef       	ldi	r23, 0xFF	; 255
 4e8:	c5 01       	movw	r24, r10
 4ea:	4e d1       	rcall	.+668    	; 0x788 <strnlen>
 4ec:	4c 01       	movw	r8, r24
 4ee:	82 01       	movw	r16, r4
 4f0:	f3 2d       	mov	r31, r3
 4f2:	ff 77       	andi	r31, 0x7F	; 127
 4f4:	3f 2e       	mov	r3, r31
 4f6:	15 c0       	rjmp	.+42     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 4f8:	28 01       	movw	r4, r16
 4fa:	22 e0       	ldi	r18, 0x02	; 2
 4fc:	42 0e       	add	r4, r18
 4fe:	51 1c       	adc	r5, r1
 500:	f8 01       	movw	r30, r16
 502:	a0 80       	ld	r10, Z
 504:	b1 80       	ldd	r11, Z+1	; 0x01
 506:	36 fe       	sbrs	r3, 6
 508:	03 c0       	rjmp	.+6      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 50a:	69 2d       	mov	r22, r9
 50c:	70 e0       	ldi	r23, 0x00	; 0
 50e:	02 c0       	rjmp	.+4      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 510:	6f ef       	ldi	r22, 0xFF	; 255
 512:	7f ef       	ldi	r23, 0xFF	; 255
 514:	c5 01       	movw	r24, r10
 516:	2d d1       	rcall	.+602    	; 0x772 <strnlen_P>
 518:	4c 01       	movw	r8, r24
 51a:	f3 2d       	mov	r31, r3
 51c:	f0 68       	ori	r31, 0x80	; 128
 51e:	3f 2e       	mov	r3, r31
 520:	82 01       	movw	r16, r4
 522:	33 fc       	sbrc	r3, 3
 524:	19 c0       	rjmp	.+50     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 526:	82 2d       	mov	r24, r2
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	88 16       	cp	r8, r24
 52c:	99 06       	cpc	r9, r25
 52e:	a0 f4       	brcc	.+40     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 530:	b6 01       	movw	r22, r12
 532:	80 e2       	ldi	r24, 0x20	; 32
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	33 d1       	rcall	.+614    	; 0x79e <fputc>
 538:	2a 94       	dec	r2
 53a:	f5 cf       	rjmp	.-22     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 53c:	f5 01       	movw	r30, r10
 53e:	37 fc       	sbrc	r3, 7
 540:	85 91       	lpm	r24, Z+
 542:	37 fe       	sbrs	r3, 7
 544:	81 91       	ld	r24, Z+
 546:	5f 01       	movw	r10, r30
 548:	b6 01       	movw	r22, r12
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	28 d1       	rcall	.+592    	; 0x79e <fputc>
 54e:	21 10       	cpse	r2, r1
 550:	2a 94       	dec	r2
 552:	21 e0       	ldi	r18, 0x01	; 1
 554:	82 1a       	sub	r8, r18
 556:	91 08       	sbc	r9, r1
 558:	81 14       	cp	r8, r1
 55a:	91 04       	cpc	r9, r1
 55c:	79 f7       	brne	.-34     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 55e:	e1 c0       	rjmp	.+450    	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
 560:	84 36       	cpi	r24, 0x64	; 100
 562:	11 f0       	breq	.+4      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 564:	89 36       	cpi	r24, 0x69	; 105
 566:	39 f5       	brne	.+78     	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 568:	f8 01       	movw	r30, r16
 56a:	37 fe       	sbrs	r3, 7
 56c:	07 c0       	rjmp	.+14     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 56e:	60 81       	ld	r22, Z
 570:	71 81       	ldd	r23, Z+1	; 0x01
 572:	82 81       	ldd	r24, Z+2	; 0x02
 574:	93 81       	ldd	r25, Z+3	; 0x03
 576:	0c 5f       	subi	r16, 0xFC	; 252
 578:	1f 4f       	sbci	r17, 0xFF	; 255
 57a:	08 c0       	rjmp	.+16     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 57c:	60 81       	ld	r22, Z
 57e:	71 81       	ldd	r23, Z+1	; 0x01
 580:	07 2e       	mov	r0, r23
 582:	00 0c       	add	r0, r0
 584:	88 0b       	sbc	r24, r24
 586:	99 0b       	sbc	r25, r25
 588:	0e 5f       	subi	r16, 0xFE	; 254
 58a:	1f 4f       	sbci	r17, 0xFF	; 255
 58c:	f3 2d       	mov	r31, r3
 58e:	ff 76       	andi	r31, 0x6F	; 111
 590:	3f 2e       	mov	r3, r31
 592:	97 ff       	sbrs	r25, 7
 594:	09 c0       	rjmp	.+18     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 596:	90 95       	com	r25
 598:	80 95       	com	r24
 59a:	70 95       	com	r23
 59c:	61 95       	neg	r22
 59e:	7f 4f       	sbci	r23, 0xFF	; 255
 5a0:	8f 4f       	sbci	r24, 0xFF	; 255
 5a2:	9f 4f       	sbci	r25, 0xFF	; 255
 5a4:	f0 68       	ori	r31, 0x80	; 128
 5a6:	3f 2e       	mov	r3, r31
 5a8:	2a e0       	ldi	r18, 0x0A	; 10
 5aa:	30 e0       	ldi	r19, 0x00	; 0
 5ac:	a3 01       	movw	r20, r6
 5ae:	33 d1       	rcall	.+614    	; 0x816 <__ultoa_invert>
 5b0:	88 2e       	mov	r8, r24
 5b2:	86 18       	sub	r8, r6
 5b4:	44 c0       	rjmp	.+136    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 5b6:	85 37       	cpi	r24, 0x75	; 117
 5b8:	31 f4       	brne	.+12     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5ba:	23 2d       	mov	r18, r3
 5bc:	2f 7e       	andi	r18, 0xEF	; 239
 5be:	b2 2e       	mov	r11, r18
 5c0:	2a e0       	ldi	r18, 0x0A	; 10
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	25 c0       	rjmp	.+74     	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 5c6:	93 2d       	mov	r25, r3
 5c8:	99 7f       	andi	r25, 0xF9	; 249
 5ca:	b9 2e       	mov	r11, r25
 5cc:	8f 36       	cpi	r24, 0x6F	; 111
 5ce:	c1 f0       	breq	.+48     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5d0:	18 f4       	brcc	.+6      	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5d2:	88 35       	cpi	r24, 0x58	; 88
 5d4:	79 f0       	breq	.+30     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5d6:	ae c0       	rjmp	.+348    	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
 5d8:	80 37       	cpi	r24, 0x70	; 112
 5da:	19 f0       	breq	.+6      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5dc:	88 37       	cpi	r24, 0x78	; 120
 5de:	21 f0       	breq	.+8      	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5e0:	a9 c0       	rjmp	.+338    	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
 5e2:	e9 2f       	mov	r30, r25
 5e4:	e0 61       	ori	r30, 0x10	; 16
 5e6:	be 2e       	mov	r11, r30
 5e8:	b4 fe       	sbrs	r11, 4
 5ea:	0d c0       	rjmp	.+26     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5ec:	fb 2d       	mov	r31, r11
 5ee:	f4 60       	ori	r31, 0x04	; 4
 5f0:	bf 2e       	mov	r11, r31
 5f2:	09 c0       	rjmp	.+18     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5f4:	34 fe       	sbrs	r3, 4
 5f6:	0a c0       	rjmp	.+20     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5f8:	29 2f       	mov	r18, r25
 5fa:	26 60       	ori	r18, 0x06	; 6
 5fc:	b2 2e       	mov	r11, r18
 5fe:	06 c0       	rjmp	.+12     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 600:	28 e0       	ldi	r18, 0x08	; 8
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	05 c0       	rjmp	.+10     	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 606:	20 e1       	ldi	r18, 0x10	; 16
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	02 c0       	rjmp	.+4      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 60c:	20 e1       	ldi	r18, 0x10	; 16
 60e:	32 e0       	ldi	r19, 0x02	; 2
 610:	f8 01       	movw	r30, r16
 612:	b7 fe       	sbrs	r11, 7
 614:	07 c0       	rjmp	.+14     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 616:	60 81       	ld	r22, Z
 618:	71 81       	ldd	r23, Z+1	; 0x01
 61a:	82 81       	ldd	r24, Z+2	; 0x02
 61c:	93 81       	ldd	r25, Z+3	; 0x03
 61e:	0c 5f       	subi	r16, 0xFC	; 252
 620:	1f 4f       	sbci	r17, 0xFF	; 255
 622:	06 c0       	rjmp	.+12     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 624:	60 81       	ld	r22, Z
 626:	71 81       	ldd	r23, Z+1	; 0x01
 628:	80 e0       	ldi	r24, 0x00	; 0
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	0e 5f       	subi	r16, 0xFE	; 254
 62e:	1f 4f       	sbci	r17, 0xFF	; 255
 630:	a3 01       	movw	r20, r6
 632:	f1 d0       	rcall	.+482    	; 0x816 <__ultoa_invert>
 634:	88 2e       	mov	r8, r24
 636:	86 18       	sub	r8, r6
 638:	fb 2d       	mov	r31, r11
 63a:	ff 77       	andi	r31, 0x7F	; 127
 63c:	3f 2e       	mov	r3, r31
 63e:	36 fe       	sbrs	r3, 6
 640:	0d c0       	rjmp	.+26     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 642:	23 2d       	mov	r18, r3
 644:	2e 7f       	andi	r18, 0xFE	; 254
 646:	a2 2e       	mov	r10, r18
 648:	89 14       	cp	r8, r9
 64a:	58 f4       	brcc	.+22     	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 64c:	34 fe       	sbrs	r3, 4
 64e:	0b c0       	rjmp	.+22     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 650:	32 fc       	sbrc	r3, 2
 652:	09 c0       	rjmp	.+18     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 654:	83 2d       	mov	r24, r3
 656:	8e 7e       	andi	r24, 0xEE	; 238
 658:	a8 2e       	mov	r10, r24
 65a:	05 c0       	rjmp	.+10     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 65c:	b8 2c       	mov	r11, r8
 65e:	a3 2c       	mov	r10, r3
 660:	03 c0       	rjmp	.+6      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 662:	b8 2c       	mov	r11, r8
 664:	01 c0       	rjmp	.+2      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 666:	b9 2c       	mov	r11, r9
 668:	a4 fe       	sbrs	r10, 4
 66a:	0f c0       	rjmp	.+30     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 66c:	fe 01       	movw	r30, r28
 66e:	e8 0d       	add	r30, r8
 670:	f1 1d       	adc	r31, r1
 672:	80 81       	ld	r24, Z
 674:	80 33       	cpi	r24, 0x30	; 48
 676:	21 f4       	brne	.+8      	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 678:	9a 2d       	mov	r25, r10
 67a:	99 7e       	andi	r25, 0xE9	; 233
 67c:	a9 2e       	mov	r10, r25
 67e:	09 c0       	rjmp	.+18     	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 680:	a2 fe       	sbrs	r10, 2
 682:	06 c0       	rjmp	.+12     	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 684:	b3 94       	inc	r11
 686:	b3 94       	inc	r11
 688:	04 c0       	rjmp	.+8      	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 68a:	8a 2d       	mov	r24, r10
 68c:	86 78       	andi	r24, 0x86	; 134
 68e:	09 f0       	breq	.+2      	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 690:	b3 94       	inc	r11
 692:	a3 fc       	sbrc	r10, 3
 694:	10 c0       	rjmp	.+32     	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 696:	a0 fe       	sbrs	r10, 0
 698:	06 c0       	rjmp	.+12     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 69a:	b2 14       	cp	r11, r2
 69c:	80 f4       	brcc	.+32     	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 69e:	28 0c       	add	r2, r8
 6a0:	92 2c       	mov	r9, r2
 6a2:	9b 18       	sub	r9, r11
 6a4:	0d c0       	rjmp	.+26     	; 0x6c0 <__LOCK_REGION_LENGTH__+0x2c0>
 6a6:	b2 14       	cp	r11, r2
 6a8:	58 f4       	brcc	.+22     	; 0x6c0 <__LOCK_REGION_LENGTH__+0x2c0>
 6aa:	b6 01       	movw	r22, r12
 6ac:	80 e2       	ldi	r24, 0x20	; 32
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	76 d0       	rcall	.+236    	; 0x79e <fputc>
 6b2:	b3 94       	inc	r11
 6b4:	f8 cf       	rjmp	.-16     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 6b6:	b2 14       	cp	r11, r2
 6b8:	18 f4       	brcc	.+6      	; 0x6c0 <__LOCK_REGION_LENGTH__+0x2c0>
 6ba:	2b 18       	sub	r2, r11
 6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6be:	98 2c       	mov	r9, r8
 6c0:	21 2c       	mov	r2, r1
 6c2:	a4 fe       	sbrs	r10, 4
 6c4:	0f c0       	rjmp	.+30     	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6c6:	b6 01       	movw	r22, r12
 6c8:	80 e3       	ldi	r24, 0x30	; 48
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	68 d0       	rcall	.+208    	; 0x79e <fputc>
 6ce:	a2 fe       	sbrs	r10, 2
 6d0:	16 c0       	rjmp	.+44     	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6d2:	a1 fc       	sbrc	r10, 1
 6d4:	03 c0       	rjmp	.+6      	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6d6:	88 e7       	ldi	r24, 0x78	; 120
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	02 c0       	rjmp	.+4      	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 6dc:	88 e5       	ldi	r24, 0x58	; 88
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	b6 01       	movw	r22, r12
 6e2:	0c c0       	rjmp	.+24     	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 6e4:	8a 2d       	mov	r24, r10
 6e6:	86 78       	andi	r24, 0x86	; 134
 6e8:	51 f0       	breq	.+20     	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6ea:	a1 fe       	sbrs	r10, 1
 6ec:	02 c0       	rjmp	.+4      	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 6ee:	8b e2       	ldi	r24, 0x2B	; 43
 6f0:	01 c0       	rjmp	.+2      	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 6f2:	80 e2       	ldi	r24, 0x20	; 32
 6f4:	a7 fc       	sbrc	r10, 7
 6f6:	8d e2       	ldi	r24, 0x2D	; 45
 6f8:	b6 01       	movw	r22, r12
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	50 d0       	rcall	.+160    	; 0x79e <fputc>
 6fe:	89 14       	cp	r8, r9
 700:	30 f4       	brcc	.+12     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 702:	b6 01       	movw	r22, r12
 704:	80 e3       	ldi	r24, 0x30	; 48
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	4a d0       	rcall	.+148    	; 0x79e <fputc>
 70a:	9a 94       	dec	r9
 70c:	f8 cf       	rjmp	.-16     	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 70e:	8a 94       	dec	r8
 710:	f3 01       	movw	r30, r6
 712:	e8 0d       	add	r30, r8
 714:	f1 1d       	adc	r31, r1
 716:	80 81       	ld	r24, Z
 718:	b6 01       	movw	r22, r12
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	40 d0       	rcall	.+128    	; 0x79e <fputc>
 71e:	81 10       	cpse	r8, r1
 720:	f6 cf       	rjmp	.-20     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 722:	22 20       	and	r2, r2
 724:	09 f4       	brne	.+2      	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 726:	4e ce       	rjmp	.-868    	; 0x3c4 <vfprintf+0x4c>
 728:	b6 01       	movw	r22, r12
 72a:	80 e2       	ldi	r24, 0x20	; 32
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	37 d0       	rcall	.+110    	; 0x79e <fputc>
 730:	2a 94       	dec	r2
 732:	f7 cf       	rjmp	.-18     	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
 734:	f6 01       	movw	r30, r12
 736:	86 81       	ldd	r24, Z+6	; 0x06
 738:	97 81       	ldd	r25, Z+7	; 0x07
 73a:	02 c0       	rjmp	.+4      	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 73c:	8f ef       	ldi	r24, 0xFF	; 255
 73e:	9f ef       	ldi	r25, 0xFF	; 255
 740:	2b 96       	adiw	r28, 0x0b	; 11
 742:	0f b6       	in	r0, 0x3f	; 63
 744:	f8 94       	cli
 746:	de bf       	out	0x3e, r29	; 62
 748:	0f be       	out	0x3f, r0	; 63
 74a:	cd bf       	out	0x3d, r28	; 61
 74c:	df 91       	pop	r29
 74e:	cf 91       	pop	r28
 750:	1f 91       	pop	r17
 752:	0f 91       	pop	r16
 754:	ff 90       	pop	r15
 756:	ef 90       	pop	r14
 758:	df 90       	pop	r13
 75a:	cf 90       	pop	r12
 75c:	bf 90       	pop	r11
 75e:	af 90       	pop	r10
 760:	9f 90       	pop	r9
 762:	8f 90       	pop	r8
 764:	7f 90       	pop	r7
 766:	6f 90       	pop	r6
 768:	5f 90       	pop	r5
 76a:	4f 90       	pop	r4
 76c:	3f 90       	pop	r3
 76e:	2f 90       	pop	r2
 770:	08 95       	ret

00000772 <strnlen_P>:
 772:	fc 01       	movw	r30, r24
 774:	05 90       	lpm	r0, Z+
 776:	61 50       	subi	r22, 0x01	; 1
 778:	70 40       	sbci	r23, 0x00	; 0
 77a:	01 10       	cpse	r0, r1
 77c:	d8 f7       	brcc	.-10     	; 0x774 <strnlen_P+0x2>
 77e:	80 95       	com	r24
 780:	90 95       	com	r25
 782:	8e 0f       	add	r24, r30
 784:	9f 1f       	adc	r25, r31
 786:	08 95       	ret

00000788 <strnlen>:
 788:	fc 01       	movw	r30, r24
 78a:	61 50       	subi	r22, 0x01	; 1
 78c:	70 40       	sbci	r23, 0x00	; 0
 78e:	01 90       	ld	r0, Z+
 790:	01 10       	cpse	r0, r1
 792:	d8 f7       	brcc	.-10     	; 0x78a <strnlen+0x2>
 794:	80 95       	com	r24
 796:	90 95       	com	r25
 798:	8e 0f       	add	r24, r30
 79a:	9f 1f       	adc	r25, r31
 79c:	08 95       	ret

0000079e <fputc>:
 79e:	0f 93       	push	r16
 7a0:	1f 93       	push	r17
 7a2:	cf 93       	push	r28
 7a4:	df 93       	push	r29
 7a6:	fb 01       	movw	r30, r22
 7a8:	23 81       	ldd	r18, Z+3	; 0x03
 7aa:	21 fd       	sbrc	r18, 1
 7ac:	03 c0       	rjmp	.+6      	; 0x7b4 <fputc+0x16>
 7ae:	8f ef       	ldi	r24, 0xFF	; 255
 7b0:	9f ef       	ldi	r25, 0xFF	; 255
 7b2:	2c c0       	rjmp	.+88     	; 0x80c <fputc+0x6e>
 7b4:	22 ff       	sbrs	r18, 2
 7b6:	16 c0       	rjmp	.+44     	; 0x7e4 <fputc+0x46>
 7b8:	46 81       	ldd	r20, Z+6	; 0x06
 7ba:	57 81       	ldd	r21, Z+7	; 0x07
 7bc:	24 81       	ldd	r18, Z+4	; 0x04
 7be:	35 81       	ldd	r19, Z+5	; 0x05
 7c0:	42 17       	cp	r20, r18
 7c2:	53 07       	cpc	r21, r19
 7c4:	44 f4       	brge	.+16     	; 0x7d6 <fputc+0x38>
 7c6:	a0 81       	ld	r26, Z
 7c8:	b1 81       	ldd	r27, Z+1	; 0x01
 7ca:	9d 01       	movw	r18, r26
 7cc:	2f 5f       	subi	r18, 0xFF	; 255
 7ce:	3f 4f       	sbci	r19, 0xFF	; 255
 7d0:	31 83       	std	Z+1, r19	; 0x01
 7d2:	20 83       	st	Z, r18
 7d4:	8c 93       	st	X, r24
 7d6:	26 81       	ldd	r18, Z+6	; 0x06
 7d8:	37 81       	ldd	r19, Z+7	; 0x07
 7da:	2f 5f       	subi	r18, 0xFF	; 255
 7dc:	3f 4f       	sbci	r19, 0xFF	; 255
 7de:	37 83       	std	Z+7, r19	; 0x07
 7e0:	26 83       	std	Z+6, r18	; 0x06
 7e2:	14 c0       	rjmp	.+40     	; 0x80c <fputc+0x6e>
 7e4:	8b 01       	movw	r16, r22
 7e6:	ec 01       	movw	r28, r24
 7e8:	fb 01       	movw	r30, r22
 7ea:	00 84       	ldd	r0, Z+8	; 0x08
 7ec:	f1 85       	ldd	r31, Z+9	; 0x09
 7ee:	e0 2d       	mov	r30, r0
 7f0:	09 95       	icall
 7f2:	89 2b       	or	r24, r25
 7f4:	e1 f6       	brne	.-72     	; 0x7ae <fputc+0x10>
 7f6:	d8 01       	movw	r26, r16
 7f8:	16 96       	adiw	r26, 0x06	; 6
 7fa:	8d 91       	ld	r24, X+
 7fc:	9c 91       	ld	r25, X
 7fe:	17 97       	sbiw	r26, 0x07	; 7
 800:	01 96       	adiw	r24, 0x01	; 1
 802:	17 96       	adiw	r26, 0x07	; 7
 804:	9c 93       	st	X, r25
 806:	8e 93       	st	-X, r24
 808:	16 97       	sbiw	r26, 0x06	; 6
 80a:	ce 01       	movw	r24, r28
 80c:	df 91       	pop	r29
 80e:	cf 91       	pop	r28
 810:	1f 91       	pop	r17
 812:	0f 91       	pop	r16
 814:	08 95       	ret

00000816 <__ultoa_invert>:
 816:	fa 01       	movw	r30, r20
 818:	aa 27       	eor	r26, r26
 81a:	28 30       	cpi	r18, 0x08	; 8
 81c:	51 f1       	breq	.+84     	; 0x872 <__ultoa_invert+0x5c>
 81e:	20 31       	cpi	r18, 0x10	; 16
 820:	81 f1       	breq	.+96     	; 0x882 <__ultoa_invert+0x6c>
 822:	e8 94       	clt
 824:	6f 93       	push	r22
 826:	6e 7f       	andi	r22, 0xFE	; 254
 828:	6e 5f       	subi	r22, 0xFE	; 254
 82a:	7f 4f       	sbci	r23, 0xFF	; 255
 82c:	8f 4f       	sbci	r24, 0xFF	; 255
 82e:	9f 4f       	sbci	r25, 0xFF	; 255
 830:	af 4f       	sbci	r26, 0xFF	; 255
 832:	b1 e0       	ldi	r27, 0x01	; 1
 834:	3e d0       	rcall	.+124    	; 0x8b2 <__ultoa_invert+0x9c>
 836:	b4 e0       	ldi	r27, 0x04	; 4
 838:	3c d0       	rcall	.+120    	; 0x8b2 <__ultoa_invert+0x9c>
 83a:	67 0f       	add	r22, r23
 83c:	78 1f       	adc	r23, r24
 83e:	89 1f       	adc	r24, r25
 840:	9a 1f       	adc	r25, r26
 842:	a1 1d       	adc	r26, r1
 844:	68 0f       	add	r22, r24
 846:	79 1f       	adc	r23, r25
 848:	8a 1f       	adc	r24, r26
 84a:	91 1d       	adc	r25, r1
 84c:	a1 1d       	adc	r26, r1
 84e:	6a 0f       	add	r22, r26
 850:	71 1d       	adc	r23, r1
 852:	81 1d       	adc	r24, r1
 854:	91 1d       	adc	r25, r1
 856:	a1 1d       	adc	r26, r1
 858:	20 d0       	rcall	.+64     	; 0x89a <__ultoa_invert+0x84>
 85a:	09 f4       	brne	.+2      	; 0x85e <__ultoa_invert+0x48>
 85c:	68 94       	set
 85e:	3f 91       	pop	r19
 860:	2a e0       	ldi	r18, 0x0A	; 10
 862:	26 9f       	mul	r18, r22
 864:	11 24       	eor	r1, r1
 866:	30 19       	sub	r19, r0
 868:	30 5d       	subi	r19, 0xD0	; 208
 86a:	31 93       	st	Z+, r19
 86c:	de f6       	brtc	.-74     	; 0x824 <__ultoa_invert+0xe>
 86e:	cf 01       	movw	r24, r30
 870:	08 95       	ret
 872:	46 2f       	mov	r20, r22
 874:	47 70       	andi	r20, 0x07	; 7
 876:	40 5d       	subi	r20, 0xD0	; 208
 878:	41 93       	st	Z+, r20
 87a:	b3 e0       	ldi	r27, 0x03	; 3
 87c:	0f d0       	rcall	.+30     	; 0x89c <__ultoa_invert+0x86>
 87e:	c9 f7       	brne	.-14     	; 0x872 <__ultoa_invert+0x5c>
 880:	f6 cf       	rjmp	.-20     	; 0x86e <__ultoa_invert+0x58>
 882:	46 2f       	mov	r20, r22
 884:	4f 70       	andi	r20, 0x0F	; 15
 886:	40 5d       	subi	r20, 0xD0	; 208
 888:	4a 33       	cpi	r20, 0x3A	; 58
 88a:	18 f0       	brcs	.+6      	; 0x892 <__ultoa_invert+0x7c>
 88c:	49 5d       	subi	r20, 0xD9	; 217
 88e:	31 fd       	sbrc	r19, 1
 890:	40 52       	subi	r20, 0x20	; 32
 892:	41 93       	st	Z+, r20
 894:	02 d0       	rcall	.+4      	; 0x89a <__ultoa_invert+0x84>
 896:	a9 f7       	brne	.-22     	; 0x882 <__ultoa_invert+0x6c>
 898:	ea cf       	rjmp	.-44     	; 0x86e <__ultoa_invert+0x58>
 89a:	b4 e0       	ldi	r27, 0x04	; 4
 89c:	a6 95       	lsr	r26
 89e:	97 95       	ror	r25
 8a0:	87 95       	ror	r24
 8a2:	77 95       	ror	r23
 8a4:	67 95       	ror	r22
 8a6:	ba 95       	dec	r27
 8a8:	c9 f7       	brne	.-14     	; 0x89c <__ultoa_invert+0x86>
 8aa:	00 97       	sbiw	r24, 0x00	; 0
 8ac:	61 05       	cpc	r22, r1
 8ae:	71 05       	cpc	r23, r1
 8b0:	08 95       	ret
 8b2:	9b 01       	movw	r18, r22
 8b4:	ac 01       	movw	r20, r24
 8b6:	0a 2e       	mov	r0, r26
 8b8:	06 94       	lsr	r0
 8ba:	57 95       	ror	r21
 8bc:	47 95       	ror	r20
 8be:	37 95       	ror	r19
 8c0:	27 95       	ror	r18
 8c2:	ba 95       	dec	r27
 8c4:	c9 f7       	brne	.-14     	; 0x8b8 <__ultoa_invert+0xa2>
 8c6:	62 0f       	add	r22, r18
 8c8:	73 1f       	adc	r23, r19
 8ca:	84 1f       	adc	r24, r20
 8cc:	95 1f       	adc	r25, r21
 8ce:	a0 1d       	adc	r26, r0
 8d0:	08 95       	ret

000008d2 <_exit>:
 8d2:	f8 94       	cli

000008d4 <__stop_program>:
 8d4:	ff cf       	rjmp	.-2      	; 0x8d4 <__stop_program>


20180928_practice3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000de  00800100  000007be  00000852  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000019  008001de  008001de  00000930  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000930  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000960  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  000009a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f27  00000000  00000000  00000af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f4f  00000000  00000000  00002a17  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bbd  00000000  00000000  00003966  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c0  00000000  00000000  00004524  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000965  00000000  00000000  000047e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000877  00000000  00000000  00005149  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  000059c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	47 c0       	rjmp	.+142    	; 0x90 <__dtors_end>
   2:	00 00       	nop
   4:	6c c0       	rjmp	.+216    	; 0xde <__bad_interrupt>
   6:	00 00       	nop
   8:	6a c0       	rjmp	.+212    	; 0xde <__bad_interrupt>
   a:	00 00       	nop
   c:	68 c0       	rjmp	.+208    	; 0xde <__bad_interrupt>
   e:	00 00       	nop
  10:	66 c0       	rjmp	.+204    	; 0xde <__bad_interrupt>
  12:	00 00       	nop
  14:	64 c0       	rjmp	.+200    	; 0xde <__bad_interrupt>
  16:	00 00       	nop
  18:	62 c0       	rjmp	.+196    	; 0xde <__bad_interrupt>
  1a:	00 00       	nop
  1c:	60 c0       	rjmp	.+192    	; 0xde <__bad_interrupt>
  1e:	00 00       	nop
  20:	5e c0       	rjmp	.+188    	; 0xde <__bad_interrupt>
  22:	00 00       	nop
  24:	5c c0       	rjmp	.+184    	; 0xde <__bad_interrupt>
  26:	00 00       	nop
  28:	5a c0       	rjmp	.+180    	; 0xde <__bad_interrupt>
  2a:	00 00       	nop
  2c:	58 c0       	rjmp	.+176    	; 0xde <__bad_interrupt>
  2e:	00 00       	nop
  30:	56 c0       	rjmp	.+172    	; 0xde <__bad_interrupt>
  32:	00 00       	nop
  34:	54 c0       	rjmp	.+168    	; 0xde <__bad_interrupt>
  36:	00 00       	nop
  38:	52 c0       	rjmp	.+164    	; 0xde <__bad_interrupt>
  3a:	00 00       	nop
  3c:	50 c0       	rjmp	.+160    	; 0xde <__bad_interrupt>
  3e:	00 00       	nop
  40:	4e c0       	rjmp	.+156    	; 0xde <__bad_interrupt>
  42:	00 00       	nop
  44:	4c c0       	rjmp	.+152    	; 0xde <__bad_interrupt>
  46:	00 00       	nop
  48:	33 c1       	rjmp	.+614    	; 0x2b0 <__vector_18>
  4a:	00 00       	nop
  4c:	48 c0       	rjmp	.+144    	; 0xde <__bad_interrupt>
  4e:	00 00       	nop
  50:	46 c0       	rjmp	.+140    	; 0xde <__bad_interrupt>
  52:	00 00       	nop
  54:	44 c0       	rjmp	.+136    	; 0xde <__bad_interrupt>
  56:	00 00       	nop
  58:	42 c0       	rjmp	.+132    	; 0xde <__bad_interrupt>
  5a:	00 00       	nop
  5c:	40 c0       	rjmp	.+128    	; 0xde <__bad_interrupt>
  5e:	00 00       	nop
  60:	3e c0       	rjmp	.+124    	; 0xde <__bad_interrupt>
  62:	00 00       	nop
  64:	3c c0       	rjmp	.+120    	; 0xde <__bad_interrupt>
  66:	00 00       	nop
  68:	3a c0       	rjmp	.+116    	; 0xde <__bad_interrupt>
  6a:	00 00       	nop
  6c:	38 c0       	rjmp	.+112    	; 0xde <__bad_interrupt>
  6e:	00 00       	nop
  70:	36 c0       	rjmp	.+108    	; 0xde <__bad_interrupt>
  72:	00 00       	nop
  74:	34 c0       	rjmp	.+104    	; 0xde <__bad_interrupt>
  76:	00 00       	nop
  78:	32 c0       	rjmp	.+100    	; 0xde <__bad_interrupt>
  7a:	00 00       	nop
  7c:	30 c0       	rjmp	.+96     	; 0xde <__bad_interrupt>
  7e:	00 00       	nop
  80:	2e c0       	rjmp	.+92     	; 0xde <__bad_interrupt>
  82:	00 00       	nop
  84:	2c c0       	rjmp	.+88     	; 0xde <__bad_interrupt>
  86:	00 00       	nop
  88:	2a c0       	rjmp	.+84     	; 0xde <__bad_interrupt>
	...

0000008c <__ctors_start>:
  8c:	9a 00       	.word	0x009a	; ????

0000008e <__ctors_end>:
  8e:	a4 00       	.word	0x00a4	; ????

00000090 <__dtors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	d0 e1       	ldi	r29, 0x10	; 16
  98:	de bf       	out	0x3e, r29	; 62
  9a:	cd bf       	out	0x3d, r28	; 61

0000009c <__do_copy_data>:
  9c:	11 e0       	ldi	r17, 0x01	; 1
  9e:	a0 e0       	ldi	r26, 0x00	; 0
  a0:	b1 e0       	ldi	r27, 0x01	; 1
  a2:	ee eb       	ldi	r30, 0xBE	; 190
  a4:	f7 e0       	ldi	r31, 0x07	; 7
  a6:	00 e0       	ldi	r16, 0x00	; 0
  a8:	0b bf       	out	0x3b, r16	; 59
  aa:	02 c0       	rjmp	.+4      	; 0xb0 <__do_copy_data+0x14>
  ac:	07 90       	elpm	r0, Z+
  ae:	0d 92       	st	X+, r0
  b0:	ae 3d       	cpi	r26, 0xDE	; 222
  b2:	b1 07       	cpc	r27, r17
  b4:	d9 f7       	brne	.-10     	; 0xac <__do_copy_data+0x10>

000000b6 <__do_clear_bss>:
  b6:	21 e0       	ldi	r18, 0x01	; 1
  b8:	ae ed       	ldi	r26, 0xDE	; 222
  ba:	b1 e0       	ldi	r27, 0x01	; 1
  bc:	01 c0       	rjmp	.+2      	; 0xc0 <.do_clear_bss_start>

000000be <.do_clear_bss_loop>:
  be:	1d 92       	st	X+, r1

000000c0 <.do_clear_bss_start>:
  c0:	a7 3f       	cpi	r26, 0xF7	; 247
  c2:	b2 07       	cpc	r27, r18
  c4:	e1 f7       	brne	.-8      	; 0xbe <.do_clear_bss_loop>

000000c6 <__do_global_ctors>:
  c6:	10 e0       	ldi	r17, 0x00	; 0
  c8:	c7 e4       	ldi	r28, 0x47	; 71
  ca:	d0 e0       	ldi	r29, 0x00	; 0
  cc:	03 c0       	rjmp	.+6      	; 0xd4 <__do_global_ctors+0xe>
  ce:	21 97       	sbiw	r28, 0x01	; 1
  d0:	fe 01       	movw	r30, r28
  d2:	60 d3       	rcall	.+1728   	; 0x794 <__tablejump2__>
  d4:	c6 34       	cpi	r28, 0x46	; 70
  d6:	d1 07       	cpc	r29, r17
  d8:	d1 f7       	brne	.-12     	; 0xce <__do_global_ctors+0x8>
  da:	02 d0       	rcall	.+4      	; 0xe0 <main>
  dc:	64 c3       	rjmp	.+1736   	; 0x7a6 <__do_global_dtors>

000000de <__bad_interrupt>:
  de:	90 cf       	rjmp	.-224    	; 0x0 <__vectors>

000000e0 <main>:
		case TURN_RIGHT:
		motor.RUN_RIGHT();
		break;
		
		case TURN_LEFT:
		motor.RUN_LEFT();
  e0:	78 94       	sei
  e2:	8e ed       	ldi	r24, 0xDE	; 222
  e4:	91 e0       	ldi	r25, 0x01	; 1
  e6:	50 d1       	rcall	.+672    	; 0x388 <_ZN10ULTRASONIC18measure_distance_1Ev>
  e8:	d8 2f       	mov	r29, r24
  ea:	8e ed       	ldi	r24, 0xDE	; 222
  ec:	91 e0       	ldi	r25, 0x01	; 1
  ee:	8c d1       	rcall	.+792    	; 0x408 <_ZN10ULTRASONIC18measure_distance_2Ev>
  f0:	c8 2f       	mov	r28, r24
  f2:	60 e0       	ldi	r22, 0x00	; 0
  f4:	71 e0       	ldi	r23, 0x01	; 1
  f6:	80 ee       	ldi	r24, 0xE0	; 224
  f8:	91 e0       	ldi	r25, 0x01	; 1
  fa:	70 d0       	rcall	.+224    	; 0x1dc <_ZN5UART012print_stringEPc>
  fc:	6d 2f       	mov	r22, r29
  fe:	80 ee       	ldi	r24, 0xE0	; 224
 100:	91 e0       	ldi	r25, 0x01	; 1
 102:	80 d0       	rcall	.+256    	; 0x204 <_ZN5UART019print_1_byte_numberEh>
 104:	66 e0       	ldi	r22, 0x06	; 6
 106:	71 e0       	ldi	r23, 0x01	; 1
 108:	80 ee       	ldi	r24, 0xE0	; 224
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	67 d0       	rcall	.+206    	; 0x1dc <_ZN5UART012print_stringEPc>
 10e:	6b e0       	ldi	r22, 0x0B	; 11
 110:	71 e0       	ldi	r23, 0x01	; 1
 112:	80 ee       	ldi	r24, 0xE0	; 224
 114:	91 e0       	ldi	r25, 0x01	; 1
 116:	62 d0       	rcall	.+196    	; 0x1dc <_ZN5UART012print_stringEPc>
 118:	6c 2f       	mov	r22, r28
 11a:	80 ee       	ldi	r24, 0xE0	; 224
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	72 d0       	rcall	.+228    	; 0x204 <_ZN5UART019print_1_byte_numberEh>
 120:	2f ef       	ldi	r18, 0xFF	; 255
 122:	89 e6       	ldi	r24, 0x69	; 105
 124:	98 e1       	ldi	r25, 0x18	; 24
 126:	21 50       	subi	r18, 0x01	; 1
 128:	80 40       	sbci	r24, 0x00	; 0
 12a:	90 40       	sbci	r25, 0x00	; 0
 12c:	e1 f7       	brne	.-8      	; 0x126 <main+0x46>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <main+0x50>
 130:	00 00       	nop
 132:	d7 cf       	rjmp	.-82     	; 0xe2 <main+0x2>

00000134 <_GLOBAL__sub_I_select_mode>:

using namespace std;

uint8_t select_mode=0, states=0;

UART0 uart0;
 134:	80 ee       	ldi	r24, 0xE0	; 224
 136:	91 e0       	ldi	r25, 0x01	; 1
 138:	49 d0       	rcall	.+146    	; 0x1cc <_ZN5UART0C1Ev>
MOTOR motor;
 13a:	8f ed       	ldi	r24, 0xDF	; 223
 13c:	91 e0       	ldi	r25, 0x01	; 1
 13e:	0e d0       	rcall	.+28     	; 0x15c <_ZN5MOTORC1Ev>
ULTRASONIC ultrasonic;
 140:	8e ed       	ldi	r24, 0xDE	; 222
 142:	91 e0       	ldi	r25, 0x01	; 1
 144:	00 c1       	rjmp	.+512    	; 0x346 <_ZN10ULTRASONICC1Ev>
 146:	08 95       	ret

00000148 <_GLOBAL__sub_D_select_mode>:
 148:	8e ed       	ldi	r24, 0xDE	; 222
 14a:	91 e0       	ldi	r25, 0x01	; 1
 14c:	08 d1       	rcall	.+528    	; 0x35e <_ZN10ULTRASONICD1Ev>
using namespace std;

uint8_t select_mode=0, states=0;

UART0 uart0;
MOTOR motor;
 14e:	8f ed       	ldi	r24, 0xDF	; 223
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	33 d0       	rcall	.+102    	; 0x1ba <_ZN5MOTORD1Ev>

using namespace std;

uint8_t select_mode=0, states=0;

UART0 uart0;
 154:	80 ee       	ldi	r24, 0xE0	; 224
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	31 c0       	rjmp	.+98     	; 0x1bc <_ZN5UART0D1Ev>
 15a:	08 95       	ret

0000015c <_ZN5MOTORC1Ev>:


MOTOR::MOTOR() // 생성자 > PORT, PWM 초기화
{
	// Init port for motors
	DDRB |= (1 << PB5) | (1 << PB6);
 15c:	87 b3       	in	r24, 0x17	; 23
 15e:	80 66       	ori	r24, 0x60	; 96
 160:	87 bb       	out	0x17, r24	; 23
	DDRE |= (1 << PE3) | (1 << PE4);
 162:	82 b1       	in	r24, 0x02	; 2
 164:	88 61       	ori	r24, 0x18	; 24
 166:	82 b9       	out	0x02, r24	; 2
	
	// Init PWM for motors
	TCCR1A |= (1 << WGM10) | (0 << WGM11);
 168:	8f b5       	in	r24, 0x2f	; 47
 16a:	81 60       	ori	r24, 0x01	; 1
 16c:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << WGM12) | (0 << WGM13);
 16e:	8e b5       	in	r24, 0x2e	; 46
 170:	88 60       	ori	r24, 0x08	; 8
 172:	8e bd       	out	0x2e, r24	; 46
	TCCR1A |= (1 << COM1B1) | (1 << COM1A1);
 174:	8f b5       	in	r24, 0x2f	; 47
 176:	80 6a       	ori	r24, 0xA0	; 160
 178:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (0 << CS12) | (1 << CS11) | (1 << CS10);
 17a:	8e b5       	in	r24, 0x2e	; 46
 17c:	83 60       	ori	r24, 0x03	; 3
 17e:	8e bd       	out	0x2e, r24	; 46
	
	//분주비 64, 고속 PWM
	TCCR3A |= (1 << WGM30) | (0 << WGM31);
 180:	ab e8       	ldi	r26, 0x8B	; 139
 182:	b0 e0       	ldi	r27, 0x00	; 0
 184:	8c 91       	ld	r24, X
 186:	81 60       	ori	r24, 0x01	; 1
 188:	8c 93       	st	X, r24
	TCCR3B |= (1 << WGM32) | (0 << WGM33);
 18a:	ea e8       	ldi	r30, 0x8A	; 138
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	88 60       	ori	r24, 0x08	; 8
 192:	80 83       	st	Z, r24
	TCCR3A |= (1 << COM3B1) | (1 << COM3A1);
 194:	8c 91       	ld	r24, X
 196:	80 6a       	ori	r24, 0xA0	; 160
 198:	8c 93       	st	X, r24
	TCCR3B |= (0 << CS32) | (1 << CS31) | (1 << CS30);
 19a:	80 81       	ld	r24, Z
 19c:	83 60       	ori	r24, 0x03	; 3
 19e:	80 83       	st	Z, r24
	
	OCR1A = 0;
 1a0:	1b bc       	out	0x2b, r1	; 43
 1a2:	1a bc       	out	0x2a, r1	; 42
	OCR1B = 0;
 1a4:	19 bc       	out	0x29, r1	; 41
 1a6:	18 bc       	out	0x28, r1	; 40
	OCR3A = 0;
 1a8:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 1ac:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	OCR3B = 0;
 1b0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1b4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 1b8:	08 95       	ret

000001ba <_ZN5MOTORD1Ev>:
}

MOTOR::~MOTOR() // 소멸자
 1ba:	08 95       	ret

000001bc <_ZN5UART0D1Ev>:

	data = rx0_buffer[rx0_tail];
	rx0_tail = (rx0_tail==LENGTH_RX0_BUFFER-1) ? 0 : rx0_tail + 1;
	
	return data;
}
 1bc:	08 95       	ret

000001be <_ZN5UART04initEj>:
 1be:	8a b1       	in	r24, 0x0a	; 10
 1c0:	88 69       	ori	r24, 0x98	; 152
 1c2:	8a b9       	out	0x0a, r24	; 10
 1c4:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 1c8:	69 b9       	out	0x09, r22	; 9
 1ca:	08 95       	ret

000001cc <_ZN5UART0C1Ev>:
 1cc:	67 e6       	ldi	r22, 0x67	; 103
 1ce:	70 e0       	ldi	r23, 0x00	; 0
 1d0:	f6 cf       	rjmp	.-20     	; 0x1be <_ZN5UART04initEj>
 1d2:	08 95       	ret

000001d4 <_ZN5UART08transmitEc>:
 1d4:	5d 9b       	sbis	0x0b, 5	; 11
 1d6:	fe cf       	rjmp	.-4      	; 0x1d4 <_ZN5UART08transmitEc>
 1d8:	6c b9       	out	0x0c, r22	; 12
 1da:	08 95       	ret

000001dc <_ZN5UART012print_stringEPc>:
 1dc:	0f 93       	push	r16
 1de:	1f 93       	push	r17
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	eb 01       	movw	r28, r22
 1e6:	68 81       	ld	r22, Y
 1e8:	66 23       	and	r22, r22
 1ea:	39 f0       	breq	.+14     	; 0x1fa <_ZN5UART012print_stringEPc+0x1e>
 1ec:	8c 01       	movw	r16, r24
 1ee:	21 96       	adiw	r28, 0x01	; 1
 1f0:	c8 01       	movw	r24, r16
 1f2:	f0 df       	rcall	.-32     	; 0x1d4 <_ZN5UART08transmitEc>
 1f4:	69 91       	ld	r22, Y+
 1f6:	61 11       	cpse	r22, r1
 1f8:	fb cf       	rjmp	.-10     	; 0x1f0 <_ZN5UART012print_stringEPc+0x14>
 1fa:	df 91       	pop	r29
 1fc:	cf 91       	pop	r28
 1fe:	1f 91       	pop	r17
 200:	0f 91       	pop	r16
 202:	08 95       	ret

00000204 <_ZN5UART019print_1_byte_numberEh>:

void UART0::print_1_byte_number(uint8_t n)
{
 204:	ef 92       	push	r14
 206:	ff 92       	push	r15
 208:	0f 93       	push	r16
 20a:	1f 93       	push	r17
 20c:	cf 93       	push	r28
 20e:	df 93       	push	r29
 210:	00 d0       	rcall	.+0      	; 0x212 <_ZN5UART019print_1_byte_numberEh+0xe>
 212:	00 d0       	rcall	.+0      	; 0x214 <_ZN5UART019print_1_byte_numberEh+0x10>
 214:	1f 92       	push	r1
 216:	cd b7       	in	r28, 0x3d	; 61
 218:	de b7       	in	r29, 0x3e	; 62
 21a:	16 2f       	mov	r17, r22
	UART0 uart0;
 21c:	ce 01       	movw	r24, r28
 21e:	01 96       	adiw	r24, 0x01	; 1
 220:	d5 df       	rcall	.-86     	; 0x1cc <_ZN5UART0C1Ev>
	
	char numString[4] = "0";
 222:	80 e3       	ldi	r24, 0x30	; 48
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	9b 83       	std	Y+3, r25	; 0x03
 228:	8a 83       	std	Y+2, r24	; 0x02
 22a:	1d 82       	std	Y+5, r1	; 0x05
 22c:	1c 82       	std	Y+4, r1	; 0x04
	int i, index = 0;
	
	if(n > 0)
 22e:	11 23       	and	r17, r17
 230:	11 f1       	breq	.+68     	; 0x276 <_ZN5UART019print_1_byte_numberEh+0x72>
 232:	fe 01       	movw	r30, r28
 234:	32 96       	adiw	r30, 0x02	; 2
 236:	e1 2c       	mov	r14, r1
 238:	f1 2c       	mov	r15, r1
	{
		for(i = 0; n != 0; i++)
		{
			numString[i] = n % 10 + '0';
 23a:	3d ec       	ldi	r19, 0xCD	; 205
 23c:	01 c0       	rjmp	.+2      	; 0x240 <_ZN5UART019print_1_byte_numberEh+0x3c>
	char numString[4] = "0";
	int i, index = 0;
	
	if(n > 0)
	{
		for(i = 0; n != 0; i++)
 23e:	7c 01       	movw	r14, r24
		{
			numString[i] = n % 10 + '0';
 240:	13 9f       	mul	r17, r19
 242:	81 2d       	mov	r24, r1
 244:	11 24       	eor	r1, r1
 246:	86 95       	lsr	r24
 248:	86 95       	lsr	r24
 24a:	86 95       	lsr	r24
 24c:	28 2f       	mov	r18, r24
 24e:	22 0f       	add	r18, r18
 250:	92 2f       	mov	r25, r18
 252:	99 0f       	add	r25, r25
 254:	99 0f       	add	r25, r25
 256:	92 0f       	add	r25, r18
 258:	19 1b       	sub	r17, r25
 25a:	10 5d       	subi	r17, 0xD0	; 208
 25c:	11 93       	st	Z+, r17
			n = n/10;
 25e:	18 2f       	mov	r17, r24
	char numString[4] = "0";
	int i, index = 0;
	
	if(n > 0)
	{
		for(i = 0; n != 0; i++)
 260:	c7 01       	movw	r24, r14
 262:	01 96       	adiw	r24, 0x01	; 1
 264:	11 11       	cpse	r17, r1
 266:	eb cf       	rjmp	.-42     	; 0x23e <_ZN5UART019print_1_byte_numberEh+0x3a>
		{
			numString[i] = n % 10 + '0';
			n = n/10;
		}
		numString[i] = '\0';
 268:	fe 01       	movw	r30, r28
 26a:	e8 0f       	add	r30, r24
 26c:	f9 1f       	adc	r31, r25
 26e:	12 82       	std	Z+2, r1	; 0x02
		index = i-1;
	}
	for(i = index; i >= 0; i--)
 270:	ff 20       	and	r15, r15
 272:	1c f4       	brge	.+6      	; 0x27a <_ZN5UART019print_1_byte_numberEh+0x76>
 274:	11 c0       	rjmp	.+34     	; 0x298 <_ZN5UART019print_1_byte_numberEh+0x94>
void UART0::print_1_byte_number(uint8_t n)
{
	UART0 uart0;
	
	char numString[4] = "0";
	int i, index = 0;
 276:	e1 2c       	mov	r14, r1
 278:	f1 2c       	mov	r15, r1
 27a:	8e 01       	movw	r16, r28
 27c:	0e 0d       	add	r16, r14
 27e:	1f 1d       	adc	r17, r15
 280:	0d 5f       	subi	r16, 0xFD	; 253
 282:	1f 4f       	sbci	r17, 0xFF	; 255
		numString[i] = '\0';
		index = i-1;
	}
	for(i = index; i >= 0; i--)
	{
		uart0.transmit(numString[i]);
 284:	f8 01       	movw	r30, r16
 286:	62 91       	ld	r22, -Z
 288:	8f 01       	movw	r16, r30
 28a:	ce 01       	movw	r24, r28
 28c:	01 96       	adiw	r24, 0x01	; 1
 28e:	a2 df       	rcall	.-188    	; 0x1d4 <_ZN5UART08transmitEc>
			n = n/10;
		}
		numString[i] = '\0';
		index = i-1;
	}
	for(i = index; i >= 0; i--)
 290:	f1 e0       	ldi	r31, 0x01	; 1
 292:	ef 1a       	sub	r14, r31
 294:	f1 08       	sbc	r15, r1
 296:	b2 f7       	brpl	.-20     	; 0x284 <_ZN5UART019print_1_byte_numberEh+0x80>
	{
		uart0.transmit(numString[i]);
	}
}
 298:	0f 90       	pop	r0
 29a:	0f 90       	pop	r0
 29c:	0f 90       	pop	r0
 29e:	0f 90       	pop	r0
 2a0:	0f 90       	pop	r0
 2a2:	df 91       	pop	r29
 2a4:	cf 91       	pop	r28
 2a6:	1f 91       	pop	r17
 2a8:	0f 91       	pop	r16
 2aa:	ff 90       	pop	r15
 2ac:	ef 90       	pop	r14
 2ae:	08 95       	ret

000002b0 <__vector_18>:

// USART1 RXC interrupt service
ISR(USART0_RX_vect)
{
 2b0:	1f 92       	push	r1
 2b2:	0f 92       	push	r0
 2b4:	0f b6       	in	r0, 0x3f	; 63
 2b6:	0f 92       	push	r0
 2b8:	11 24       	eor	r1, r1
 2ba:	0b b6       	in	r0, 0x3b	; 59
 2bc:	0f 92       	push	r0
 2be:	2f 93       	push	r18
 2c0:	3f 93       	push	r19
 2c2:	8f 93       	push	r24
 2c4:	9f 93       	push	r25
 2c6:	ef 93       	push	r30
 2c8:	ff 93       	push	r31
 2ca:	cf 93       	push	r28
 2cc:	df 93       	push	r29
 2ce:	1f 92       	push	r1
 2d0:	cd b7       	in	r28, 0x3d	; 61
 2d2:	de b7       	in	r29, 0x3e	; 62
	volatile unsigned char data;
	
	// rx_buffer[] full, 마지막 수신 문자 버림
	if( (rx0_head+1==rx0_tail) || ((rx0_head==LENGTH_RX0_BUFFER-1) && (rx0_tail==0)) ){
 2d4:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <rx0_head>
 2d8:	20 91 e1 01 	lds	r18, 0x01E1	; 0x8001e1 <rx0_tail>
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	01 96       	adiw	r24, 0x01	; 1
 2e0:	30 e0       	ldi	r19, 0x00	; 0
 2e2:	82 17       	cp	r24, r18
 2e4:	93 07       	cpc	r25, r19
 2e6:	79 f0       	breq	.+30     	; 0x306 <__vector_18+0x56>
 2e8:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <rx0_head>
 2ec:	83 31       	cpi	r24, 0x13	; 19
 2ee:	71 f4       	brne	.+28     	; 0x30c <__vector_18+0x5c>
 2f0:	80 91 e1 01 	lds	r24, 0x01E1	; 0x8001e1 <rx0_tail>
 2f4:	88 23       	and	r24, r24
 2f6:	39 f0       	breq	.+14     	; 0x306 <__vector_18+0x56>
 2f8:	09 c0       	rjmp	.+18     	; 0x30c <__vector_18+0x5c>
		data = UDR0;
		}else{
		rx0_buffer[rx0_head] = UDR0;
		rx0_head = (rx0_head==LENGTH_RX0_BUFFER-1) ? 0 : rx0_head+1;
 2fa:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <rx0_head>
 2fe:	8f 5f       	subi	r24, 0xFF	; 255
 300:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <rx0_head>
	}
}
 304:	10 c0       	rjmp	.+32     	; 0x326 <__vector_18+0x76>
{
	volatile unsigned char data;
	
	// rx_buffer[] full, 마지막 수신 문자 버림
	if( (rx0_head+1==rx0_tail) || ((rx0_head==LENGTH_RX0_BUFFER-1) && (rx0_tail==0)) ){
		data = UDR0;
 306:	8c b1       	in	r24, 0x0c	; 12
 308:	89 83       	std	Y+1, r24	; 0x01
 30a:	0d c0       	rjmp	.+26     	; 0x326 <__vector_18+0x76>
		}else{
		rx0_buffer[rx0_head] = UDR0;
 30c:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <rx0_head>
 310:	f0 e0       	ldi	r31, 0x00	; 0
 312:	8c b1       	in	r24, 0x0c	; 12
 314:	ed 51       	subi	r30, 0x1D	; 29
 316:	fe 4f       	sbci	r31, 0xFE	; 254
 318:	80 83       	st	Z, r24
		rx0_head = (rx0_head==LENGTH_RX0_BUFFER-1) ? 0 : rx0_head+1;
 31a:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <rx0_head>
 31e:	83 31       	cpi	r24, 0x13	; 19
 320:	61 f7       	brne	.-40     	; 0x2fa <__vector_18+0x4a>
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	ed cf       	rjmp	.-38     	; 0x300 <__vector_18+0x50>
	}
}
 326:	0f 90       	pop	r0
 328:	df 91       	pop	r29
 32a:	cf 91       	pop	r28
 32c:	ff 91       	pop	r31
 32e:	ef 91       	pop	r30
 330:	9f 91       	pop	r25
 332:	8f 91       	pop	r24
 334:	3f 91       	pop	r19
 336:	2f 91       	pop	r18
 338:	0f 90       	pop	r0
 33a:	0b be       	out	0x3b, r0	; 59
 33c:	0f 90       	pop	r0
 33e:	0f be       	out	0x3f, r0	; 63
 340:	0f 90       	pop	r0
 342:	1f 90       	pop	r1
 344:	18 95       	reti

00000346 <_ZN10ULTRASONICC1Ev>:

#include "ULTRASONIC.h"

ULTRASONIC::ULTRASONIC()
{
	TCCR0 |= (1 << CS02) | (1 << CS01) | (1 << CS00); //8비트 타이머 0번 타이머/카운터 분주비를 1024로 설정
 346:	83 b7       	in	r24, 0x33	; 51
 348:	87 60       	ori	r24, 0x07	; 7
 34a:	83 bf       	out	0x33, r24	; 51
	
	ULTAR_DDR |= (1 << ULTRA_TRIG_1) | (1 << ULTRA_TRIG_2);
 34c:	e4 e6       	ldi	r30, 0x64	; 100
 34e:	f0 e0       	ldi	r31, 0x00	; 0
 350:	80 81       	ld	r24, Z
 352:	8a 60       	ori	r24, 0x0A	; 10
 354:	80 83       	st	Z, r24
	ULTAR_DDR &= ~(1 <<ULTRA_ECHO_1) | (1 << ULTRA_TRIG_2);
 356:	80 81       	ld	r24, Z
 358:	8b 7f       	andi	r24, 0xFB	; 251
 35a:	80 83       	st	Z, r24
 35c:	08 95       	ret

0000035e <_ZN10ULTRASONICD1Ev>:
}

ULTRASONIC::~ULTRASONIC()
 35e:	08 95       	ret

00000360 <_ZN10ULTRASONIC7TriggerEv>:
}

void ULTRASONIC::Trigger(void)
{
	//트리거 핀으로 펄스 출력
	ULTRA_PORT &= ~(1 << ULTRA_TRIG_1) | (1 << ULTRA_TRIG_2);
 360:	e5 e6       	ldi	r30, 0x65	; 101
 362:	f0 e0       	ldi	r31, 0x00	; 0
 364:	80 81       	ld	r24, Z
 366:	8d 7f       	andi	r24, 0xFD	; 253
 368:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 36a:	85 e0       	ldi	r24, 0x05	; 5
 36c:	8a 95       	dec	r24
 36e:	f1 f7       	brne	.-4      	; 0x36c <_ZN10ULTRASONIC7TriggerEv+0xc>
 370:	00 00       	nop
	_delay_us(1);
	ULTRA_PORT |= (1 << ULTRA_TRIG_1) | (1 << ULTRA_TRIG_2);
 372:	80 81       	ld	r24, Z
 374:	8a 60       	ori	r24, 0x0A	; 10
 376:	80 83       	st	Z, r24
 378:	85 e3       	ldi	r24, 0x35	; 53
 37a:	8a 95       	dec	r24
 37c:	f1 f7       	brne	.-4      	; 0x37a <_ZN10ULTRASONIC7TriggerEv+0x1a>
 37e:	00 00       	nop
	_delay_us(10);
	ULTRA_PORT &= ~(1 << ULTRA_TRIG_1) | (1 << ULTRA_TRIG_2);
 380:	80 81       	ld	r24, Z
 382:	8d 7f       	andi	r24, 0xFD	; 253
 384:	80 83       	st	Z, r24
 386:	08 95       	ret

00000388 <_ZN10ULTRASONIC18measure_distance_1Ev>:
}

uint8_t ULTRASONIC::measure_distance_1(void)
{
 388:	cf 93       	push	r28
 38a:	df 93       	push	r29
 38c:	1f 92       	push	r1
 38e:	cd b7       	in	r28, 0x3d	; 61
 390:	de b7       	in	r29, 0x3e	; 62
	ULTRASONIC ultrasonic;
 392:	ce 01       	movw	r24, r28
 394:	01 96       	adiw	r24, 0x01	; 1
 396:	d7 df       	rcall	.-82     	; 0x346 <_ZN10ULTRASONICC1Ev>
	
	ultrasonic.Trigger();
 398:	ce 01       	movw	r24, r28
 39a:	01 96       	adiw	r24, 0x01	; 1
 39c:	e1 df       	rcall	.-62     	; 0x360 <_ZN10ULTRASONIC7TriggerEv>
	
	TCNT0 = 0;
 39e:	12 be       	out	0x32, r1	; 50
	while(!(ULTRA_PIN & (1 << ULTRA_ECHO_1))) // echo pin이 high가 될 때까지 대기
 3a0:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
 3a4:	82 fd       	sbrc	r24, 2
 3a6:	06 c0       	rjmp	.+12     	; 0x3b4 <_ZN10ULTRASONIC18measure_distance_1Ev+0x2c>
 3a8:	e3 e6       	ldi	r30, 0x63	; 99
 3aa:	f0 e0       	ldi	r31, 0x00	; 0
	{
		if(TCNT0 > 255)
 3ac:	82 b7       	in	r24, 0x32	; 50
	ULTRASONIC ultrasonic;
	
	ultrasonic.Trigger();
	
	TCNT0 = 0;
	while(!(ULTRA_PIN & (1 << ULTRA_ECHO_1))) // echo pin이 high가 될 때까지 대기
 3ae:	80 81       	ld	r24, Z
 3b0:	82 ff       	sbrs	r24, 2
 3b2:	fc cf       	rjmp	.-8      	; 0x3ac <_ZN10ULTRASONIC18measure_distance_1Ev+0x24>
	{
		if(TCNT0 > 255)
		return 0;
	}
	
	TCNT0 = 0;
 3b4:	12 be       	out	0x32, r1	; 50
	while(ULTRA_PIN & (1 << ULTRA_ECHO_1))
 3b6:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
 3ba:	82 ff       	sbrs	r24, 2
 3bc:	06 c0       	rjmp	.+12     	; 0x3ca <_ZN10ULTRASONIC18measure_distance_1Ev+0x42>
 3be:	e3 e6       	ldi	r30, 0x63	; 99
 3c0:	f0 e0       	ldi	r31, 0x00	; 0
	{
		if(TCNT0 > 255)
 3c2:	82 b7       	in	r24, 0x32	; 50
		if(TCNT0 > 255)
		return 0;
	}
	
	TCNT0 = 0;
	while(ULTRA_PIN & (1 << ULTRA_ECHO_1))
 3c4:	80 81       	ld	r24, Z
 3c6:	82 fd       	sbrc	r24, 2
 3c8:	fc cf       	rjmp	.-8      	; 0x3c2 <_ZN10ULTRASONIC18measure_distance_1Ev+0x3a>
			TCNT0 = 0;
			break;
		}
	}
	
	double pulse_width = 1000000.0*TCNT0*PRESCALER/F_CPU;
 3ca:	62 b7       	in	r22, 0x32	; 50
 3cc:	70 e0       	ldi	r23, 0x00	; 0
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	f1 d0       	rcall	.+482    	; 0x5b6 <__floatsisf>
 3d4:	20 e0       	ldi	r18, 0x00	; 0
 3d6:	34 e2       	ldi	r19, 0x24	; 36
 3d8:	44 e7       	ldi	r20, 0x74	; 116
 3da:	59 e4       	ldi	r21, 0x49	; 73
 3dc:	78 d1       	rcall	.+752    	; 0x6ce <__mulsf3>
 3de:	20 e0       	ldi	r18, 0x00	; 0
 3e0:	30 e0       	ldi	r19, 0x00	; 0
 3e2:	40 e8       	ldi	r20, 0x80	; 128
 3e4:	54 e4       	ldi	r21, 0x44	; 68
 3e6:	73 d1       	rcall	.+742    	; 0x6ce <__mulsf3>
 3e8:	20 e0       	ldi	r18, 0x00	; 0
 3ea:	34 e2       	ldi	r19, 0x24	; 36
 3ec:	44 e7       	ldi	r20, 0x74	; 116
 3ee:	5b e4       	ldi	r21, 0x4B	; 75
 3f0:	4c d0       	rcall	.+152    	; 0x48a <__divsf3>
 3f2:	20 e0       	ldi	r18, 0x00	; 0
 3f4:	30 e0       	ldi	r19, 0x00	; 0
 3f6:	48 e6       	ldi	r20, 0x68	; 104
 3f8:	52 e4       	ldi	r21, 0x42	; 66
 3fa:	47 d0       	rcall	.+142    	; 0x48a <__divsf3>
 3fc:	ae d0       	rcall	.+348    	; 0x55a <__fixunssfsi>
 3fe:	86 2f       	mov	r24, r22
	
	return pulse_width / 58;
}
 400:	0f 90       	pop	r0
 402:	df 91       	pop	r29
 404:	cf 91       	pop	r28
 406:	08 95       	ret

00000408 <_ZN10ULTRASONIC18measure_distance_2Ev>:

uint8_t ULTRASONIC::measure_distance_2(void)
{
 408:	cf 93       	push	r28
 40a:	df 93       	push	r29
 40c:	1f 92       	push	r1
 40e:	cd b7       	in	r28, 0x3d	; 61
 410:	de b7       	in	r29, 0x3e	; 62
	ULTRASONIC ultrasonic;
 412:	ce 01       	movw	r24, r28
 414:	01 96       	adiw	r24, 0x01	; 1
 416:	97 df       	rcall	.-210    	; 0x346 <_ZN10ULTRASONICC1Ev>
	
	ultrasonic.Trigger();
 418:	ce 01       	movw	r24, r28
 41a:	01 96       	adiw	r24, 0x01	; 1
 41c:	a1 df       	rcall	.-190    	; 0x360 <_ZN10ULTRASONIC7TriggerEv>
	
	TCNT0 = 0;
 41e:	12 be       	out	0x32, r1	; 50
	while(!(ULTRA_PIN & (1 << ULTRA_ECHO_2))) // echo pin이 high가 될 때까지 대기
 420:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
 424:	84 fd       	sbrc	r24, 4
 426:	06 c0       	rjmp	.+12     	; 0x434 <_ZN10ULTRASONIC18measure_distance_2Ev+0x2c>
 428:	e3 e6       	ldi	r30, 0x63	; 99
 42a:	f0 e0       	ldi	r31, 0x00	; 0
	{
		if(TCNT0 > 255)
 42c:	82 b7       	in	r24, 0x32	; 50
	ULTRASONIC ultrasonic;
	
	ultrasonic.Trigger();
	
	TCNT0 = 0;
	while(!(ULTRA_PIN & (1 << ULTRA_ECHO_2))) // echo pin이 high가 될 때까지 대기
 42e:	80 81       	ld	r24, Z
 430:	84 ff       	sbrs	r24, 4
 432:	fc cf       	rjmp	.-8      	; 0x42c <_ZN10ULTRASONIC18measure_distance_2Ev+0x24>
	{
		if(TCNT0 > 255)
		return 0;
	}
	
	TCNT1 = 0;
 434:	1d bc       	out	0x2d, r1	; 45
 436:	1c bc       	out	0x2c, r1	; 44
	while(ULTRA_PIN & (1 << ULTRA_ECHO_2))
 438:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
 43c:	84 ff       	sbrs	r24, 4
 43e:	06 c0       	rjmp	.+12     	; 0x44c <_ZN10ULTRASONIC18measure_distance_2Ev+0x44>
 440:	e3 e6       	ldi	r30, 0x63	; 99
 442:	f0 e0       	ldi	r31, 0x00	; 0
	{
		if(TCNT0 > 255)
 444:	82 b7       	in	r24, 0x32	; 50
		if(TCNT0 > 255)
		return 0;
	}
	
	TCNT1 = 0;
	while(ULTRA_PIN & (1 << ULTRA_ECHO_2))
 446:	80 81       	ld	r24, Z
 448:	84 fd       	sbrc	r24, 4
 44a:	fc cf       	rjmp	.-8      	; 0x444 <_ZN10ULTRASONIC18measure_distance_2Ev+0x3c>
			TCNT0 = 0;
			break;
		}
	}
	
	double pulse_width = 1000000.0*TCNT0*PRESCALER/F_CPU;
 44c:	62 b7       	in	r22, 0x32	; 50
 44e:	70 e0       	ldi	r23, 0x00	; 0
 450:	80 e0       	ldi	r24, 0x00	; 0
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	b0 d0       	rcall	.+352    	; 0x5b6 <__floatsisf>
 456:	20 e0       	ldi	r18, 0x00	; 0
 458:	34 e2       	ldi	r19, 0x24	; 36
 45a:	44 e7       	ldi	r20, 0x74	; 116
 45c:	59 e4       	ldi	r21, 0x49	; 73
 45e:	37 d1       	rcall	.+622    	; 0x6ce <__mulsf3>
 460:	20 e0       	ldi	r18, 0x00	; 0
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	40 e8       	ldi	r20, 0x80	; 128
 466:	54 e4       	ldi	r21, 0x44	; 68
 468:	32 d1       	rcall	.+612    	; 0x6ce <__mulsf3>
 46a:	20 e0       	ldi	r18, 0x00	; 0
 46c:	34 e2       	ldi	r19, 0x24	; 36
 46e:	44 e7       	ldi	r20, 0x74	; 116
 470:	5b e4       	ldi	r21, 0x4B	; 75
 472:	0b d0       	rcall	.+22     	; 0x48a <__divsf3>
 474:	20 e0       	ldi	r18, 0x00	; 0
 476:	30 e0       	ldi	r19, 0x00	; 0
 478:	48 e6       	ldi	r20, 0x68	; 104
 47a:	52 e4       	ldi	r21, 0x42	; 66
 47c:	06 d0       	rcall	.+12     	; 0x48a <__divsf3>
 47e:	6d d0       	rcall	.+218    	; 0x55a <__fixunssfsi>
 480:	86 2f       	mov	r24, r22
	
	return pulse_width / 58;
 482:	0f 90       	pop	r0
 484:	df 91       	pop	r29
 486:	cf 91       	pop	r28
 488:	08 95       	ret

0000048a <__divsf3>:
 48a:	0c d0       	rcall	.+24     	; 0x4a4 <__divsf3x>
 48c:	e6 c0       	rjmp	.+460    	; 0x65a <__fp_round>
 48e:	de d0       	rcall	.+444    	; 0x64c <__fp_pscB>
 490:	40 f0       	brcs	.+16     	; 0x4a2 <__divsf3+0x18>
 492:	d5 d0       	rcall	.+426    	; 0x63e <__fp_pscA>
 494:	30 f0       	brcs	.+12     	; 0x4a2 <__divsf3+0x18>
 496:	21 f4       	brne	.+8      	; 0x4a0 <__divsf3+0x16>
 498:	5f 3f       	cpi	r21, 0xFF	; 255
 49a:	19 f0       	breq	.+6      	; 0x4a2 <__divsf3+0x18>
 49c:	c7 c0       	rjmp	.+398    	; 0x62c <__fp_inf>
 49e:	51 11       	cpse	r21, r1
 4a0:	10 c1       	rjmp	.+544    	; 0x6c2 <__fp_szero>
 4a2:	ca c0       	rjmp	.+404    	; 0x638 <__fp_nan>

000004a4 <__divsf3x>:
 4a4:	eb d0       	rcall	.+470    	; 0x67c <__fp_split3>
 4a6:	98 f3       	brcs	.-26     	; 0x48e <__divsf3+0x4>

000004a8 <__divsf3_pse>:
 4a8:	99 23       	and	r25, r25
 4aa:	c9 f3       	breq	.-14     	; 0x49e <__divsf3+0x14>
 4ac:	55 23       	and	r21, r21
 4ae:	b1 f3       	breq	.-20     	; 0x49c <__divsf3+0x12>
 4b0:	95 1b       	sub	r25, r21
 4b2:	55 0b       	sbc	r21, r21
 4b4:	bb 27       	eor	r27, r27
 4b6:	aa 27       	eor	r26, r26
 4b8:	62 17       	cp	r22, r18
 4ba:	73 07       	cpc	r23, r19
 4bc:	84 07       	cpc	r24, r20
 4be:	38 f0       	brcs	.+14     	; 0x4ce <__divsf3_pse+0x26>
 4c0:	9f 5f       	subi	r25, 0xFF	; 255
 4c2:	5f 4f       	sbci	r21, 0xFF	; 255
 4c4:	22 0f       	add	r18, r18
 4c6:	33 1f       	adc	r19, r19
 4c8:	44 1f       	adc	r20, r20
 4ca:	aa 1f       	adc	r26, r26
 4cc:	a9 f3       	breq	.-22     	; 0x4b8 <__divsf3_pse+0x10>
 4ce:	33 d0       	rcall	.+102    	; 0x536 <__divsf3_pse+0x8e>
 4d0:	0e 2e       	mov	r0, r30
 4d2:	3a f0       	brmi	.+14     	; 0x4e2 <__divsf3_pse+0x3a>
 4d4:	e0 e8       	ldi	r30, 0x80	; 128
 4d6:	30 d0       	rcall	.+96     	; 0x538 <__divsf3_pse+0x90>
 4d8:	91 50       	subi	r25, 0x01	; 1
 4da:	50 40       	sbci	r21, 0x00	; 0
 4dc:	e6 95       	lsr	r30
 4de:	00 1c       	adc	r0, r0
 4e0:	ca f7       	brpl	.-14     	; 0x4d4 <__divsf3_pse+0x2c>
 4e2:	29 d0       	rcall	.+82     	; 0x536 <__divsf3_pse+0x8e>
 4e4:	fe 2f       	mov	r31, r30
 4e6:	27 d0       	rcall	.+78     	; 0x536 <__divsf3_pse+0x8e>
 4e8:	66 0f       	add	r22, r22
 4ea:	77 1f       	adc	r23, r23
 4ec:	88 1f       	adc	r24, r24
 4ee:	bb 1f       	adc	r27, r27
 4f0:	26 17       	cp	r18, r22
 4f2:	37 07       	cpc	r19, r23
 4f4:	48 07       	cpc	r20, r24
 4f6:	ab 07       	cpc	r26, r27
 4f8:	b0 e8       	ldi	r27, 0x80	; 128
 4fa:	09 f0       	breq	.+2      	; 0x4fe <__divsf3_pse+0x56>
 4fc:	bb 0b       	sbc	r27, r27
 4fe:	80 2d       	mov	r24, r0
 500:	bf 01       	movw	r22, r30
 502:	ff 27       	eor	r31, r31
 504:	93 58       	subi	r25, 0x83	; 131
 506:	5f 4f       	sbci	r21, 0xFF	; 255
 508:	2a f0       	brmi	.+10     	; 0x514 <__divsf3_pse+0x6c>
 50a:	9e 3f       	cpi	r25, 0xFE	; 254
 50c:	51 05       	cpc	r21, r1
 50e:	68 f0       	brcs	.+26     	; 0x52a <__divsf3_pse+0x82>
 510:	8d c0       	rjmp	.+282    	; 0x62c <__fp_inf>
 512:	d7 c0       	rjmp	.+430    	; 0x6c2 <__fp_szero>
 514:	5f 3f       	cpi	r21, 0xFF	; 255
 516:	ec f3       	brlt	.-6      	; 0x512 <__divsf3_pse+0x6a>
 518:	98 3e       	cpi	r25, 0xE8	; 232
 51a:	dc f3       	brlt	.-10     	; 0x512 <__divsf3_pse+0x6a>
 51c:	86 95       	lsr	r24
 51e:	77 95       	ror	r23
 520:	67 95       	ror	r22
 522:	b7 95       	ror	r27
 524:	f7 95       	ror	r31
 526:	9f 5f       	subi	r25, 0xFF	; 255
 528:	c9 f7       	brne	.-14     	; 0x51c <__divsf3_pse+0x74>
 52a:	88 0f       	add	r24, r24
 52c:	91 1d       	adc	r25, r1
 52e:	96 95       	lsr	r25
 530:	87 95       	ror	r24
 532:	97 f9       	bld	r25, 7
 534:	08 95       	ret
 536:	e1 e0       	ldi	r30, 0x01	; 1
 538:	66 0f       	add	r22, r22
 53a:	77 1f       	adc	r23, r23
 53c:	88 1f       	adc	r24, r24
 53e:	bb 1f       	adc	r27, r27
 540:	62 17       	cp	r22, r18
 542:	73 07       	cpc	r23, r19
 544:	84 07       	cpc	r24, r20
 546:	ba 07       	cpc	r27, r26
 548:	20 f0       	brcs	.+8      	; 0x552 <__divsf3_pse+0xaa>
 54a:	62 1b       	sub	r22, r18
 54c:	73 0b       	sbc	r23, r19
 54e:	84 0b       	sbc	r24, r20
 550:	ba 0b       	sbc	r27, r26
 552:	ee 1f       	adc	r30, r30
 554:	88 f7       	brcc	.-30     	; 0x538 <__divsf3_pse+0x90>
 556:	e0 95       	com	r30
 558:	08 95       	ret

0000055a <__fixunssfsi>:
 55a:	98 d0       	rcall	.+304    	; 0x68c <__fp_splitA>
 55c:	88 f0       	brcs	.+34     	; 0x580 <__fixunssfsi+0x26>
 55e:	9f 57       	subi	r25, 0x7F	; 127
 560:	90 f0       	brcs	.+36     	; 0x586 <__fixunssfsi+0x2c>
 562:	b9 2f       	mov	r27, r25
 564:	99 27       	eor	r25, r25
 566:	b7 51       	subi	r27, 0x17	; 23
 568:	a0 f0       	brcs	.+40     	; 0x592 <__fixunssfsi+0x38>
 56a:	d1 f0       	breq	.+52     	; 0x5a0 <__fixunssfsi+0x46>
 56c:	66 0f       	add	r22, r22
 56e:	77 1f       	adc	r23, r23
 570:	88 1f       	adc	r24, r24
 572:	99 1f       	adc	r25, r25
 574:	1a f0       	brmi	.+6      	; 0x57c <__fixunssfsi+0x22>
 576:	ba 95       	dec	r27
 578:	c9 f7       	brne	.-14     	; 0x56c <__fixunssfsi+0x12>
 57a:	12 c0       	rjmp	.+36     	; 0x5a0 <__fixunssfsi+0x46>
 57c:	b1 30       	cpi	r27, 0x01	; 1
 57e:	81 f0       	breq	.+32     	; 0x5a0 <__fixunssfsi+0x46>
 580:	9f d0       	rcall	.+318    	; 0x6c0 <__fp_zero>
 582:	b1 e0       	ldi	r27, 0x01	; 1
 584:	08 95       	ret
 586:	9c c0       	rjmp	.+312    	; 0x6c0 <__fp_zero>
 588:	67 2f       	mov	r22, r23
 58a:	78 2f       	mov	r23, r24
 58c:	88 27       	eor	r24, r24
 58e:	b8 5f       	subi	r27, 0xF8	; 248
 590:	39 f0       	breq	.+14     	; 0x5a0 <__fixunssfsi+0x46>
 592:	b9 3f       	cpi	r27, 0xF9	; 249
 594:	cc f3       	brlt	.-14     	; 0x588 <__fixunssfsi+0x2e>
 596:	86 95       	lsr	r24
 598:	77 95       	ror	r23
 59a:	67 95       	ror	r22
 59c:	b3 95       	inc	r27
 59e:	d9 f7       	brne	.-10     	; 0x596 <__fixunssfsi+0x3c>
 5a0:	3e f4       	brtc	.+14     	; 0x5b0 <__fixunssfsi+0x56>
 5a2:	90 95       	com	r25
 5a4:	80 95       	com	r24
 5a6:	70 95       	com	r23
 5a8:	61 95       	neg	r22
 5aa:	7f 4f       	sbci	r23, 0xFF	; 255
 5ac:	8f 4f       	sbci	r24, 0xFF	; 255
 5ae:	9f 4f       	sbci	r25, 0xFF	; 255
 5b0:	08 95       	ret

000005b2 <__floatunsisf>:
 5b2:	e8 94       	clt
 5b4:	09 c0       	rjmp	.+18     	; 0x5c8 <__floatsisf+0x12>

000005b6 <__floatsisf>:
 5b6:	97 fb       	bst	r25, 7
 5b8:	3e f4       	brtc	.+14     	; 0x5c8 <__floatsisf+0x12>
 5ba:	90 95       	com	r25
 5bc:	80 95       	com	r24
 5be:	70 95       	com	r23
 5c0:	61 95       	neg	r22
 5c2:	7f 4f       	sbci	r23, 0xFF	; 255
 5c4:	8f 4f       	sbci	r24, 0xFF	; 255
 5c6:	9f 4f       	sbci	r25, 0xFF	; 255
 5c8:	99 23       	and	r25, r25
 5ca:	a9 f0       	breq	.+42     	; 0x5f6 <__floatsisf+0x40>
 5cc:	f9 2f       	mov	r31, r25
 5ce:	96 e9       	ldi	r25, 0x96	; 150
 5d0:	bb 27       	eor	r27, r27
 5d2:	93 95       	inc	r25
 5d4:	f6 95       	lsr	r31
 5d6:	87 95       	ror	r24
 5d8:	77 95       	ror	r23
 5da:	67 95       	ror	r22
 5dc:	b7 95       	ror	r27
 5de:	f1 11       	cpse	r31, r1
 5e0:	f8 cf       	rjmp	.-16     	; 0x5d2 <__floatsisf+0x1c>
 5e2:	fa f4       	brpl	.+62     	; 0x622 <__floatsisf+0x6c>
 5e4:	bb 0f       	add	r27, r27
 5e6:	11 f4       	brne	.+4      	; 0x5ec <__floatsisf+0x36>
 5e8:	60 ff       	sbrs	r22, 0
 5ea:	1b c0       	rjmp	.+54     	; 0x622 <__floatsisf+0x6c>
 5ec:	6f 5f       	subi	r22, 0xFF	; 255
 5ee:	7f 4f       	sbci	r23, 0xFF	; 255
 5f0:	8f 4f       	sbci	r24, 0xFF	; 255
 5f2:	9f 4f       	sbci	r25, 0xFF	; 255
 5f4:	16 c0       	rjmp	.+44     	; 0x622 <__floatsisf+0x6c>
 5f6:	88 23       	and	r24, r24
 5f8:	11 f0       	breq	.+4      	; 0x5fe <__floatsisf+0x48>
 5fa:	96 e9       	ldi	r25, 0x96	; 150
 5fc:	11 c0       	rjmp	.+34     	; 0x620 <__floatsisf+0x6a>
 5fe:	77 23       	and	r23, r23
 600:	21 f0       	breq	.+8      	; 0x60a <__floatsisf+0x54>
 602:	9e e8       	ldi	r25, 0x8E	; 142
 604:	87 2f       	mov	r24, r23
 606:	76 2f       	mov	r23, r22
 608:	05 c0       	rjmp	.+10     	; 0x614 <__floatsisf+0x5e>
 60a:	66 23       	and	r22, r22
 60c:	71 f0       	breq	.+28     	; 0x62a <__floatsisf+0x74>
 60e:	96 e8       	ldi	r25, 0x86	; 134
 610:	86 2f       	mov	r24, r22
 612:	70 e0       	ldi	r23, 0x00	; 0
 614:	60 e0       	ldi	r22, 0x00	; 0
 616:	2a f0       	brmi	.+10     	; 0x622 <__floatsisf+0x6c>
 618:	9a 95       	dec	r25
 61a:	66 0f       	add	r22, r22
 61c:	77 1f       	adc	r23, r23
 61e:	88 1f       	adc	r24, r24
 620:	da f7       	brpl	.-10     	; 0x618 <__floatsisf+0x62>
 622:	88 0f       	add	r24, r24
 624:	96 95       	lsr	r25
 626:	87 95       	ror	r24
 628:	97 f9       	bld	r25, 7
 62a:	08 95       	ret

0000062c <__fp_inf>:
 62c:	97 f9       	bld	r25, 7
 62e:	9f 67       	ori	r25, 0x7F	; 127
 630:	80 e8       	ldi	r24, 0x80	; 128
 632:	70 e0       	ldi	r23, 0x00	; 0
 634:	60 e0       	ldi	r22, 0x00	; 0
 636:	08 95       	ret

00000638 <__fp_nan>:
 638:	9f ef       	ldi	r25, 0xFF	; 255
 63a:	80 ec       	ldi	r24, 0xC0	; 192
 63c:	08 95       	ret

0000063e <__fp_pscA>:
 63e:	00 24       	eor	r0, r0
 640:	0a 94       	dec	r0
 642:	16 16       	cp	r1, r22
 644:	17 06       	cpc	r1, r23
 646:	18 06       	cpc	r1, r24
 648:	09 06       	cpc	r0, r25
 64a:	08 95       	ret

0000064c <__fp_pscB>:
 64c:	00 24       	eor	r0, r0
 64e:	0a 94       	dec	r0
 650:	12 16       	cp	r1, r18
 652:	13 06       	cpc	r1, r19
 654:	14 06       	cpc	r1, r20
 656:	05 06       	cpc	r0, r21
 658:	08 95       	ret

0000065a <__fp_round>:
 65a:	09 2e       	mov	r0, r25
 65c:	03 94       	inc	r0
 65e:	00 0c       	add	r0, r0
 660:	11 f4       	brne	.+4      	; 0x666 <__fp_round+0xc>
 662:	88 23       	and	r24, r24
 664:	52 f0       	brmi	.+20     	; 0x67a <__fp_round+0x20>
 666:	bb 0f       	add	r27, r27
 668:	40 f4       	brcc	.+16     	; 0x67a <__fp_round+0x20>
 66a:	bf 2b       	or	r27, r31
 66c:	11 f4       	brne	.+4      	; 0x672 <__fp_round+0x18>
 66e:	60 ff       	sbrs	r22, 0
 670:	04 c0       	rjmp	.+8      	; 0x67a <__fp_round+0x20>
 672:	6f 5f       	subi	r22, 0xFF	; 255
 674:	7f 4f       	sbci	r23, 0xFF	; 255
 676:	8f 4f       	sbci	r24, 0xFF	; 255
 678:	9f 4f       	sbci	r25, 0xFF	; 255
 67a:	08 95       	ret

0000067c <__fp_split3>:
 67c:	57 fd       	sbrc	r21, 7
 67e:	90 58       	subi	r25, 0x80	; 128
 680:	44 0f       	add	r20, r20
 682:	55 1f       	adc	r21, r21
 684:	59 f0       	breq	.+22     	; 0x69c <__fp_splitA+0x10>
 686:	5f 3f       	cpi	r21, 0xFF	; 255
 688:	71 f0       	breq	.+28     	; 0x6a6 <__fp_splitA+0x1a>
 68a:	47 95       	ror	r20

0000068c <__fp_splitA>:
 68c:	88 0f       	add	r24, r24
 68e:	97 fb       	bst	r25, 7
 690:	99 1f       	adc	r25, r25
 692:	61 f0       	breq	.+24     	; 0x6ac <__fp_splitA+0x20>
 694:	9f 3f       	cpi	r25, 0xFF	; 255
 696:	79 f0       	breq	.+30     	; 0x6b6 <__fp_splitA+0x2a>
 698:	87 95       	ror	r24
 69a:	08 95       	ret
 69c:	12 16       	cp	r1, r18
 69e:	13 06       	cpc	r1, r19
 6a0:	14 06       	cpc	r1, r20
 6a2:	55 1f       	adc	r21, r21
 6a4:	f2 cf       	rjmp	.-28     	; 0x68a <__fp_split3+0xe>
 6a6:	46 95       	lsr	r20
 6a8:	f1 df       	rcall	.-30     	; 0x68c <__fp_splitA>
 6aa:	08 c0       	rjmp	.+16     	; 0x6bc <__fp_splitA+0x30>
 6ac:	16 16       	cp	r1, r22
 6ae:	17 06       	cpc	r1, r23
 6b0:	18 06       	cpc	r1, r24
 6b2:	99 1f       	adc	r25, r25
 6b4:	f1 cf       	rjmp	.-30     	; 0x698 <__fp_splitA+0xc>
 6b6:	86 95       	lsr	r24
 6b8:	71 05       	cpc	r23, r1
 6ba:	61 05       	cpc	r22, r1
 6bc:	08 94       	sec
 6be:	08 95       	ret

000006c0 <__fp_zero>:
 6c0:	e8 94       	clt

000006c2 <__fp_szero>:
 6c2:	bb 27       	eor	r27, r27
 6c4:	66 27       	eor	r22, r22
 6c6:	77 27       	eor	r23, r23
 6c8:	cb 01       	movw	r24, r22
 6ca:	97 f9       	bld	r25, 7
 6cc:	08 95       	ret

000006ce <__mulsf3>:
 6ce:	0b d0       	rcall	.+22     	; 0x6e6 <__mulsf3x>
 6d0:	c4 cf       	rjmp	.-120    	; 0x65a <__fp_round>
 6d2:	b5 df       	rcall	.-150    	; 0x63e <__fp_pscA>
 6d4:	28 f0       	brcs	.+10     	; 0x6e0 <__mulsf3+0x12>
 6d6:	ba df       	rcall	.-140    	; 0x64c <__fp_pscB>
 6d8:	18 f0       	brcs	.+6      	; 0x6e0 <__mulsf3+0x12>
 6da:	95 23       	and	r25, r21
 6dc:	09 f0       	breq	.+2      	; 0x6e0 <__mulsf3+0x12>
 6de:	a6 cf       	rjmp	.-180    	; 0x62c <__fp_inf>
 6e0:	ab cf       	rjmp	.-170    	; 0x638 <__fp_nan>
 6e2:	11 24       	eor	r1, r1
 6e4:	ee cf       	rjmp	.-36     	; 0x6c2 <__fp_szero>

000006e6 <__mulsf3x>:
 6e6:	ca df       	rcall	.-108    	; 0x67c <__fp_split3>
 6e8:	a0 f3       	brcs	.-24     	; 0x6d2 <__mulsf3+0x4>

000006ea <__mulsf3_pse>:
 6ea:	95 9f       	mul	r25, r21
 6ec:	d1 f3       	breq	.-12     	; 0x6e2 <__mulsf3+0x14>
 6ee:	95 0f       	add	r25, r21
 6f0:	50 e0       	ldi	r21, 0x00	; 0
 6f2:	55 1f       	adc	r21, r21
 6f4:	62 9f       	mul	r22, r18
 6f6:	f0 01       	movw	r30, r0
 6f8:	72 9f       	mul	r23, r18
 6fa:	bb 27       	eor	r27, r27
 6fc:	f0 0d       	add	r31, r0
 6fe:	b1 1d       	adc	r27, r1
 700:	63 9f       	mul	r22, r19
 702:	aa 27       	eor	r26, r26
 704:	f0 0d       	add	r31, r0
 706:	b1 1d       	adc	r27, r1
 708:	aa 1f       	adc	r26, r26
 70a:	64 9f       	mul	r22, r20
 70c:	66 27       	eor	r22, r22
 70e:	b0 0d       	add	r27, r0
 710:	a1 1d       	adc	r26, r1
 712:	66 1f       	adc	r22, r22
 714:	82 9f       	mul	r24, r18
 716:	22 27       	eor	r18, r18
 718:	b0 0d       	add	r27, r0
 71a:	a1 1d       	adc	r26, r1
 71c:	62 1f       	adc	r22, r18
 71e:	73 9f       	mul	r23, r19
 720:	b0 0d       	add	r27, r0
 722:	a1 1d       	adc	r26, r1
 724:	62 1f       	adc	r22, r18
 726:	83 9f       	mul	r24, r19
 728:	a0 0d       	add	r26, r0
 72a:	61 1d       	adc	r22, r1
 72c:	22 1f       	adc	r18, r18
 72e:	74 9f       	mul	r23, r20
 730:	33 27       	eor	r19, r19
 732:	a0 0d       	add	r26, r0
 734:	61 1d       	adc	r22, r1
 736:	23 1f       	adc	r18, r19
 738:	84 9f       	mul	r24, r20
 73a:	60 0d       	add	r22, r0
 73c:	21 1d       	adc	r18, r1
 73e:	82 2f       	mov	r24, r18
 740:	76 2f       	mov	r23, r22
 742:	6a 2f       	mov	r22, r26
 744:	11 24       	eor	r1, r1
 746:	9f 57       	subi	r25, 0x7F	; 127
 748:	50 40       	sbci	r21, 0x00	; 0
 74a:	8a f0       	brmi	.+34     	; 0x76e <__mulsf3_pse+0x84>
 74c:	e1 f0       	breq	.+56     	; 0x786 <__mulsf3_pse+0x9c>
 74e:	88 23       	and	r24, r24
 750:	4a f0       	brmi	.+18     	; 0x764 <__mulsf3_pse+0x7a>
 752:	ee 0f       	add	r30, r30
 754:	ff 1f       	adc	r31, r31
 756:	bb 1f       	adc	r27, r27
 758:	66 1f       	adc	r22, r22
 75a:	77 1f       	adc	r23, r23
 75c:	88 1f       	adc	r24, r24
 75e:	91 50       	subi	r25, 0x01	; 1
 760:	50 40       	sbci	r21, 0x00	; 0
 762:	a9 f7       	brne	.-22     	; 0x74e <__mulsf3_pse+0x64>
 764:	9e 3f       	cpi	r25, 0xFE	; 254
 766:	51 05       	cpc	r21, r1
 768:	70 f0       	brcs	.+28     	; 0x786 <__mulsf3_pse+0x9c>
 76a:	60 cf       	rjmp	.-320    	; 0x62c <__fp_inf>
 76c:	aa cf       	rjmp	.-172    	; 0x6c2 <__fp_szero>
 76e:	5f 3f       	cpi	r21, 0xFF	; 255
 770:	ec f3       	brlt	.-6      	; 0x76c <__mulsf3_pse+0x82>
 772:	98 3e       	cpi	r25, 0xE8	; 232
 774:	dc f3       	brlt	.-10     	; 0x76c <__mulsf3_pse+0x82>
 776:	86 95       	lsr	r24
 778:	77 95       	ror	r23
 77a:	67 95       	ror	r22
 77c:	b7 95       	ror	r27
 77e:	f7 95       	ror	r31
 780:	e7 95       	ror	r30
 782:	9f 5f       	subi	r25, 0xFF	; 255
 784:	c1 f7       	brne	.-16     	; 0x776 <__mulsf3_pse+0x8c>
 786:	fe 2b       	or	r31, r30
 788:	88 0f       	add	r24, r24
 78a:	91 1d       	adc	r25, r1
 78c:	96 95       	lsr	r25
 78e:	87 95       	ror	r24
 790:	97 f9       	bld	r25, 7
 792:	08 95       	ret

00000794 <__tablejump2__>:
 794:	ee 0f       	add	r30, r30
 796:	ff 1f       	adc	r31, r31
 798:	00 24       	eor	r0, r0
 79a:	00 1c       	adc	r0, r0
 79c:	0b be       	out	0x3b, r0	; 59
 79e:	07 90       	elpm	r0, Z+
 7a0:	f6 91       	elpm	r31, Z
 7a2:	e0 2d       	mov	r30, r0
 7a4:	09 94       	ijmp

000007a6 <__do_global_dtors>:
 7a6:	10 e0       	ldi	r17, 0x00	; 0
 7a8:	c7 e4       	ldi	r28, 0x47	; 71
 7aa:	d0 e0       	ldi	r29, 0x00	; 0
 7ac:	03 c0       	rjmp	.+6      	; 0x7b4 <__do_global_dtors+0xe>
 7ae:	fe 01       	movw	r30, r28
 7b0:	f1 df       	rcall	.-30     	; 0x794 <__tablejump2__>
 7b2:	21 96       	adiw	r28, 0x01	; 1
 7b4:	c8 34       	cpi	r28, 0x48	; 72
 7b6:	d1 07       	cpc	r29, r17
 7b8:	d1 f7       	brne	.-12     	; 0x7ae <__do_global_dtors+0x8>
 7ba:	f8 94       	cli

000007bc <__stop_program>:
 7bc:	ff cf       	rjmp	.-2      	; 0x7bc <__stop_program>
